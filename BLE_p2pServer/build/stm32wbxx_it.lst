ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wbxx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB1261:
  28              		.file 1 "Core/Src/stm32wbxx_it.c"
   1:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32wbxx_it.c **** /**
   3:Core/Src/stm32wbxx_it.c ****   ******************************************************************************
   4:Core/Src/stm32wbxx_it.c ****   * @file    stm32wbxx_it.c
   5:Core/Src/stm32wbxx_it.c ****   * @author  MCD Application Team
   6:Core/Src/stm32wbxx_it.c ****   * @brief   Main Interrupt Service Routines.
   7:Core/Src/stm32wbxx_it.c ****   *          This file provides template for all exceptions handler and
   8:Core/Src/stm32wbxx_it.c ****   *          peripherals interrupt service routine.
   9:Core/Src/stm32wbxx_it.c ****   ******************************************************************************
  10:Core/Src/stm32wbxx_it.c ****   * @attention
  11:Core/Src/stm32wbxx_it.c ****   *
  12:Core/Src/stm32wbxx_it.c ****   * Copyright (c) 2019-2021 STMicroelectronics.
  13:Core/Src/stm32wbxx_it.c ****   * All rights reserved.
  14:Core/Src/stm32wbxx_it.c ****   *
  15:Core/Src/stm32wbxx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  16:Core/Src/stm32wbxx_it.c ****   * in the root directory of this software component.
  17:Core/Src/stm32wbxx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  18:Core/Src/stm32wbxx_it.c ****   *
  19:Core/Src/stm32wbxx_it.c ****   ******************************************************************************
  20:Core/Src/stm32wbxx_it.c ****   */
  21:Core/Src/stm32wbxx_it.c **** /* USER CODE END Header */
  22:Core/Src/stm32wbxx_it.c **** 
  23:Core/Src/stm32wbxx_it.c **** /* Includes ------------------------------------------------------------------*/
  24:Core/Src/stm32wbxx_it.c **** #include "main.h"
  25:Core/Src/stm32wbxx_it.c **** #include "stm32wbxx_it.h"
  26:Core/Src/stm32wbxx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/stm32wbxx_it.c **** 
  29:Core/Src/stm32wbxx_it.c **** /* USER CODE END Includes */
  30:Core/Src/stm32wbxx_it.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 2


  31:Core/Src/stm32wbxx_it.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN TD */
  33:Core/Src/stm32wbxx_it.c **** 
  34:Core/Src/stm32wbxx_it.c **** /* USER CODE END TD */
  35:Core/Src/stm32wbxx_it.c **** 
  36:Core/Src/stm32wbxx_it.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN PD */
  38:Core/Src/stm32wbxx_it.c ****  
  39:Core/Src/stm32wbxx_it.c **** /* USER CODE END PD */
  40:Core/Src/stm32wbxx_it.c **** 
  41:Core/Src/stm32wbxx_it.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN PM */
  43:Core/Src/stm32wbxx_it.c **** 
  44:Core/Src/stm32wbxx_it.c **** /* USER CODE END PM */
  45:Core/Src/stm32wbxx_it.c **** 
  46:Core/Src/stm32wbxx_it.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN PV */
  48:Core/Src/stm32wbxx_it.c **** 
  49:Core/Src/stm32wbxx_it.c **** /* USER CODE END PV */
  50:Core/Src/stm32wbxx_it.c **** 
  51:Core/Src/stm32wbxx_it.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/stm32wbxx_it.c **** 
  54:Core/Src/stm32wbxx_it.c **** /* USER CODE END PFP */
  55:Core/Src/stm32wbxx_it.c **** 
  56:Core/Src/stm32wbxx_it.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/stm32wbxx_it.c **** 
  59:Core/Src/stm32wbxx_it.c **** /* USER CODE END 0 */
  60:Core/Src/stm32wbxx_it.c **** 
  61:Core/Src/stm32wbxx_it.c **** /* External variables --------------------------------------------------------*/
  62:Core/Src/stm32wbxx_it.c **** extern IPCC_HandleTypeDef hipcc;
  63:Core/Src/stm32wbxx_it.c **** extern DMA_HandleTypeDef hdma_lpuart1_tx;
  64:Core/Src/stm32wbxx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  65:Core/Src/stm32wbxx_it.c **** extern UART_HandleTypeDef hlpuart1;
  66:Core/Src/stm32wbxx_it.c **** extern UART_HandleTypeDef huart1;
  67:Core/Src/stm32wbxx_it.c **** extern RTC_HandleTypeDef hrtc;
  68:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN EV */
  69:Core/Src/stm32wbxx_it.c **** 
  70:Core/Src/stm32wbxx_it.c **** /* USER CODE END EV */
  71:Core/Src/stm32wbxx_it.c **** 
  72:Core/Src/stm32wbxx_it.c **** /******************************************************************************/
  73:Core/Src/stm32wbxx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  74:Core/Src/stm32wbxx_it.c **** /******************************************************************************/
  75:Core/Src/stm32wbxx_it.c **** /**
  76:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Non maskable interrupt.
  77:Core/Src/stm32wbxx_it.c ****   */
  78:Core/Src/stm32wbxx_it.c **** void NMI_Handler(void)
  79:Core/Src/stm32wbxx_it.c **** {
  29              		.loc 1 79 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  80:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  81:Core/Src/stm32wbxx_it.c **** 
  82:Core/Src/stm32wbxx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 3


  83:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32wbxx_it.c **** 
  85:Core/Src/stm32wbxx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  86:Core/Src/stm32wbxx_it.c **** }
  34              		.loc 1 86 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE1261:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB1262:
  87:Core/Src/stm32wbxx_it.c **** 
  88:Core/Src/stm32wbxx_it.c **** /**
  89:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Hard fault interrupt.
  90:Core/Src/stm32wbxx_it.c ****   */
  91:Core/Src/stm32wbxx_it.c **** void HardFault_Handler(void)
  92:Core/Src/stm32wbxx_it.c **** {
  49              		.loc 1 92 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  93:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  94:Core/Src/stm32wbxx_it.c **** 
  95:Core/Src/stm32wbxx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  96:Core/Src/stm32wbxx_it.c ****   while (1)
  56              		.loc 1 96 3 discriminator 1 view .LVU3
  97:Core/Src/stm32wbxx_it.c ****   {
  98:Core/Src/stm32wbxx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  99:Core/Src/stm32wbxx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 100:Core/Src/stm32wbxx_it.c ****   }
  57              		.loc 1 100 3 discriminator 1 view .LVU4
  96:Core/Src/stm32wbxx_it.c ****   {
  58              		.loc 1 96 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE1262:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB1263:
 101:Core/Src/stm32wbxx_it.c **** }
 102:Core/Src/stm32wbxx_it.c **** 
 103:Core/Src/stm32wbxx_it.c **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 4


 104:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Memory management fault.
 105:Core/Src/stm32wbxx_it.c ****   */
 106:Core/Src/stm32wbxx_it.c **** void MemManage_Handler(void)
 107:Core/Src/stm32wbxx_it.c **** {
  73              		.loc 1 107 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 108:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 109:Core/Src/stm32wbxx_it.c **** 
 110:Core/Src/stm32wbxx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 111:Core/Src/stm32wbxx_it.c ****   while (1)
  80              		.loc 1 111 3 discriminator 1 view .LVU7
 112:Core/Src/stm32wbxx_it.c ****   {
 113:Core/Src/stm32wbxx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32wbxx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32wbxx_it.c ****   }
  81              		.loc 1 115 3 discriminator 1 view .LVU8
 111:Core/Src/stm32wbxx_it.c ****   {
  82              		.loc 1 111 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE1263:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB1264:
 116:Core/Src/stm32wbxx_it.c **** }
 117:Core/Src/stm32wbxx_it.c **** 
 118:Core/Src/stm32wbxx_it.c **** /**
 119:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 120:Core/Src/stm32wbxx_it.c ****   */
 121:Core/Src/stm32wbxx_it.c **** void BusFault_Handler(void)
 122:Core/Src/stm32wbxx_it.c **** {
  97              		.loc 1 122 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 123:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 124:Core/Src/stm32wbxx_it.c **** 
 125:Core/Src/stm32wbxx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 126:Core/Src/stm32wbxx_it.c ****   while (1)
 104              		.loc 1 126 3 discriminator 1 view .LVU11
 127:Core/Src/stm32wbxx_it.c ****   {
 128:Core/Src/stm32wbxx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 129:Core/Src/stm32wbxx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 5


 130:Core/Src/stm32wbxx_it.c ****   }
 105              		.loc 1 130 3 discriminator 1 view .LVU12
 126:Core/Src/stm32wbxx_it.c ****   {
 106              		.loc 1 126 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE1264:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB1265:
 131:Core/Src/stm32wbxx_it.c **** }
 132:Core/Src/stm32wbxx_it.c **** 
 133:Core/Src/stm32wbxx_it.c **** /**
 134:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 135:Core/Src/stm32wbxx_it.c ****   */
 136:Core/Src/stm32wbxx_it.c **** void UsageFault_Handler(void)
 137:Core/Src/stm32wbxx_it.c **** {
 121              		.loc 1 137 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 138:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 139:Core/Src/stm32wbxx_it.c **** 
 140:Core/Src/stm32wbxx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 141:Core/Src/stm32wbxx_it.c ****   while (1)
 128              		.loc 1 141 3 discriminator 1 view .LVU15
 142:Core/Src/stm32wbxx_it.c ****   {
 143:Core/Src/stm32wbxx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32wbxx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32wbxx_it.c ****   }
 129              		.loc 1 145 3 discriminator 1 view .LVU16
 141:Core/Src/stm32wbxx_it.c ****   {
 130              		.loc 1 141 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE1265:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB1266:
 146:Core/Src/stm32wbxx_it.c **** }
 147:Core/Src/stm32wbxx_it.c **** 
 148:Core/Src/stm32wbxx_it.c **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 6


 149:Core/Src/stm32wbxx_it.c ****   * @brief This function handles System service call via SWI instruction.
 150:Core/Src/stm32wbxx_it.c ****   */
 151:Core/Src/stm32wbxx_it.c **** void SVC_Handler(void)
 152:Core/Src/stm32wbxx_it.c **** {
 145              		.loc 1 152 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 153:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 154:Core/Src/stm32wbxx_it.c **** 
 155:Core/Src/stm32wbxx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 156:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 157:Core/Src/stm32wbxx_it.c **** 
 158:Core/Src/stm32wbxx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 159:Core/Src/stm32wbxx_it.c **** }
 150              		.loc 1 159 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE1266:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB1267:
 160:Core/Src/stm32wbxx_it.c **** 
 161:Core/Src/stm32wbxx_it.c **** /**
 162:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Debug monitor.
 163:Core/Src/stm32wbxx_it.c ****   */
 164:Core/Src/stm32wbxx_it.c **** void DebugMon_Handler(void)
 165:Core/Src/stm32wbxx_it.c **** {
 165              		.loc 1 165 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 166:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 167:Core/Src/stm32wbxx_it.c **** 
 168:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 169:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 170:Core/Src/stm32wbxx_it.c **** 
 171:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 172:Core/Src/stm32wbxx_it.c **** }
 170              		.loc 1 172 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE1267:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 7


 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB1268:
 173:Core/Src/stm32wbxx_it.c **** 
 174:Core/Src/stm32wbxx_it.c **** /**
 175:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Pendable request for system service.
 176:Core/Src/stm32wbxx_it.c ****   */
 177:Core/Src/stm32wbxx_it.c **** void PendSV_Handler(void)
 178:Core/Src/stm32wbxx_it.c **** {
 185              		.loc 1 178 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 179:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 180:Core/Src/stm32wbxx_it.c **** 
 181:Core/Src/stm32wbxx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 182:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 183:Core/Src/stm32wbxx_it.c **** 
 184:Core/Src/stm32wbxx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 185:Core/Src/stm32wbxx_it.c **** }
 190              		.loc 1 185 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE1268:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB1269:
 186:Core/Src/stm32wbxx_it.c **** 
 187:Core/Src/stm32wbxx_it.c **** /**
 188:Core/Src/stm32wbxx_it.c ****   * @brief This function handles System tick timer.
 189:Core/Src/stm32wbxx_it.c ****   */
 190:Core/Src/stm32wbxx_it.c **** void SysTick_Handler(void)
 191:Core/Src/stm32wbxx_it.c **** {
 205              		.loc 1 191 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 192:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 193:Core/Src/stm32wbxx_it.c **** 
 194:Core/Src/stm32wbxx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 195:Core/Src/stm32wbxx_it.c ****   HAL_IncTick();
 214              		.loc 1 195 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 196:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 8


 197:Core/Src/stm32wbxx_it.c **** 
 198:Core/Src/stm32wbxx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 199:Core/Src/stm32wbxx_it.c **** }
 217              		.loc 1 199 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE1269:
 222              		.section	.text.RTC_WKUP_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	RTC_WKUP_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	RTC_WKUP_IRQHandler:
 231              	.LFB1270:
 200:Core/Src/stm32wbxx_it.c **** 
 201:Core/Src/stm32wbxx_it.c **** /******************************************************************************/
 202:Core/Src/stm32wbxx_it.c **** /* STM32WBxx Peripheral Interrupt Handlers                                    */
 203:Core/Src/stm32wbxx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 204:Core/Src/stm32wbxx_it.c **** /* For the available peripheral interrupt handler names,                      */
 205:Core/Src/stm32wbxx_it.c **** /* please refer to the startup file (startup_stm32wbxx.s).                    */
 206:Core/Src/stm32wbxx_it.c **** /******************************************************************************/
 207:Core/Src/stm32wbxx_it.c **** 
 208:Core/Src/stm32wbxx_it.c **** /**
 209:Core/Src/stm32wbxx_it.c ****   * @brief This function handles RTC wake-up interrupt through EXTI line 19.
 210:Core/Src/stm32wbxx_it.c ****   */
 211:Core/Src/stm32wbxx_it.c **** void RTC_WKUP_IRQHandler(void)
 212:Core/Src/stm32wbxx_it.c **** {
 232              		.loc 1 212 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 213:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN RTC_WKUP_IRQn 0 */
 214:Core/Src/stm32wbxx_it.c **** 
 215:Core/Src/stm32wbxx_it.c ****   /* USER CODE END RTC_WKUP_IRQn 0 */
 216:Core/Src/stm32wbxx_it.c ****   HAL_RTCEx_WakeUpTimerIRQHandler(&hrtc);
 241              		.loc 1 216 3 view .LVU28
 242 0002 FFF7FEFF 		bl	HW_TS_RTC_Wakeup_Handler
 243              	.LVL1:
 217:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN RTC_WKUP_IRQn 1 */
 218:Core/Src/stm32wbxx_it.c **** 
 219:Core/Src/stm32wbxx_it.c ****   /* USER CODE END RTC_WKUP_IRQn 1 */
 220:Core/Src/stm32wbxx_it.c **** }
 244              		.loc 1 220 1 is_stmt 0 view .LVU29
 245 0006 08BD     		pop	{r3, pc}
 246              		.cfi_endproc
 247              	.LFE1270:
 249              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 250              		.align	1
 251              		.global	DMA1_Channel4_IRQHandler
 252              		.syntax unified
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 9


 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	DMA1_Channel4_IRQHandler:
 258              	.LFB1271:
 221:Core/Src/stm32wbxx_it.c **** 
 222:Core/Src/stm32wbxx_it.c **** /**
 223:Core/Src/stm32wbxx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 224:Core/Src/stm32wbxx_it.c ****   */
 225:Core/Src/stm32wbxx_it.c **** void DMA1_Channel4_IRQHandler(void)
 226:Core/Src/stm32wbxx_it.c **** {
 259              		.loc 1 226 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 08B5     		push	{r3, lr}
 264              	.LCFI2:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 3, -8
 267              		.cfi_offset 14, -4
 227:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 228:Core/Src/stm32wbxx_it.c **** 
 229:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 230:Core/Src/stm32wbxx_it.c ****   HAL_DMA_IRQHandler(&hdma_lpuart1_tx);
 268              		.loc 1 230 3 view .LVU31
 269 0002 0248     		ldr	r0, .L19
 270 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 271              	.LVL2:
 231:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 232:Core/Src/stm32wbxx_it.c **** 
 233:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 234:Core/Src/stm32wbxx_it.c **** }
 272              		.loc 1 234 1 is_stmt 0 view .LVU32
 273 0008 08BD     		pop	{r3, pc}
 274              	.L20:
 275 000a 00BF     		.align	2
 276              	.L19:
 277 000c 00000000 		.word	hdma_lpuart1_tx
 278              		.cfi_endproc
 279              	.LFE1271:
 281              		.section	.text.USART1_IRQHandler,"ax",%progbits
 282              		.align	1
 283              		.global	USART1_IRQHandler
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv4-sp-d16
 289              	USART1_IRQHandler:
 290              	.LFB1272:
 235:Core/Src/stm32wbxx_it.c **** 
 236:Core/Src/stm32wbxx_it.c **** /**
 237:Core/Src/stm32wbxx_it.c ****   * @brief This function handles USART1 global interrupt.
 238:Core/Src/stm32wbxx_it.c ****   */
 239:Core/Src/stm32wbxx_it.c **** void USART1_IRQHandler(void)
 240:Core/Src/stm32wbxx_it.c **** {
 291              		.loc 1 240 1 is_stmt 1 view -0
 292              		.cfi_startproc
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 10


 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 08B5     		push	{r3, lr}
 296              	.LCFI3:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 3, -8
 299              		.cfi_offset 14, -4
 241:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 242:Core/Src/stm32wbxx_it.c **** 
 243:Core/Src/stm32wbxx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 244:Core/Src/stm32wbxx_it.c ****   HAL_UART_IRQHandler(&huart1);
 300              		.loc 1 244 3 view .LVU34
 301 0002 0248     		ldr	r0, .L23
 302 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 303              	.LVL3:
 245:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 246:Core/Src/stm32wbxx_it.c **** 
 247:Core/Src/stm32wbxx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 248:Core/Src/stm32wbxx_it.c **** }
 304              		.loc 1 248 1 is_stmt 0 view .LVU35
 305 0008 08BD     		pop	{r3, pc}
 306              	.L24:
 307 000a 00BF     		.align	2
 308              	.L23:
 309 000c 00000000 		.word	huart1
 310              		.cfi_endproc
 311              	.LFE1272:
 313              		.section	.text.LPUART1_IRQHandler,"ax",%progbits
 314              		.align	1
 315              		.global	LPUART1_IRQHandler
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	LPUART1_IRQHandler:
 322              	.LFB1273:
 249:Core/Src/stm32wbxx_it.c **** 
 250:Core/Src/stm32wbxx_it.c **** /**
 251:Core/Src/stm32wbxx_it.c ****   * @brief This function handles LPUART1 global interrupt.
 252:Core/Src/stm32wbxx_it.c ****   */
 253:Core/Src/stm32wbxx_it.c **** void LPUART1_IRQHandler(void)
 254:Core/Src/stm32wbxx_it.c **** {
 323              		.loc 1 254 1 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 08B5     		push	{r3, lr}
 328              	.LCFI4:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
 255:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN LPUART1_IRQn 0 */
 256:Core/Src/stm32wbxx_it.c **** 
 257:Core/Src/stm32wbxx_it.c ****   /* USER CODE END LPUART1_IRQn 0 */
 258:Core/Src/stm32wbxx_it.c ****   HAL_UART_IRQHandler(&hlpuart1);
 332              		.loc 1 258 3 view .LVU37
 333 0002 0248     		ldr	r0, .L27
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 11


 334 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 335              	.LVL4:
 259:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN LPUART1_IRQn 1 */
 260:Core/Src/stm32wbxx_it.c **** 
 261:Core/Src/stm32wbxx_it.c ****   /* USER CODE END LPUART1_IRQn 1 */
 262:Core/Src/stm32wbxx_it.c **** }
 336              		.loc 1 262 1 is_stmt 0 view .LVU38
 337 0008 08BD     		pop	{r3, pc}
 338              	.L28:
 339 000a 00BF     		.align	2
 340              	.L27:
 341 000c 00000000 		.word	hlpuart1
 342              		.cfi_endproc
 343              	.LFE1273:
 345              		.section	.text.IPCC_C1_RX_IRQHandler,"ax",%progbits
 346              		.align	1
 347              		.global	IPCC_C1_RX_IRQHandler
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv4-sp-d16
 353              	IPCC_C1_RX_IRQHandler:
 354              	.LFB1274:
 263:Core/Src/stm32wbxx_it.c **** 
 264:Core/Src/stm32wbxx_it.c **** /**
 265:Core/Src/stm32wbxx_it.c ****   * @brief This function handles IPCC RX occupied interrupt.
 266:Core/Src/stm32wbxx_it.c ****   */
 267:Core/Src/stm32wbxx_it.c **** void IPCC_C1_RX_IRQHandler(void)
 268:Core/Src/stm32wbxx_it.c **** {
 355              		.loc 1 268 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 08B5     		push	{r3, lr}
 360              	.LCFI5:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 269:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN IPCC_C1_RX_IRQn 0 */
 270:Core/Src/stm32wbxx_it.c **** 
 271:Core/Src/stm32wbxx_it.c ****   /* USER CODE END IPCC_C1_RX_IRQn 0 */
 272:Core/Src/stm32wbxx_it.c ****   HAL_IPCC_RX_IRQHandler(&hipcc);
 364              		.loc 1 272 3 view .LVU40
 365 0002 FFF7FEFF 		bl	HW_IPCC_Rx_Handler
 366              	.LVL5:
 273:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN IPCC_C1_RX_IRQn 1 */
 274:Core/Src/stm32wbxx_it.c **** 
 275:Core/Src/stm32wbxx_it.c ****   /* USER CODE END IPCC_C1_RX_IRQn 1 */
 276:Core/Src/stm32wbxx_it.c **** }
 367              		.loc 1 276 1 is_stmt 0 view .LVU41
 368 0006 08BD     		pop	{r3, pc}
 369              		.cfi_endproc
 370              	.LFE1274:
 372              		.section	.text.IPCC_C1_TX_IRQHandler,"ax",%progbits
 373              		.align	1
 374              		.global	IPCC_C1_TX_IRQHandler
 375              		.syntax unified
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 12


 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	IPCC_C1_TX_IRQHandler:
 381              	.LFB1275:
 277:Core/Src/stm32wbxx_it.c **** 
 278:Core/Src/stm32wbxx_it.c **** /**
 279:Core/Src/stm32wbxx_it.c ****   * @brief This function handles IPCC TX free interrupt.
 280:Core/Src/stm32wbxx_it.c ****   */
 281:Core/Src/stm32wbxx_it.c **** void IPCC_C1_TX_IRQHandler(void)
 282:Core/Src/stm32wbxx_it.c **** {
 382              		.loc 1 282 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386 0000 08B5     		push	{r3, lr}
 387              	.LCFI6:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 3, -8
 390              		.cfi_offset 14, -4
 283:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN IPCC_C1_TX_IRQn 0 */
 284:Core/Src/stm32wbxx_it.c **** 
 285:Core/Src/stm32wbxx_it.c ****   /* USER CODE END IPCC_C1_TX_IRQn 0 */
 286:Core/Src/stm32wbxx_it.c ****   HAL_IPCC_TX_IRQHandler(&hipcc);
 391              		.loc 1 286 3 view .LVU43
 392 0002 FFF7FEFF 		bl	HW_IPCC_Tx_Handler
 393              	.LVL6:
 287:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN IPCC_C1_TX_IRQn 1 */
 288:Core/Src/stm32wbxx_it.c **** 
 289:Core/Src/stm32wbxx_it.c ****   /* USER CODE END IPCC_C1_TX_IRQn 1 */
 290:Core/Src/stm32wbxx_it.c **** }
 394              		.loc 1 290 1 is_stmt 0 view .LVU44
 395 0006 08BD     		pop	{r3, pc}
 396              		.cfi_endproc
 397              	.LFE1275:
 399              		.section	.text.HSEM_IRQHandler,"ax",%progbits
 400              		.align	1
 401              		.global	HSEM_IRQHandler
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv4-sp-d16
 407              	HSEM_IRQHandler:
 408              	.LFB1276:
 291:Core/Src/stm32wbxx_it.c **** 
 292:Core/Src/stm32wbxx_it.c **** /**
 293:Core/Src/stm32wbxx_it.c ****   * @brief This function handles HSEM global interrupt.
 294:Core/Src/stm32wbxx_it.c ****   */
 295:Core/Src/stm32wbxx_it.c **** void HSEM_IRQHandler(void)
 296:Core/Src/stm32wbxx_it.c **** {
 409              		.loc 1 296 1 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413 0000 08B5     		push	{r3, lr}
 414              	.LCFI7:
 415              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 13


 416              		.cfi_offset 3, -8
 417              		.cfi_offset 14, -4
 297:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN HSEM_IRQn 0 */
 298:Core/Src/stm32wbxx_it.c **** 
 299:Core/Src/stm32wbxx_it.c ****   /* USER CODE END HSEM_IRQn 0 */
 300:Core/Src/stm32wbxx_it.c ****   HAL_HSEM_IRQHandler();
 418              		.loc 1 300 3 view .LVU46
 419 0002 FFF7FEFF 		bl	HAL_HSEM_IRQHandler
 420              	.LVL7:
 301:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN HSEM_IRQn 1 */
 302:Core/Src/stm32wbxx_it.c **** 
 303:Core/Src/stm32wbxx_it.c ****   /* USER CODE END HSEM_IRQn 1 */
 304:Core/Src/stm32wbxx_it.c **** }
 421              		.loc 1 304 1 is_stmt 0 view .LVU47
 422 0006 08BD     		pop	{r3, pc}
 423              		.cfi_endproc
 424              	.LFE1276:
 426              		.section	.text.DMA2_Channel4_IRQHandler,"ax",%progbits
 427              		.align	1
 428              		.global	DMA2_Channel4_IRQHandler
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 434              	DMA2_Channel4_IRQHandler:
 435              	.LFB1277:
 305:Core/Src/stm32wbxx_it.c **** 
 306:Core/Src/stm32wbxx_it.c **** /**
 307:Core/Src/stm32wbxx_it.c ****   * @brief This function handles DMA2 channel4 global interrupt.
 308:Core/Src/stm32wbxx_it.c ****   */
 309:Core/Src/stm32wbxx_it.c **** void DMA2_Channel4_IRQHandler(void)
 310:Core/Src/stm32wbxx_it.c **** {
 436              		.loc 1 310 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440 0000 08B5     		push	{r3, lr}
 441              	.LCFI8:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 3, -8
 444              		.cfi_offset 14, -4
 311:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DMA2_Channel4_IRQn 0 */
 312:Core/Src/stm32wbxx_it.c **** 
 313:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DMA2_Channel4_IRQn 0 */
 314:Core/Src/stm32wbxx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 445              		.loc 1 314 3 view .LVU49
 446 0002 0248     		ldr	r0, .L37
 447 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 448              	.LVL8:
 315:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DMA2_Channel4_IRQn 1 */
 316:Core/Src/stm32wbxx_it.c **** 
 317:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DMA2_Channel4_IRQn 1 */
 318:Core/Src/stm32wbxx_it.c **** }
 449              		.loc 1 318 1 is_stmt 0 view .LVU50
 450 0008 08BD     		pop	{r3, pc}
 451              	.L38:
 452 000a 00BF     		.align	2
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 14


 453              	.L37:
 454 000c 00000000 		.word	hdma_usart1_tx
 455              		.cfi_endproc
 456              	.LFE1277:
 458              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 459              		.align	1
 460              		.global	EXTI4_IRQHandler
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu fpv4-sp-d16
 466              	EXTI4_IRQHandler:
 467              	.LFB1278:
 319:Core/Src/stm32wbxx_it.c **** 
 320:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN 1 */
 321:Core/Src/stm32wbxx_it.c **** /**
 322:Core/Src/stm32wbxx_it.c ****  * @brief  This function handles External line
 323:Core/Src/stm32wbxx_it.c ****  *         interrupt request.
 324:Core/Src/stm32wbxx_it.c ****  * @param  None
 325:Core/Src/stm32wbxx_it.c ****  * @retval None
 326:Core/Src/stm32wbxx_it.c ****  */
 327:Core/Src/stm32wbxx_it.c **** void PUSH_BUTTON_SW1_EXTI_IRQHandler(void)
 328:Core/Src/stm32wbxx_it.c **** {
 468              		.loc 1 328 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              	.LCFI9:
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 3, -8
 476              		.cfi_offset 14, -4
 329:Core/Src/stm32wbxx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BUTTON_SW1_PIN);
 477              		.loc 1 329 3 view .LVU52
 478 0002 1020     		movs	r0, #16
 479 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 480              	.LVL9:
 330:Core/Src/stm32wbxx_it.c **** }
 481              		.loc 1 330 1 is_stmt 0 view .LVU53
 482 0008 08BD     		pop	{r3, pc}
 483              		.cfi_endproc
 484              	.LFE1278:
 486              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 487              		.align	1
 488              		.global	EXTI0_IRQHandler
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	EXTI0_IRQHandler:
 495              	.LFB1279:
 331:Core/Src/stm32wbxx_it.c **** 
 332:Core/Src/stm32wbxx_it.c **** /**
 333:Core/Src/stm32wbxx_it.c ****  * @brief  This function handles External line
 334:Core/Src/stm32wbxx_it.c ****  *         interrupt request.
 335:Core/Src/stm32wbxx_it.c ****  * @param  None
 336:Core/Src/stm32wbxx_it.c ****  * @retval None
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 15


 337:Core/Src/stm32wbxx_it.c ****  */
 338:Core/Src/stm32wbxx_it.c **** void PUSH_BUTTON_SW2_EXTI_IRQHandler(void)
 339:Core/Src/stm32wbxx_it.c **** {
 496              		.loc 1 339 1 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500 0000 08B5     		push	{r3, lr}
 501              	.LCFI10:
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 3, -8
 504              		.cfi_offset 14, -4
 340:Core/Src/stm32wbxx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BUTTON_SW2_PIN);
 505              		.loc 1 340 3 view .LVU55
 506 0002 0120     		movs	r0, #1
 507 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 508              	.LVL10:
 341:Core/Src/stm32wbxx_it.c **** }
 509              		.loc 1 341 1 is_stmt 0 view .LVU56
 510 0008 08BD     		pop	{r3, pc}
 511              		.cfi_endproc
 512              	.LFE1279:
 514              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 515              		.align	1
 516              		.global	EXTI1_IRQHandler
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 520              		.fpu fpv4-sp-d16
 522              	EXTI1_IRQHandler:
 523              	.LFB1280:
 342:Core/Src/stm32wbxx_it.c **** 
 343:Core/Src/stm32wbxx_it.c **** /**
 344:Core/Src/stm32wbxx_it.c ****  * @brief  This function handles External line
 345:Core/Src/stm32wbxx_it.c ****  *         interrupt request.
 346:Core/Src/stm32wbxx_it.c ****  * @param  None
 347:Core/Src/stm32wbxx_it.c ****  * @retval None
 348:Core/Src/stm32wbxx_it.c ****  */
 349:Core/Src/stm32wbxx_it.c **** void PUSH_BUTTON_SW3_EXTI_IRQHandler(void)
 350:Core/Src/stm32wbxx_it.c **** {
 524              		.loc 1 350 1 is_stmt 1 view -0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528 0000 08B5     		push	{r3, lr}
 529              	.LCFI11:
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 3, -8
 532              		.cfi_offset 14, -4
 351:Core/Src/stm32wbxx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BUTTON_SW3_PIN);
 533              		.loc 1 351 3 view .LVU58
 534 0002 0220     		movs	r0, #2
 535 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 536              	.LVL11:
 352:Core/Src/stm32wbxx_it.c **** }
 537              		.loc 1 352 1 is_stmt 0 view .LVU59
 538 0008 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 16


 539              		.cfi_endproc
 540              	.LFE1280:
 542              		.text
 543              	.Letext0:
 544              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 545              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 546              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 547              		.file 5 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 548              		.file 6 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wb55xx.h"
 549              		.file 7 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 550              		.file 8 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_dma.h"
 551              		.file 9 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_flash.h"
 552              		.file 10 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_ipcc.h"
 553              		.file 11 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_rtc.h"
 554              		.file 12 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_uart.h"
 555              		.file 13 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
 556              		.file 14 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 557              		.file 15 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 558              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 559              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 560              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 561              		.file 19 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_gpio.h"
 562              		.file 20 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_hsem.h"
 563              		.file 21 "Middlewares/ST/STM32_WPAN/interface/patterns/ble_thread/hw.h"
 564              		.file 22 "Core/Inc/hw_if.h"
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wbxx_it.c
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:18     .text.NMI_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:40     .text.HardFault_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:64     .text.MemManage_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:88     .text.BusFault_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:112    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:136    .text.SVC_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:156    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:163    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:176    .text.PendSV_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:183    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:196    .text.SysTick_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:203    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:223    .text.RTC_WKUP_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:230    .text.RTC_WKUP_IRQHandler:0000000000000000 RTC_WKUP_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:250    .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:257    .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:277    .text.DMA1_Channel4_IRQHandler:000000000000000c $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:282    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:289    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:309    .text.USART1_IRQHandler:000000000000000c $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:314    .text.LPUART1_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:321    .text.LPUART1_IRQHandler:0000000000000000 LPUART1_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:341    .text.LPUART1_IRQHandler:000000000000000c $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:346    .text.IPCC_C1_RX_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:353    .text.IPCC_C1_RX_IRQHandler:0000000000000000 IPCC_C1_RX_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:373    .text.IPCC_C1_TX_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:380    .text.IPCC_C1_TX_IRQHandler:0000000000000000 IPCC_C1_TX_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:400    .text.HSEM_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:407    .text.HSEM_IRQHandler:0000000000000000 HSEM_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:427    .text.DMA2_Channel4_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:434    .text.DMA2_Channel4_IRQHandler:0000000000000000 DMA2_Channel4_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:454    .text.DMA2_Channel4_IRQHandler:000000000000000c $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:459    .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:466    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:487    .text.EXTI0_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:494    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:515    .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s:522    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler

UNDEFINED SYMBOLS
HAL_IncTick
HW_TS_RTC_Wakeup_Handler
HAL_DMA_IRQHandler
hdma_lpuart1_tx
HAL_UART_IRQHandler
huart1
hlpuart1
HW_IPCC_Rx_Handler
HW_IPCC_Tx_Handler
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccLNFpeT.s 			page 18


HAL_HSEM_IRQHandler
hdma_usart1_tx
HAL_GPIO_EXTI_IRQHandler
