ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.init_queue,"ax",%progbits
  18              		.align	1
  19              		.global	init_queue
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	init_queue:
  27              	.LVL0:
  28              	.LFB1104:
  29              		.file 1 "Core/Src/queue.c"
   1:Core/Src/queue.c **** /* queue.c --- 
   2:Core/Src/queue.c ****  * 
   3:Core/Src/queue.c ****  * Filename: queue.c
   4:Core/Src/queue.c ****  * Description: 
   5:Core/Src/queue.c ****  * Author: Bryce Himebaugh
   6:Core/Src/queue.c ****  * Maintainer: 
   7:Core/Src/queue.c ****  * Created: Thu Feb  7 19:49:26 2013 (-0500)
   8:Core/Src/queue.c ****  * Version: 
   9:Core/Src/queue.c ****  * Last-Updated: 
  10:Core/Src/queue.c ****  *           By: 
  11:Core/Src/queue.c ****  *     Update #: 0
  12:Core/Src/queue.c ****  * URL: 
  13:Core/Src/queue.c ****  * Doc URL: 
  14:Core/Src/queue.c ****  * Keywords: 
  15:Core/Src/queue.c ****  * Compatibility: 
  16:Core/Src/queue.c ****  * 
  17:Core/Src/queue.c ****  */
  18:Core/Src/queue.c **** 
  19:Core/Src/queue.c **** /* Commentary: 
  20:Core/Src/queue.c ****  * 
  21:Core/Src/queue.c ****  * 
  22:Core/Src/queue.c ****  * 
  23:Core/Src/queue.c ****  */
  24:Core/Src/queue.c **** 
  25:Core/Src/queue.c **** /* Change Log:
  26:Core/Src/queue.c ****  * 
  27:Core/Src/queue.c ****  * 
  28:Core/Src/queue.c ****  */
  29:Core/Src/queue.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s 			page 2


  30:Core/Src/queue.c **** /* This program is free software; you can redistribute it and/or
  31:Core/Src/queue.c ****  * modify it under the terms of the GNU General Public License as
  32:Core/Src/queue.c ****  * published by the Free Software Foundation; either version 3, or
  33:Core/Src/queue.c ****  * (at your option) any later version.
  34:Core/Src/queue.c ****  * 
  35:Core/Src/queue.c ****  * This program is distributed in the hope that it will be useful,
  36:Core/Src/queue.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  37:Core/Src/queue.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  38:Core/Src/queue.c ****  * General Public License for more details.
  39:Core/Src/queue.c ****  * 
  40:Core/Src/queue.c ****  * You should have received a copy of the GNU General Public License
  41:Core/Src/queue.c ****  * along with this program; see the file COPYING.  If not, write to
  42:Core/Src/queue.c ****  * the Free Software Foundation, Inc., 51 Franklin Street, Fifth
  43:Core/Src/queue.c ****  * Floor, Boston, MA 02110-1301, USA.
  44:Core/Src/queue.c ****  */
  45:Core/Src/queue.c **** 
  46:Core/Src/queue.c **** /* Code: */
  47:Core/Src/queue.c **** 
  48:Core/Src/queue.c **** #include "queue.h"
  49:Core/Src/queue.c **** #include "interrupt.h"
  50:Core/Src/queue.c **** 
  51:Core/Src/queue.c **** void init_queue(queue_t *buf) {
  30              		.loc 1 51 31 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 51 31 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 0446     		mov	r4, r0
  52:Core/Src/queue.c ****   uint32_t mask;
  41              		.loc 1 52 3 is_stmt 1 view .LVU2
  53:Core/Src/queue.c ****   mask = disable();
  42              		.loc 1 53 3 view .LVU3
  43              		.loc 1 53 10 is_stmt 0 view .LVU4
  44 0004 FFF7FEFF 		bl	disable
  45              	.LVL1:
  54:Core/Src/queue.c ****   buf->head=0;
  46              		.loc 1 54 3 is_stmt 1 view .LVU5
  47              		.loc 1 54 12 is_stmt 0 view .LVU6
  48 0008 0023     		movs	r3, #0
  49 000a 2360     		str	r3, [r4]
  55:Core/Src/queue.c ****   buf->tail=0;
  50              		.loc 1 55 3 is_stmt 1 view .LVU7
  51              		.loc 1 55 12 is_stmt 0 view .LVU8
  52 000c 6360     		str	r3, [r4, #4]
  56:Core/Src/queue.c ****   restore(mask);
  53              		.loc 1 56 3 is_stmt 1 view .LVU9
  54 000e FFF7FEFF 		bl	restore
  55              	.LVL2:
  57:Core/Src/queue.c **** }
  56              		.loc 1 57 1 is_stmt 0 view .LVU10
  57 0012 10BD     		pop	{r4, pc}
  58              		.loc 1 57 1 view .LVU11
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s 			page 3


  59              		.cfi_endproc
  60              	.LFE1104:
  62              		.section	.text.enqueue,"ax",%progbits
  63              		.align	1
  64              		.global	enqueue
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	enqueue:
  71              	.LVL3:
  72              	.LFB1105:
  58:Core/Src/queue.c **** 
  59:Core/Src/queue.c **** int enqueue (queue_t *buf, uint8_t data) {
  73              		.loc 1 59 42 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		.loc 1 59 42 is_stmt 0 view .LVU13
  78 0000 38B5     		push	{r3, r4, r5, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 16
  81              		.cfi_offset 3, -16
  82              		.cfi_offset 4, -12
  83              		.cfi_offset 5, -8
  84              		.cfi_offset 14, -4
  85 0002 0446     		mov	r4, r0
  86 0004 0D46     		mov	r5, r1
  60:Core/Src/queue.c ****   int return_val=0;
  87              		.loc 1 60 3 is_stmt 1 view .LVU14
  88              	.LVL4:
  61:Core/Src/queue.c ****   uint32_t mask;
  89              		.loc 1 61 3 view .LVU15
  62:Core/Src/queue.c ****   mask = disable();
  90              		.loc 1 62 3 view .LVU16
  91              		.loc 1 62 10 is_stmt 0 view .LVU17
  92 0006 FFF7FEFF 		bl	disable
  93              	.LVL5:
  63:Core/Src/queue.c ****   if ((((buf->head)+1)%QUEUE_SIZE)!=buf->tail) {
  94              		.loc 1 63 3 is_stmt 1 view .LVU18
  95              		.loc 1 63 13 is_stmt 0 view .LVU19
  96 000a 2268     		ldr	r2, [r4]
  97              		.loc 1 63 20 view .LVU20
  98 000c 531C     		adds	r3, r2, #1
  99              		.loc 1 63 23 view .LVU21
 100 000e 5942     		rsbs	r1, r3, #0
 101 0010 03F01F03 		and	r3, r3, #31
 102 0014 01F01F01 		and	r1, r1, #31
 103 0018 58BF     		it	pl
 104 001a 4B42     		rsbpl	r3, r1, #0
 105              		.loc 1 63 40 view .LVU22
 106 001c 6168     		ldr	r1, [r4, #4]
 107              		.loc 1 63 6 view .LVU23
 108 001e 8B42     		cmp	r3, r1
 109 0020 07D0     		beq	.L5
  64:Core/Src/queue.c ****     buf->buffer[buf->head]=data;   
 110              		.loc 1 64 5 is_stmt 1 view .LVU24
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s 			page 4


 111              		.loc 1 64 27 is_stmt 0 view .LVU25
 112 0022 2244     		add	r2, r2, r4
 113 0024 1572     		strb	r5, [r2, #8]
  65:Core/Src/queue.c ****     buf->head=((buf->head)+1)%QUEUE_SIZE;
 114              		.loc 1 65 5 is_stmt 1 view .LVU26
 115              		.loc 1 65 14 is_stmt 0 view .LVU27
 116 0026 2360     		str	r3, [r4]
  66:Core/Src/queue.c ****     return_val=0;
 117              		.loc 1 66 5 is_stmt 1 view .LVU28
 118              		.loc 1 66 15 is_stmt 0 view .LVU29
 119 0028 0024     		movs	r4, #0
 120              	.LVL6:
 121              	.L4:
  67:Core/Src/queue.c ****   }
  68:Core/Src/queue.c ****   else {
  69:Core/Src/queue.c ****     return_val=-1;
  70:Core/Src/queue.c ****   }
  71:Core/Src/queue.c ****   restore(mask);
 122              		.loc 1 71 3 is_stmt 1 view .LVU30
 123 002a FFF7FEFF 		bl	restore
 124              	.LVL7:
  72:Core/Src/queue.c ****   return (return_val);
 125              		.loc 1 72 3 view .LVU31
  73:Core/Src/queue.c **** }
 126              		.loc 1 73 1 is_stmt 0 view .LVU32
 127 002e 2046     		mov	r0, r4
 128 0030 38BD     		pop	{r3, r4, r5, pc}
 129              	.LVL8:
 130              	.L5:
  69:Core/Src/queue.c ****   }
 131              		.loc 1 69 15 view .LVU33
 132 0032 4FF0FF34 		mov	r4, #-1
 133              	.LVL9:
  69:Core/Src/queue.c ****   }
 134              		.loc 1 69 15 view .LVU34
 135 0036 F8E7     		b	.L4
 136              		.cfi_endproc
 137              	.LFE1105:
 139              		.section	.text.dequeue,"ax",%progbits
 140              		.align	1
 141              		.global	dequeue
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	dequeue:
 148              	.LVL10:
 149              	.LFB1106:
  74:Core/Src/queue.c **** 
  75:Core/Src/queue.c **** uint8_t dequeue (queue_t *buf) {
 150              		.loc 1 75 32 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 75 32 is_stmt 0 view .LVU36
 155 0000 38B5     		push	{r3, r4, r5, lr}
 156              	.LCFI2:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s 			page 5


 157              		.cfi_def_cfa_offset 16
 158              		.cfi_offset 3, -16
 159              		.cfi_offset 4, -12
 160              		.cfi_offset 5, -8
 161              		.cfi_offset 14, -4
 162 0002 0446     		mov	r4, r0
  76:Core/Src/queue.c ****   int return_val=0;
 163              		.loc 1 76 3 is_stmt 1 view .LVU37
 164              	.LVL11:
  77:Core/Src/queue.c ****   uint32_t mask;
 165              		.loc 1 77 3 view .LVU38
  78:Core/Src/queue.c ****   mask = disable();
 166              		.loc 1 78 3 view .LVU39
 167              		.loc 1 78 10 is_stmt 0 view .LVU40
 168 0004 FFF7FEFF 		bl	disable
 169              	.LVL12:
  79:Core/Src/queue.c ****   if (buf->tail!=buf->head) {
 170              		.loc 1 79 3 is_stmt 1 view .LVU41
 171              		.loc 1 79 10 is_stmt 0 view .LVU42
 172 0008 6368     		ldr	r3, [r4, #4]
 173              		.loc 1 79 21 view .LVU43
 174 000a 2268     		ldr	r2, [r4]
 175              		.loc 1 79 6 view .LVU44
 176 000c 9342     		cmp	r3, r2
 177 000e 0ED0     		beq	.L9
  80:Core/Src/queue.c ****     return_val=buf->buffer[buf->tail];
 178              		.loc 1 80 5 is_stmt 1 view .LVU45
 179              		.loc 1 80 27 is_stmt 0 view .LVU46
 180 0010 E218     		adds	r2, r4, r3
 181 0012 157A     		ldrb	r5, [r2, #8]	@ zero_extendqisi2
 182              	.LVL13:
  81:Core/Src/queue.c ****     buf->tail=((buf->tail)+1)%QUEUE_SIZE;
 183              		.loc 1 81 5 is_stmt 1 view .LVU47
 184              		.loc 1 81 27 is_stmt 0 view .LVU48
 185 0014 0133     		adds	r3, r3, #1
 186              		.loc 1 81 30 view .LVU49
 187 0016 5A42     		rsbs	r2, r3, #0
 188 0018 03F01F03 		and	r3, r3, #31
 189 001c 02F01F02 		and	r2, r2, #31
 190 0020 58BF     		it	pl
 191 0022 5342     		rsbpl	r3, r2, #0
 192              		.loc 1 81 14 view .LVU50
 193 0024 6360     		str	r3, [r4, #4]
 194              	.LVL14:
 195              	.L8:
  82:Core/Src/queue.c ****   }
  83:Core/Src/queue.c ****   restore(mask);
 196              		.loc 1 83 3 is_stmt 1 view .LVU51
 197 0026 FFF7FEFF 		bl	restore
 198              	.LVL15:
  84:Core/Src/queue.c ****   return(return_val);
 199              		.loc 1 84 3 view .LVU52
  85:Core/Src/queue.c **** }
 200              		.loc 1 85 1 is_stmt 0 view .LVU53
 201 002a 2846     		mov	r0, r5
 202 002c 38BD     		pop	{r3, r4, r5, pc}
 203              	.LVL16:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s 			page 6


 204              	.L9:
  76:Core/Src/queue.c ****   uint32_t mask;
 205              		.loc 1 76 7 view .LVU54
 206 002e 0025     		movs	r5, #0
 207 0030 F9E7     		b	.L8
 208              		.cfi_endproc
 209              	.LFE1106:
 211              		.section	.text.queue_empty,"ax",%progbits
 212              		.align	1
 213              		.global	queue_empty
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	queue_empty:
 220              	.LVL17:
 221              	.LFB1107:
  86:Core/Src/queue.c **** 
  87:Core/Src/queue.c **** int queue_empty(queue_t *buf) {
 222              		.loc 1 87 31 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		.loc 1 87 31 is_stmt 0 view .LVU56
 227 0000 10B5     		push	{r4, lr}
 228              	.LCFI3:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 14, -4
 232 0002 0446     		mov	r4, r0
  88:Core/Src/queue.c ****   int retval = 0;
 233              		.loc 1 88 3 is_stmt 1 view .LVU57
 234              	.LVL18:
  89:Core/Src/queue.c ****   uint32_t mask;
 235              		.loc 1 89 3 view .LVU58
  90:Core/Src/queue.c ****   mask = disable();
 236              		.loc 1 90 3 view .LVU59
 237              		.loc 1 90 10 is_stmt 0 view .LVU60
 238 0004 FFF7FEFF 		bl	disable
 239              	.LVL19:
  91:Core/Src/queue.c ****   if (buf->head==buf->tail) {
 240              		.loc 1 91 3 is_stmt 1 view .LVU61
 241              		.loc 1 91 10 is_stmt 0 view .LVU62
 242 0008 2268     		ldr	r2, [r4]
 243              		.loc 1 91 21 view .LVU63
 244 000a 6368     		ldr	r3, [r4, #4]
 245              		.loc 1 91 6 view .LVU64
 246 000c 9A42     		cmp	r2, r3
 247 000e 04D0     		beq	.L13
  88:Core/Src/queue.c ****   uint32_t mask;
 248              		.loc 1 88 7 view .LVU65
 249 0010 0024     		movs	r4, #0
 250              	.LVL20:
 251              	.L12:
  92:Core/Src/queue.c ****     retval=1;
  93:Core/Src/queue.c ****   }
  94:Core/Src/queue.c ****   restore(mask);
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s 			page 7


 252              		.loc 1 94 3 is_stmt 1 view .LVU66
 253 0012 FFF7FEFF 		bl	restore
 254              	.LVL21:
  95:Core/Src/queue.c ****   return (retval);
 255              		.loc 1 95 3 view .LVU67
  96:Core/Src/queue.c **** }
 256              		.loc 1 96 1 is_stmt 0 view .LVU68
 257 0016 2046     		mov	r0, r4
 258 0018 10BD     		pop	{r4, pc}
 259              	.LVL22:
 260              	.L13:
  92:Core/Src/queue.c ****     retval=1;
 261              		.loc 1 92 11 view .LVU69
 262 001a 0124     		movs	r4, #1
 263              	.LVL23:
  92:Core/Src/queue.c ****     retval=1;
 264              		.loc 1 92 11 view .LVU70
 265 001c F9E7     		b	.L12
 266              		.cfi_endproc
 267              	.LFE1107:
 269              		.text
 270              	.Letext0:
 271              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 272              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 273              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 274              		.file 5 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 275              		.file 6 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 276              		.file 7 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_flash.h"
 277              		.file 8 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_uart.h"
 278              		.file 9 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
 279              		.file 10 "Core/Inc/queue.h"
 280              		.file 11 "Core/Inc/interrupt.h"
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s:18     .text.init_queue:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s:26     .text.init_queue:0000000000000000 init_queue
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s:63     .text.enqueue:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s:70     .text.enqueue:0000000000000000 enqueue
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s:140    .text.dequeue:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s:147    .text.dequeue:0000000000000000 dequeue
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s:212    .text.queue_empty:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccMNMRBi.s:219    .text.queue_empty:0000000000000000 queue_empty

UNDEFINED SYMBOLS
disable
restore
