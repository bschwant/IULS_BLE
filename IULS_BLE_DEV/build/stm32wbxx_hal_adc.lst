ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wbxx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_ADC_MspInit:
  27              	.LVL0:
  28              	.LFB1106:
  29              		.file 1 "Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c"
   1:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
   2:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @file    stm32wbxx_hal_adc.c
   4:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          "stm32wbxx_hal_adc_ex.c".
  21:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ******************************************************************************
  22:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @attention
  23:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
  24:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * Copyright (c) 2019 STMicroelectronics.
  25:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * All rights reserved.
  26:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
  27:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  28:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * in the root directory of this software component.
  29:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 2


  30:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
  31:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ******************************************************************************
  32:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   @verbatim
  33:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ==============================================================================
  34:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                      ##### ADC peripheral features #####
  35:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ==============================================================================
  36:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   [..]
  37:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  38:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  39:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  40:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       analog watchdog or overrun events.
  41:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  42:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Single and continuous conversion modes.
  43:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  44:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  45:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  46:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  47:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  48:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  49:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  50:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  51:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  52:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  53:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  54:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  55:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  56:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  57:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC calibration
  58:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  59:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC conversion of regular group.
  60:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  61:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  62:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  63:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  64:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       Vdda or to an external voltage reference).
  65:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  66:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  67:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                      ##### How to use this driver #####
  68:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ==============================================================================
  69:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
  70:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  71:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  72:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ============================================================
  73:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
  74:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  75:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Enable the ADC interface
  76:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  77:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  78:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) Two clock settings are mandatory:
  79:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  80:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  81:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  82:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from AHB2 clock
  83:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    or asynchronous clock derived from system clock, PLLSAI1 (output divider R) or t
  84:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    running up to 64MHz.
  85:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  86:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              (+++) Example:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 3


  87:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  88:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    other device clock parameters configuration:
  89:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  90:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  91:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  92:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  93:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  94:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  95:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  96:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  97:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  98:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  99:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) ADC pins configuration
 101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
 102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
 103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
 104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_GPIO_Init()
 105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Configure the NVIC for ADC
 108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               ADCx_IRQHandler().
 112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_DMA_Init().
 116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Configure the NVIC for DMA
 117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ================================================================
 124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         using function HAL_ADC_Init().
 129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         monitored, thresholds, ...)
 136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      *** Execution of ADC conversions ***
 139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ====================================
 140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         conversion accuracy
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 4


 144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         transfer by DMA.
 148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC conversion by polling:
 150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Start()
 152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Retrieve conversion results
 155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Stop()
 158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC conversion by interruption:
 160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 (this function must be implemented in user program)
 165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Retrieve conversion results
 166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 (these functions must be implemented in user program)
 176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 destination variable address.
 178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      *** Deinitialization of ADC ***
 190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ============================================================
 191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Disable the ADC interface
 194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC clock disable
 198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              (+++) Example:
 200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 5


 201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    other device clock parameters configuration:
 202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) ADC pins configuration
 207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Disable the NVIC for ADC
 212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Deinitialize the DMA
 216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_DMA_Init().
 217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Disable the NVIC for DMA
 218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     *** Callback registration ***
 223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     =============================================
 224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      to register an interrupt callback.
 230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      and a pointer to the user callback function.
 246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      weak function.
 250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      and the Callback ID.
 254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      This function allows to reset following callbacks:
 255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 6


 258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/ HAL_ADC_DeInit() only when
 273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/ HAL_ADC_DeInit()
 277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      or HAL_ADC_Init() function.
 289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      are set to the corresponding weak functions.
 294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   @endverbatim
 296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ******************************************************************************
 297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #include "stm32wbxx_hal.h"
 301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @addtogroup STM32WBxx_HAL_Driver
 303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC ADC
 307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief ADC HAL module driver
 308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 7


 315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                                                         when no regular conversion 
 325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   disable settling time, ...).                                             */
 328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   maximum prescalers.                                                      */
 330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Register CHSELR bits corresponding to ranks 2 to 8 .                     */
 345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_CHSELR_SQ2_TO_SQ8           (ADC_CHSELR_SQ2 | ADC_CHSELR_SQ3 | ADC_CHSELR_SQ4 | ADC_CHS
 346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
 350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
 351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
 365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @verbatim
 366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
 367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
 369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]  This section provides functions allowing to:
 370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Initialize and configure the ADC.
 371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) De-initialize the ADC.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 8


 372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @endverbatim
 373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
 377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         in header of this file).
 382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         before HAL_ADC_Init().
 389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         "ADC_InitTypeDef".
 392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
 396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
 397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpCFGR = 0UL;
 402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check ADC handle */
 412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc == NULL)
 413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     return HAL_ERROR;
 415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
 418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 9


 429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
 435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_TRIGGER_FREQ(hadc->Init.TriggerFrequencyMode));
 436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Init the ADC Callback settings */
 470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
 475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 10


 486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Init the low level hardware */
 488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Init the low level hardware */
 491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC error code to none */
 495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Initialize Lock */
 498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* - Exit from deep power-down mode and ADC voltage regulator enable        */
 502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Feature "deep power-down" not available on ADC peripheral of this STM32WB device */
 504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC deep power down mode */
 508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       wait_loop_index--;
 528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
 537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 11


 543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
 556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Internal voltage regulator (no parameter in HAL ADC init structure) */
 566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Clock configuration                                                 */
 567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - ADC resolution                                                      */
 568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: If low power mode AutoPowerOff is enabled, ADC enable            */
 569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       and disable phases are performed automatically by hardware       */
 570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       (in this case, flag ADC_FLAG_RDY is not set).                    */
 571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* parameters):                                                         */
 578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() )                              */
 580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of ADC resolution                                      */
 582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR1,
 583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR1_RES        ,
 584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  hadc->Init.Resolution );
 585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of ADC:                                                */
 587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - clock                                                             */
 588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - oversampling enable                                               */
 589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - oversampling ratio                                                */
 590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - oversampling shift                                                */
 591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - oversampling discontinuous mode (triggered mode)                  */
 592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - trigger frequency mode                                            */
 593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR2 |= ( (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                     hadc->Init.TriggerFrequencyMode
 595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                     );
 596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2,
 598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR2_LFTRIG     ,
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 12


 600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  tmpCFGR2              );
 601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of ADC clock mode: asynchronous clock source           */
 603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* with selectable prescaler.                                           */
 604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV1) &&
 605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         MODIFY_REG(ADC1_COMMON->CCR                         ,
 609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CCR_PRESC                            ,
 610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.ClockPrescaler & ADC_CCR_PRESC );
 611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - discontinuous mode                                                  */
 616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - LowPowerAutoWait mode                                               */
 617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - LowPowerAutoPowerOff mode                                           */
 618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - overrun                                                             */
 620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - external trigger polarity                                           */
 622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - data alignment                                                      */
 623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - resolution                                                          */
 624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - scan direction                                                      */
 625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - DMA continuous request                                              */
 626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmpCFGR |= (ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_OVERRUN(hadc->Init.Overrun)                            |
 630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.DataAlign                                            |
 631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                      |
 632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update setting of discontinuous mode only if continuous mode is disabled */
 635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Enable the selected ADC group regular discontinuous mode */
 640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmpCFGR |= ADC_CFGR1_DISCEN;
 641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
 643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* cannot be enabled simultaneously.                                  */
 647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
 648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update ADC state machine to error */
 649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
 651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
 652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 13


 657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* start.                                                                 */
 658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       software start.                                                  */
 661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR |= ( (hadc->Init.ExternalTrigConv & ADC_CFGR1_EXTSEL) |
 664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge );
 665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC configuration register with previous settings */
 668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR1,
 669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_DISCEN  |
 670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_AUTOFF  |
 671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_WAIT    |
 672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_CONT    |
 673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_OVRMOD  |
 674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_EXTSEL  |
 675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_EXTEN   |
 676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_ALIGN   |
 677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_SCANDIR |
 678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_DMACFG     ,
 679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                tmpCFGR              );
 680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Channel sampling time configuration */
 682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1, hadc->Init.S
 683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Channels must be configured into each rank using function            */
 694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   "HAL_ADC_ConfigChannel()".                                           */
 695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set sequencer scan length by clearing ranks above rank 1             */
 698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* and do not modify rank 1 value.                                      */
 699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->Instance->CHSELR,
 700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else if(hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Count number of ranks available in HAL ADC handle variable */
 705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       uint32_t ADCGroupRegularSequencerRanksCount;
 706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Parse all ranks from 1 to 8 */
 708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       for(ADCGroupRegularSequencerRanksCount = 0UL; ADCGroupRegularSequencerRanksCount < (8UL); ADC
 709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Check each sequencer rank until value of end of sequence */
 711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(((hadc->ADCGroupRegularSequencerRanks >> (ADCGroupRegularSequencerRanksCount * 4UL)) & A
 712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 14


 714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if(ADCGroupRegularSequencerRanksCount == 1UL)
 718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC group regular sequencer:                                   */
 720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set sequencer scan length by clearing ranks above rank 1           */
 721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* and do not modify rank 1 value.                                    */
 722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->Instance->CHSELR,
 723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CHSELR_SQ2_TO_SQ8);
 724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
 726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC group regular sequencer:                                   */
 728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Set ADC group regular sequencer to value memorized              */
 729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*    in HAL ADC handle                                               */
 730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*    Note: This value maybe be initialized at a unknown value,       */
 731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*          therefore after the first call of "HAL_ADC_Init()",        */
 732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*          each rank corresponding to parameter "NbrOfConversion"    */
 733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*          must be set using "HAL_ADC_ConfigChannel()".              */
 734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Set sequencer scan length by clearing ranks above maximum rank  */
 735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*    and do not modify other ranks value.                            */
 736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CHSELR,
 737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CHSELR_SQ_ALL,
 738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    (ADC_CHSELR_SQ2_TO_SQ8 << (((hadc->Init.NbrOfConversion - 1UL) * ADC_REGULAR_RAN
 739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   );
 740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* ensure of no potential problem of ADC core peripheral clocking.        */
 745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check through register CFGR1 (excluding analog watchdog configuration: */
 746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* set into separate dedicated function, and bits of ADC resolution set   */
 747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* out of temporary variable 'tmpCFGR').                                  */
 748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL | ADC_CF
 749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          == tmpCFGR)
 750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to none */
 752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set the ADC state */
 755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
 760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update ADC state machine to error */
 762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
 767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 15


 771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - clock configuration                                                 */
 778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*                                                                      */
 784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*                                                                      */
 788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* parameters):                                                         */
 793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 810:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmpCFGR |= (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* start.                                                                 */
 825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 826:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 827:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       software start.                                                  */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 16


 828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  );
 833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update Configuration Register CFGR */
 836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 843:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 849:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 853:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 857:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 862:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 863:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 865:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Right bit shift                                                 */
 866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Triggered mode                                                  */
 867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 872:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 877:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   );
 879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 880:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
 881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 884:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 17


 885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 890:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 896:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 899:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 901:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 902:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
 903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 905:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Initialize the ADC state */
 908:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 910:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 911:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
 913:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 914:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
 915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 916:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 920:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
 921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
 922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
 925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         the core clock reset all ADC instances).
 932:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         common group is still running.
 936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
 940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
 941:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 18


 942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check ADC handle */
 947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc == NULL)
 948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     return HAL_ERROR;
 950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
 953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC state */
 956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Stop potential conversion on going */
 959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 961:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 964:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 966:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 967:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 968:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 969:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 970:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 971:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 972:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 973:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* injected sequence.                                                       */
 974:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 979:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 980:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable the ADC peripheral */
 981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 984:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 985:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Change ADC state */
 987:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 988:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 990:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 992:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 993:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 994:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 995:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 996:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 19


 999:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register IER */
1000:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 |
1001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
1002:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
1003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY   ) );
1004:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
1005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register ISR */
1006:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 |
1007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
1008:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
1009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY   ) );
1010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
1011:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CR */
1012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
1013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* "read-set": no direct reset applicable.                                */
1014:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
1015:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CFGR1 */
1016:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->CFGR1 &= ~(ADC_CFGR1_AWD1CH   | ADC_CFGR1_AWD1EN  | ADC_CFGR1_AWD1SGL | ADC_CFGR1
1017:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
1018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN  | ADC_CFGR1_RE
1019:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN                
1020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
1021:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CFGR2 */
1022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
1023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       already done above.                                              */
1024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->CFGR2 &= ~ADC_CFGR2_CKMODE;
1025:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
1026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SMPR */
1027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->SMPR &= ~ADC_SMPR_SMP1;
1028:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
1029:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register TR1 */
1030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->TR1 &= ~(ADC_TR1_HT1 | ADC_TR1_LT1);
1031:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
1032:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CHSELR */
1033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->CHSELR &= ~(ADC_CHSELR_SQ_ALL);
1034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
1035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register DR */
1036:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable */
1037:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1038:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1039:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register IER */
1040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (
1041:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1042:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
1043:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOCAL | ADC_IT_CCRDY |
1044:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
1046:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC | ADC_IT_JQOVF | 
1047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
1048:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  | ADC_IT_OVR   |
1049:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
1050:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register ISR */
1052:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (
1053:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1054:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
1055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOCAL | ADC_FLAG_CCRDY |
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 20


1056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
1058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC | ADC_FLAG_JQOVF |
1059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
1060:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  | ADC_FLAG_OVR  |
1061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
1062:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1063:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CR */
1064:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
1065:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
1066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      no direct reset applicable.
1067:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Update CR register to reset value where doable by software */
1068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
1069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
1070:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1071:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CFGR */
1072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
1073:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
1074:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CFGR2 */
1076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
1077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
1078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SMPR1 */
1080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
1081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SMPR2 */
1083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
1084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
1085:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
1086:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1087:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register TR1 */
1088:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
1089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register TR2 */
1091:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
1092:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1093:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register TR3 */
1094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
1095:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SQR1 */
1097:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
1098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
1099:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SQR2 */
1101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
1102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
1103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SQR3 */
1105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
1106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
1107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SQR4 */
1109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
1110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
1112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 21


1113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register DR */
1114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
1115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR1 */
1117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
1118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR2 */
1119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
1120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR3 */
1121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
1122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR4 */
1123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
1124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
1126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
1127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register AWD2CR */
1129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
1130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register AWD3CR */
1132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
1133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register DIFSEL */
1135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
1136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CALFACT */
1138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
1139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
1143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
1145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ADCs are disabled.   */
1146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
1147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
1149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
1150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
1151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
1152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
1153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
1154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     */
1155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
1156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* DeInit the low level hardware.
1159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      For example:
1161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_RCC_ADC_FORCE_RESET();
1162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_RCC_ADC_RELEASE_RESET();
1163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_RCC_ADC_CLK_DISABLE();
1164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     Keep in mind that all ADCs use the same clock: disabling
1166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     the clock will reset all ADCs.
1167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 22


1170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
1171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
1173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
1176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
1177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
1179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
1180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC error code to none */
1183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
1184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset HAL ADC handle variable */
1187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->ADCGroupRegularSequencerRanks = 0x00000000UL;
1188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset injected channel configuration parameters */
1190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
1191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
1192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC state */
1195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
1196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
1198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
1202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
1206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
1208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
1210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
  30              		.loc 1 1210 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
  35              		.loc 1 1212 3 view .LVU1
1213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
1216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****    */
1217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
  36              		.loc 1 1217 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 23


  39              	.LFE1106:
  41              		.section	.text.HAL_ADC_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_ADC_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_ADC_Init:
  50              	.LVL1:
  51              	.LFB1104:
 399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  52              		.loc 1 399 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 8
  55              		@ frame_needed = 0, uses_anonymous_args = 0
 399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  56              		.loc 1 399 1 is_stmt 0 view .LVU4
  57 0000 30B5     		push	{r4, r5, lr}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 12
  60              		.cfi_offset 4, -12
  61              		.cfi_offset 5, -8
  62              		.cfi_offset 14, -4
  63 0002 83B0     		sub	sp, sp, #12
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 24
 400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpCFGR = 0UL;
  66              		.loc 1 400 3 is_stmt 1 view .LVU5
  67              	.LVL2:
 401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
  68              		.loc 1 401 3 view .LVU6
 402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
  69              		.loc 1 402 3 view .LVU7
 403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
  70              		.loc 1 403 3 view .LVU8
 403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
  71              		.loc 1 403 17 is_stmt 0 view .LVU9
  72 0004 0023     		movs	r3, #0
  73 0006 0193     		str	r3, [sp, #4]
 407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
  74              		.loc 1 407 3 is_stmt 1 view .LVU10
 408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
  75              		.loc 1 408 3 view .LVU11
 412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  76              		.loc 1 412 3 view .LVU12
 412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  77              		.loc 1 412 6 is_stmt 0 view .LVU13
  78 0008 0028     		cmp	r0, #0
  79 000a 00F0DA80 		beq	.L21
  80 000e 0446     		mov	r4, r0
 418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  81              		.loc 1 418 3 is_stmt 1 view .LVU14
 419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  82              		.loc 1 419 3 view .LVU15
 420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
  83              		.loc 1 420 3 view .LVU16
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 24


 421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
  84              		.loc 1 421 3 view .LVU17
 422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  85              		.loc 1 422 3 view .LVU18
 423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  86              		.loc 1 423 3 view .LVU19
 424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
  87              		.loc 1 424 3 view .LVU20
 425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
  88              		.loc 1 425 3 view .LVU21
 426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  89              		.loc 1 426 3 view .LVU22
 427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  90              		.loc 1 427 3 view .LVU23
 428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  91              		.loc 1 428 3 view .LVU24
 429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
  92              		.loc 1 429 3 view .LVU25
 447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  93              		.loc 1 447 3 view .LVU26
 449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  94              		.loc 1 449 3 view .LVU27
 456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
  95              		.loc 1 456 7 view .LVU28
 461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
  96              		.loc 1 461 3 view .LVU29
 466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  97              		.loc 1 466 3 view .LVU30
 466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  98              		.loc 1 466 11 is_stmt 0 view .LVU31
  99 0010 436D     		ldr	r3, [r0, #84]
 466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 100              		.loc 1 466 6 view .LVU32
 101 0012 13B3     		cbz	r3, .L24
 102              	.LVL3:
 103              	.L4:
 505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 104              		.loc 1 505 3 is_stmt 1 view .LVU33
 505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 105              		.loc 1 505 7 is_stmt 0 view .LVU34
 106 0014 2368     		ldr	r3, [r4]
 107              	.LVL4:
 108              	.LBB326:
 109              	.LBI326:
 110              		.file 2 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h"
   1:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
   2:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @file    stm32wbxx_ll_adc.h
   4:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @attention
   8:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
   9:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
  12:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 25


  13:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
  16:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  18:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  19:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #ifndef STM32WBxx_LL_ADC_H
  21:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define STM32WBxx_LL_ADC_H
  22:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  23:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** extern "C" {
  25:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
  26:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  27:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #include "stm32wbxx.h"
  29:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  30:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @addtogroup STM32WBxx_LL_Driver
  31:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
  32:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  33:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  34:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  36:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
  38:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  39:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  40:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  43:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
  46:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  47:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  48:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  53:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
  56:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* No register ADC_SQRx on this ADC peripheral version */
  57:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
  58:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  59:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  60:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  61:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  62:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  63:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  64:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  65:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
  66:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  67:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  68:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  69:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 26


  70:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
  71:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ1" 
  72:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ2" 
  73:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ3" 
  74:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ4" 
  75:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ5" 
  76:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ6" 
  77:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ7" 
  78:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ8" 
  79:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
  80:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  81:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  82:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  83:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  84:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  85:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  86:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  87:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  88:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  89:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  90:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  91:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  92:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  93:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  94:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  95:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  96:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
  97:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  98:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  99:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
 101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
 102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - data register offset                                                     */
 103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
 104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
 106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
 108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
 109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
 110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
 111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
 113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 27


 127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - regular trigger source                                                   */
 128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - regular trigger edge                                                     */
 129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - injected trigger source                                                  */
 156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - injected trigger edge                                                    */
 157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 28


 184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel identifier defined by number                                     */
 187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* channels literals definition.                                              */
 223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR_AWD1CH
 228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR_AWD1CH
 229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR_AWD1CH
 230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR_AWD1CH
 231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4                                      
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 29


 241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* channels literals definition.                                              */
 245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* channels literals definition.                                              */
 289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 30


 298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* the relevant bits for:                                                     */
 314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   common sampling time available.                                          */
 319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* the relevant bits for:                                                     */
 327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   selection on groups.                                                     */
 346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 31


 355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
 363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET | ADC_OFR3_REGO
 388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* ADC registers bits positions */
 391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Value equivalent to bitfield "ADC_CFGR1_RES" p
 393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR1_AWDSGL
 394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 32


 412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Value equivalent to bitfield "ADC_SMPR_SMP1" p
 415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Value equivalent to bitfield "ADC_SMPR_SMP2" p
 416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Value equivalent to bitfield "ADC_SMPR_SMPSEL0
 417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ADC_CFGR1_RES_BITOFFSET_POS
 418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_AWDSGL_BITOFFSET_POS      ADC_CFGR1_AWDSGL_BITOFFSET_POS
 419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* ADC registers bits groups */
 429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* ADC internal channels related definitions */
 437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal voltage reference VrefInt */
 438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3600UL)                     /* Analog voltage reference
 440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Temperature sensor */
 441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a register from a register basis from which an offset
 461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is applied.
 462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Pointer to register address
 465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 33


 469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and multimode
 483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sharing the same ADC common instance):
 487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         disabled.
 489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 serie, if ADC group injected is us
 495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC state:
 511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance must be disabled.
 512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to description of each function for setting
 520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         conditioned to ADC state.
 521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 34


 526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 serie, this parameter has some clo
 528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              
 531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              For more details, refer to description of this functio
 533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_InitTypeDef;
 551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (functions with prefix "REG").
 558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC state:
 560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance must be disabled.
 561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to description of each function for setting
 569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         conditioned to ADC state.
 570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 35


 583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              data preserved or overwritten.
 606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (functions with prefix "INJ").
 621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC state:
 623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance must be disabled.
 624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to description of each function for setting
 632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         conditioned to ADC state.
 633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 36


 640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 37


 697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* DMA transfer.                                                              */
 732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if !defined (ADC_SUPPORT_2_5_MSPS)
 742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 38


 754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)                                        /*
 786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 39


 811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)            /*!< ADC trigger frequency mod
 830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG)        /*!< ADC trigger frequency mod
 831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** * @{
 838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** */
 839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS)                           
 840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SAMPLING_TIME_CH_MASK
 841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 40


 868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if !defined (ADC_SUPPORT_2_5_MSPS)
 871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
 882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< A
 901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 41


 925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (                                                       
 939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (                                          ADC_CFGR1_EXT
 940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (                     ADC_CFGR1_EXTSEL_1                
 941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (                     ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2                      | ADC_CFGR1_EXT
 943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 42


 982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
1001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** * @{
1002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** */
1003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)         /*!< Sequencer configured to full
1004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD)  /*!< Sequencer configured to not 
1005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
1010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)       /*!< ADC group regular sequencer 
1015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)       /*!< ADC group regular sequencer 
1016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)       /*!< ADC group regular sequencer 
1017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)       /*!< ADC group regular sequencer 
1018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)       /*!< ADC group regular sequencer 
1019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)       /*!< ADC group regular sequencer 
1020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)       /*!< ADC group regular sequencer 
1021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)         /*!< ADC group regular sequencer 
1022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
1024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
1025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
1026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
1027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
1028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
1029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
1030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
1032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
1033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 43


1039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
1040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
1046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)         /*!< On this STM32 serie, paramet
1049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< On this STM32 serie, paramet
1050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
1055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
1061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 44


1096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
1111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 45


1153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                        /*
1192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)                                     /*
1193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)                                     /*
1194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0)                   /*
1195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)                                     /*
1196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_0)                   /*
1197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1)                   /*
1198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0) /*
1199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
1209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 46


1210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (0x00000000UL)                                    /*!< A
1218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
1223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC analog watchdog 2 and 3" not available on ADC peripheral of this STM32WB device */
1233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
1237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                    ADC
1247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
1248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
1249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
1250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
1251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
1252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
1253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
1254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
1255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
1256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
1257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
1258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
1259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
1260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
1261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
1262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
1263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
1264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
1265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)         | ADC
1266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 47


1267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
1268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) | ADC
1269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 48


1324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_OVSE)  /*
1361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
1368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
1378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 49


1381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         not timeout values.
1420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         above each literal definition.
1422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       not timeout values.                                                  */
1427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       STM32 serie:                                                         */
1432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 50


1438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         cycles                                                             */
1439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         configuration.                                                     */
1441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: us                                                                   */
1447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: us                                                                   */
1453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       ( 12UL)  /*!< Delay for internal voltage reference stabi
1454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* parameter "tSTART").                                                       */
1458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: us                                                                   */
1459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
1461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: On this STM32 serie, a minimum number of ADC clock cycles            */
1464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  4UL)  /*!< Delay required between ADC end of calibr
1470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Write a value in ADC register
1491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG__ Register to be written
1493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 51


1495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Read a value in ADC register
1500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG__ Register to be read
1502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Register value
1503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Example:
1517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will return decimal number "4".
1519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number is returned, either defined with number
1521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
1547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                 \
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 52


1552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (                                                                                     \
1553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****      )                                                                                     \
1555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                       \
1556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (                                                                                       \
1557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    )                                                                                       \
1559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from number in decimal format.
1564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Example:
1565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
1589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
1593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
1595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (                                                                            \
1601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__))                                     \
1603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL)                                                                       
1607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (                                                                                             
1608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 53


1609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****      )                                                                                             
1612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                               
1613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (                                                                                               
1614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    )                                                                                               
1618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC internal channel:
1626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         returned from ADC registers,
1635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         because internal and external channels share the same channel
1636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         parameters definitions of driver.
1638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
1663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 54


1666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a value defined from parameter definition of
1680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC registers.
1683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
1708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 55


1723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or a value from functions where a channel number is
1742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         returned from ADC registers,
1743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         because internal and external channels share the same channel
1744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         parameters definitions of driver.
1746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (                                                                            \
1756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from sequencer channel and groups definition.
1766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example:
1768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 56


1780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
1792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
1796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
1798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
1825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)
1826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)
1827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
1829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from sequencer channel and groups definition.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 57


1837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example:
1839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
1863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
1867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
1869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)(1)
1879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ       (1)
1880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)(1)
1882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ          (1)
1883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)(1)
1885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ          (1)
1886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)(1)
1888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ          (1)
1889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)(1)
1891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ          (1)
1892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)(1)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 58


1894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ          (1)
1895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)(1)
1897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ          (1)
1898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)(1)
1900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ         (1)
1901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)(1)
1903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ          (1)
1904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)(1)
1906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ          (1)
1907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)(1)
1909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ          (1)
1910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)(1)
1912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ         (1)
1913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)(1)
1915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ         (1)
1916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)(1)
1918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ         (1)
1919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)(1)
1921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ         (1)
1922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)(1)
1924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ         (1)
1925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)(1)
1927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ         (1)
1928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)(1)
1930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ         (1)
1931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)(1)
1933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ         (1)
1934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)(1)
1936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ         (1)
1937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
1938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)
1941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
1942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
1943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)
1944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
1945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
1946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
1948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
1949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 59


1951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                               
1954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                               
1957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
1960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         different of 12 bits.
1965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            (< ADCx param >,
1971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            );
1973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         different of 12 bits.
1988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            );
1995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 60


2008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
2009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
2019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential ended to 0x2A:
2027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC1,
2029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC common register instance
2046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (ADC123_COMMON)
2050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (ADC12_COMMON)
2053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (ADC1_COMMON)
2056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC common instance are disabled.
2061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 61


2065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are disabled.
2072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled.
2074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (refer to reference manual).
2095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a resolution to another resolution.
2108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 62


2122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
2126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__DATA__)                                                                 \
2127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                       (unit: digital value).
2140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       __ADC_DATA__,\
2149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
2150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         reference VrefInt.
2158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         stored in system memory for each device during production.
2160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         connected to pin Vref+.
2162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of internal voltage reference
2165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal voltage reference VrefInt.
2168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 63


2179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
2181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       (__ADC_RESOLUTION__),                    \
2184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       LL_ADC_RESOLUTION_12B))
2185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         stored in system memory for each device during production.
2191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calculation formula:
2192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  parameters are correct (address and data).
2204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  less accurate than calibrated values),
2207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of temperature sensor
2214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor.
2217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                 sensor voltage has been measured.
2224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
2234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 64


2236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
2237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
2238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
2239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
2243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (refer to device datasheet).
2250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calculation formula:
2251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                   (unit: digital value)
2255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  of the current device has characteristics in line with
2261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  datasheet typical values.
2262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                       On STM32WB, refer to device datasheet parameter "Avg_Slop
2276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                       On STM32WB, refer to device datasheet parameter "V30" (co
2278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 65


2293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
2295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((( (                                                                        \
2296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                  * 1000UL)                                                     \
2299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        -                                                                       \
2300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                  * 1000UL)                                                     \
2302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       )                                                                        \
2303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
2304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
2305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These ADC registers are data registers:
2333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example:
2338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
2348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 66


2350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC register address
2352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(Register);
2357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve address of register DR */
2359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)&(ADCx->DR);
2360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC clock source and prescaler must be selected in function of system clock to not exce
2373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: STM32WB55xx ADC maximum frequency is 64MHz (corresponding to 4.27Msmp/s maximu
2374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: STM32WB50xx ADC maximum frequency is 32MHz (corresponding to 2.13Msmp/s maximu
2375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For ADC maximum frequency, refer to datasheet of the selected device.
2376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, if ADC group injected is used, some
2377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         must be respected.
2379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual.
2380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (*)
2392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2 (*)
2393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4 (*)
2394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 67


2407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (*) Value available on all STM32 devices except: STM32W10xxx, STM32W15xxx.
2408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
2414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (*)
2427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2 (*)
2428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4 (*)
2429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (*) Value available on all STM32 devices except: STM32W10xxx, STM32W15xxx.
2443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
2448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         The values not selected are removed from configuration.
2461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 68


2464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor stabilization time.
2465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For ADC conversion of internal channels,
2470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a sampling time minimum value is required.
2471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Add paths to the current configuration.
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor stabilization time.
2506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For ADC conversion of internal channels,
2511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a sampling time minimum value is required.
2512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 69


2521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Remove paths to the current configuration.
2540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 70


2578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
2599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled.
2602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
2603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
2605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         
2610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
2611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
2612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             cycle).
2617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Refer to reference manual.
2618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
2621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
2623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
2627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
2628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 71


2635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
2636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
2637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             cycle).
2642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Refer to reference manual.
2643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
2645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
2647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without having to perform a new calibration using
2656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
2663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         both calibration factors must be concatenated.
2666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         To perform this processing, use helper macro
2667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on group regular.
2672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
2679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
2682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              CalibrationFactor);
2683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without having to perform a new calibration using
2690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 72


2692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
2697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         both calibration factors must be concatenated.
2700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         To perform this processing, use helper macro
2701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on group regular.
2706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED     (1)
2712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED (1)
2713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
2715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
2741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
2743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 73


2749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "SingleDiff".                                                            */
2765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((S
2768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC resolution.
2772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
2778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC resolution.
2798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 74


2806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
2812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
2825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC low power mode.
2862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC low power modes:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 75


2863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           in order to reduce power consumption.
2866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           has been retrieved by user software.
2870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           other conversion.
2872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           applications.
2876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           How to use this low power mode:
2877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC conversion start.
2888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of delay during which ADC was idle.
2897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
2900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
2904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF          (1)
2910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF (1)
2911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter available only on devices: STM32WB10xx, STM32WB15xx.
2913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
2918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 76


2920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC low power mode:
2926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           in order to reduce power consumption.
2930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           has been retrieved by user software.
2934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           other conversion.
2936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           applications.
2940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           How to use this low power mode:
2941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC conversion start.
2952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of delay during which ADC was idle.
2961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
2964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF          (1)
2970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF (1)
2971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter available only on devices: STM32WB10xx, STM32WB15xx.
2973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 77


2977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
2980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
3002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
3004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
3005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
3006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
3009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
3011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
3015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
3016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
3019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
3020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(ADC_TypeDef *ADCx)
3022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
3024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
3030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
3031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
3032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Sampling time common to all channels, independently
3033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channels mapped on ADC group regular or injected.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 78


3034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
3035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted:
3037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         setting).
3040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TS_temp, ...).
3042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
3044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
3045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
3046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
3047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
3048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required.
3051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
3052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
3056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
3057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
3058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
3063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
3064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
3065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
3066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
3067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
3068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
3069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
3070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
3071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
3074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
3077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
3078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
3082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
3083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
3084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Sampling time common to all channels, independently
3085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channels mapped on ADC group regular or injected.
3086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
3087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
3089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
3090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 79


3091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
3092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
3093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
3094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
3095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
3101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
3102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
3103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
3104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
3105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
3106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
3107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
3108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingT
3110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
3112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
3113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC offset" not available on ADC peripheral of this STM32WB device */
3119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or group injected)
3126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           converted data).
3128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are set to 0.
3131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
3139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx), some fast channels are available
3140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 80


3148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
3184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
3193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or group injected)
3202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 81


3205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
3210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
3211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
3212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx), some fast channels are available
3214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
3246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
3250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
3252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 82


3262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted data).
3266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are set to 0.
3269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         force offset state disable or enable
3291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without modifying offset channel or offset value.
3292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
3299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 83


3319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              OffsetState);
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         offset state disabled or enabled.
3326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
3351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
3355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
3361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
3362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         also set trigger polarity to rising edge
3363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices STM32WB10xx, STM32WB15xx: ADC trigger frequency mode must be set
3368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
3369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of function
3370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "LL_ADC_SetTriggerFrequencyMode()".
3371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
3373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 84


3376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO  (1)
3383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1   (1)
3385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2   (1)
3386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3   (1)
3387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4   (2)
3388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3   (2)
3391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4   (2)
3392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
3395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) On STM32WB serie, parameter available only devices: STM32WB10xx, STM32WB15xx.
3396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
3402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
3411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or external, without detail
3413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (equivalent to
3415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
3419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO  (1)
3425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1   (1)
3427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2   (1)
3428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3   (1)
3429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4   (2)
3430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3   (2)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 85


3433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4   (2)
3434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
3437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) On STM32WB serie, parameter available only devices: STM32WB10xx, STM32WB15xx.
3438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
3443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
3446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
3447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
3449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((TriggerSource
3451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
3452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
3453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
3454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((TriggerSource
3464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
3467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or external.
3473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
3485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 86


3490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
3509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
3528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
3536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
3537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
3538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available:
3539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
3540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank
3541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           affectation to a channel are configurable.
3542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
3544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
3545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are fixed by channel HW number.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 87


3547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
3549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
3554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
3556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
3557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
3558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
3561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
3563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
3567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
3568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
3569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available:
3570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
3571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank
3572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           affectation to a channel are configurable.
3573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
3575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
3576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are fixed by channel HW number.
3578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
3580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
3581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
3584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
3585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(ADC_TypeDef *ADCx)
3587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
3589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are configurable.
3599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function performs configuration of:
3600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 88


3604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are defined by channel number.
3609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function performs configuration of:
3610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             highest channel number).
3617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           To set scan direction differently, refer to function
3620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           "LL_ADC_REG_SetSequencerScanDirection()".
3621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices STM32WB10xx, STM32WB15xx: after calling functions
3622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or @ref LL_ADC_REG_SetSequencerRanks(),
3624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         using "LL_ADC_IsActiveFlag_CCRDY()".
3626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
3627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
3628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for more details.
3629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
3636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
3637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
3638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
3639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
3640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
3641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
3642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
3643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (1)
3654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (1)
3655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (1)
3656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (1)
3657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (1)
3658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (1)
3659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (1)
3660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (1)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 89


3661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
3663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
3669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are configurable.
3681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function retrieves:
3682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are defined by channel number.
3691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function retrieves:
3692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             highest channel number).
3699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *          To set scan direction differently, refer to function
3702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *          "LL_ADC_REG_SetSequencerScanDirection()".
3703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
3706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
3707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
3708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
3709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
3710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
3711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
3712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
3713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 90


3718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (1)
3724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (1)
3725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (1)
3726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (1)
3727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (1)
3728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (1)
3729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (1)
3730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (1)
3731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
3733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t ChannelsRanks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
3738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
3739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t RankIndex;
3740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
3741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parse register for end of sequence identifier */
3742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   for(RankIndex = 0UL; RankIndex < (32U - 4U); RankIndex+=4U)
3743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   {
3744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     if((ChannelsRanks & (ADC_CHSELR_SQ2 << RankIndex)) == (ADC_CHSELR_SQ2 << RankIndex))
3745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
3746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       SequencerLength = (ADC_CHSELR_SQ2 << RankIndex);
3747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       break;
3748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
3749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   }
3750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
3751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return SequencerLength;
3752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
3760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, parameter relevant only is sequencer is set
3761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to mode not fully configurable,
3762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
3764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the default scan direction is forward.
3765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
3770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
3772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
3773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
3774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 91


3775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
3777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
3779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
3783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
3784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the default scan direction is forward.
3785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
3786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
3789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
3790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
3792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
3794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
3801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS (1)
3816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS (1)
3817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS (1)
3818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS (1)
3819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS (1)
3820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS (1)
3821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS (1)
3822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
3824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
3830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 92


3832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
3839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS (1)
3846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS (1)
3847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS (1)
3848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS (1)
3849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS (1)
3850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS (1)
3851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS (1)
3852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
3854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
3859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         scan sequence rank.
3867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs configuration of:
3868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
3871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         affectation to a channel are configurable.
3873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
3877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
3879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices STM32WB10xx, STM32WB15xx: after calling functions
3881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or @ref LL_ADC_REG_SetSequencerRanks(),
3883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         using "LL_ADC_IsActiveFlag_CCRDY()".
3885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
3886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
3887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for more details.
3888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 93


3889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9  (1)
3919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10 (1)
3920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11 (1)
3921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12 (1)
3922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13 (1)
3923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14 (1)
3924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15 (1)
3925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16 (1)
3926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
3928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 94


3946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
3953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
3959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
3961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
3964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
3966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
3972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
3974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
3977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         scan sequence rank.
3982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
3983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         affectation to a channel are configurable.
3985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
3996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
3997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
3998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 95


4003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9  (1)
4026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10 (1)
4027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11 (1)
4028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12 (1)
4029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13 (1)
4030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14 (1)
4031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15 (1)
4032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16 (1)
4033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
4035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
4056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 96


4060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
4062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
4063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
4068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) ((READ_BIT(ADCx->CHSELR,
4069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
4070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                       >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
4071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                      ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     );
4073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
4080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
4081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
4086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
4092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           configuration.
4093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
4094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
4103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx), some fast channels are available
4107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
4113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
4115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
4116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 97


4117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
4118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
4119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
4120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
4121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
4122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
4123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
4124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
4125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
4126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
4127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
4128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
4129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
4130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
4131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
4132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
4133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
4159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
4163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
4167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
4171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 98


4174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
4177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           configuration.
4178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
4179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
4188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx), some fast channels are available
4192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
4198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
4200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
4201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
4202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
4203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
4204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
4205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
4206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
4207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
4208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
4209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
4210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
4211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
4212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
4213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
4214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
4215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
4216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
4217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
4218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 99


4231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
4244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
4248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
4252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
4256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
4262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           configuration.
4263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
4264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
4273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx), some fast channels are available
4277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
4283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
4285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
4286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
4287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 100


4288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
4289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
4290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
4291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
4292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
4293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
4294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
4295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
4296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
4297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
4298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
4299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
4300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
4301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
4302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
4303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
4329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
4333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
4337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
4341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
4344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 101


4345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
4347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
4356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx), some fast channels are available
4360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be retrieved.
4366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
4368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
4369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
4370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
4371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
4372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
4373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
4374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
4375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
4376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
4377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
4378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
4379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
4380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
4381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
4382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
4383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
4384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
4385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
4386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
4388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 102


4402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
4412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
4415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ChannelsBitfield = READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
4417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (   (((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_
4419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
4420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
4421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
4422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
4423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
4424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
4425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
4426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
4427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
4428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
4429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
4430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
4431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
4432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
4433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
4434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
4435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
4436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
4437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
4438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
4440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - single mode: one conversion per trigger
4444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           conversions launched successively automatically.
4446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 103


4459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
4462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
4463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
4466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - single mode: one conversion per trigger
4472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           conversions launched successively automatically.
4474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
4481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
4483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
4484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
4487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode:
4494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           when number of DMA data transfers (number of
4496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions) is reached.
4497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions).
4501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode non-circular:
4504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
4513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 104


4516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
4525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
4526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
4529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode:
4536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           when number of DMA data transfers (number of
4538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions) is reached.
4539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions).
4543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode non-circular:
4546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
4560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
4562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
4563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
4566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         data preserved or overwritten.
4572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 105


4573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         other devices without this feature have a behavior
4574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         equivalent to data overwritten.
4575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         overrun should be set to data overwritten.
4578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
4592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
4593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
4596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         data preserved or overwritten.
4601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
4608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
4610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
4611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
4614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
4618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
4621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
4622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
4625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 106


4630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
4631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
4632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         also set trigger polarity to rising edge
4633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
4639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
4665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or external, without detail
4667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (equivalent to
4669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
4673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
4686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 107


4687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((TriggerSource
4696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
4699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             or external
4704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
4713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 108


4744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs configuration of:
4755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function retrieves:
4781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 109


4801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
4803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
4821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence rank.
4835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
4838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx), some fast channels are available
4842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 110


4858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
4882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence rank.
4899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
4902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
4909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
4910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
4911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 111


4915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
4943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
4947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
4949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
4950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
4958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         independent or from ADC group regular.
4963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on ADC group injected.
4969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         independent trigger.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 112


4972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC group regular.
4977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
4983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         independent or from ADC group regular.
4998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
5005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - group injected trigger
5013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer length
5014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer ranks
5015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         If contexts queue is disabled:
5016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - only 1 sequence can be configured
5017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           and is active perpetually.
5018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         If contexts queue is enabled:
5019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - up to 2 contexts can be queued
5020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 113


5029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           into the queue).
5030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
5033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
5036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
5043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
5053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
5066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         contexts queue.
5073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - group injected trigger
5075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer length
5076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer ranks
5077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         cannot be used):
5081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 114


5086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
5088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
5090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx), some fast channels are available
5092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
5093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
5097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 115


5143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
5150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
5176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 116


5200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
5202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
5228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t TriggerSource,
5233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JL,
5255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 117


5257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SequencerNbRanks
5262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             );
5263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
5267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
5272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
5275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted:
5282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         setting).
5285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TS_temp, ...).
5287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
5289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required.
5296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
5297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 118


5314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
5346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
5348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
5349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
5350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
5357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
5358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
5359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             );
5360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted:
5369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 119


5371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         setting).
5372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TS_temp, ...).
5374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
5376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required.
5383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
5384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 120


5428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
5433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
5448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
5451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
5452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
5453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             );
5454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
5460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
5462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
5469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
5476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 121


5485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
5525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
5528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
5529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
5533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
5534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
5535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* and shift it to position 0.                                                 */ 
5536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
5537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                            >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHAN
5538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
5539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
5540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return(  (~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
5541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2)   );
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 122


5542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
5551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 123


5599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx) fast channel (0.188 u
5600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
5614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
5615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
5616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
5617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* and shift it to position 0.                                                 */ 
5618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
5619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                            >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHAN
5620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
5621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
5622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return(  (~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
5623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2)   );
5624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
5631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
5632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
5636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC channel differential mode" not available on ADC peripheral of this STM32WB device *
5637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
5641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on ADC group regular or injected.
5643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available in differential mode.
5649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         not available in differential mode.
5651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB, channels 16, 17, 18 of ADC1
5654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
5655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 124


5656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
5661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
5662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
5699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available in differential mode.
5707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         not available in differential mode.
5709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB, channels 16, 17, 18 of ADC1
5712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 125


5713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
5737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
5744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
5748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled.
5756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
5760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
5761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
5766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 126


5770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
5771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
5774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
5780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)(1)
5799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ       (1)
5800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)(1)
5802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ          (1)
5803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)(1)
5805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ          (1)
5806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)(1)
5808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ          (1)
5809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)(1)
5811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ          (1)
5812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)(1)
5814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ          (1)
5815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)(1)
5817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ          (1)
5818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)(1)
5820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ          (1)
5821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)(1)
5823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ          (1)
5824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)(1)
5826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ          (1)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 127


5827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)(1)
5829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ          (1)
5830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)(1)
5832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ         (1)
5833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)(1)
5835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ         (1)
5836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)(1)
5838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ         (1)
5839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)(1)
5841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ         (1)
5842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)(1)
5844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ         (1)
5845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)(1)
5847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ         (1)
5848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)(1)
5850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ         (1)
5851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)(1)
5853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ         (1)
5854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)(1)
5856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ         (1)
5857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
5858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)
5861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
5862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
5863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)
5864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
5865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
5866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
5868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
5869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
5874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
5875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
5876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1,
5878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (LL_ADC_AWD1 & ADC_AWD_CR_ALL_CHANNEL_MASK),
5879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDChannelGroup & LL_ADC_AWD1);
5880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 128


5884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
5887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
5889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDChannelGroup & AWDy);
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
5897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
5904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
5905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
5906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           one channel.
5909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
5910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
5911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
5916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
5921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
5924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
5930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 129


5941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)(2)
5944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)(2)
5945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             by bitfield.
5951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
5952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)(1)
5956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ       (1)
5957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)(1)
5959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ          (1)
5960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)(1)
5962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ          (1)
5963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)(1)
5965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ          (1)
5966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)(1)
5968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ          (1)
5969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)(1)
5971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ          (1)
5972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)(1)
5974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ          (1)
5975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)(1)
5977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ         (1)
5978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)(1)
5980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ          (1)
5981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)(1)
5983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ          (1)
5984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)(1)
5986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ          (1)
5987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)(1)
5989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ         (1)
5990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)(1)
5992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ         (1)
5993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)(1)
5995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ         (1)
5996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)(1)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 130


5998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ         (1)
5999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
6000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)(1)
6001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ         (1)
6002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
6003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)(1)
6004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ         (1)
6005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
6006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)(1)
6007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ         (1)
6008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
6009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)(1)
6010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ         (1)
6011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
6012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)(1)
6013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ         (1)
6014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
6016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
6017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
6019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(ADCx->CFGR1, LL_ADC_AWD1) & LL_ADC_AWD1 & ADC_AWD_CR_A
6025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
6026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
6027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
6028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
6029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* or a single channel.                                                     */
6030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   if(AnalogWDMonitChannels != 0UL)
6031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   {
6032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     if((AnalogWDMonitChannels & ADC_CFGR1_AWD1SGL) == 0UL)
6033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       /* AWD monitoring a group of channels */
6035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       AnalogWDMonitChannels = (AnalogWDMonitChannels
6036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                & (~(ADC_CFGR1_AWD1CH))
6037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               );
6038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     else
6040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       /* AWD monitoring a single channel */
6042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       AnalogWDMonitChannels = (AnalogWDMonitChannels
6043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                | (0x01UL << (AnalogWDMonitChannels >> ADC_CFGR1_AWD1CH_Pos))
6044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               );
6045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   }
6047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
6048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return AnalogWDMonitChannels;
6049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
6051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MA
6052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
6054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 131


6055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
6056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
6057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
6058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* or a single channel.                                                     */
6059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
6060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   {
6061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
6062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
6064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a group of channels */
6066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
6067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
6068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  )
6069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
6070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       else
6073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a single channel */
6075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
6076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
6077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     else
6081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
6083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a group of channels */
6085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
6086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
6087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       else
6090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a single channel */
6092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a group of channels */
6093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
6094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
6095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
6096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   }
6100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return AnalogWDMonitChannels;
6102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
6103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         high and low.
6108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 132


6112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
6114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
6115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
6120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
6125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
6128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
6134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
6155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
6161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "AWDy".                                                                  */
6165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 133


6169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->TR1,
6172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
6173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
6174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
6176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
6178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
6179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
6180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
6181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
6185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         high or low.
6186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
6187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
6188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
6192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
6193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
6198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
6203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
6206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
6212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either ADC groups regular or injected.
6220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 134


6226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
6233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->TR1,
6252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdsHighLow,
6253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
6256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
6258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdsHighLow,
6259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
6261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         concatenated.
6267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         using helper macro:
6270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 135


6283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
6287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
6291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
6294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR1,
6300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
6303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) 
6305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
6310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
6311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC oversampling" not available on ADC peripheral of this STM32WB device */
6319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (oversampler buffer reset).
6333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 136


6340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED (1)
6345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED        (1)
6346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED (1)
6347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
6349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
6355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
6358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (oversampler buffer reset).
6369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED (1)
6377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED        (1)
6378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED (1)
6379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
6381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
6383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
6386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
6389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on the selected ADC group.
6394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are done from 1 trigger)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 137


6397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           needs a trigger)
6399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
6403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, oversampling discontinuous mode
6404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
6417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
6420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on the selected ADC group.
6425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are done from 1 trigger)
6428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           needs a trigger)
6430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
6437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
6440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
6443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC oversampling
6447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ratio
6450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - shift
6451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 138


6454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
6500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 139


6511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
6521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC deep power down" not available on ADC peripheral of this STM32WB device */
6536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_DEEPPWD);
6558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 140


6568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
 111              		.loc 2 6587 26 is_stmt 1 view .LVU35
 112              	.LBB327:
6588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 113              		.loc 2 6589 3 view .LVU36
 114              		.loc 2 6589 12 is_stmt 0 view .LVU37
 115 0016 9A68     		ldr	r2, [r3, #8]
 116              		.loc 2 6589 74 view .LVU38
 117 0018 12F0005F 		tst	r2, #536870912
 118 001c 05D0     		beq	.L5
 119              	.LVL5:
 120              		.loc 2 6589 74 view .LVU39
 121              	.LBE327:
 122              	.LBE326:
 508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 123              		.loc 1 508 5 is_stmt 1 view .LVU40
 124              	.LBB328:
 125              	.LBI328:
6573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 126              		.loc 2 6573 22 view .LVU41
 127              	.LBB329:
6578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 128              		.loc 2 6578 3 view .LVU42
 129 001e 9A68     		ldr	r2, [r3, #8]
 130 0020 22F02042 		bic	r2, r2, #-1610612736
 131 0024 22F03F02 		bic	r2, r2, #63
 132 0028 9A60     		str	r2, [r3, #8]
 133              	.LVL6:
 134              	.L5:
6578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 135              		.loc 2 6578 3 is_stmt 0 view .LVU43
 136              	.LBE329:
 137              	.LBE328:
 516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 138              		.loc 1 516 3 is_stmt 1 view .LVU44
 516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 139              		.loc 1 516 7 is_stmt 0 view .LVU45
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 141


 140 002a 2268     		ldr	r2, [r4]
 141              	.LVL7:
 142              	.LBB330:
 143              	.LBI330:
6590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, after ADC internal voltage regulator enable,
6596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADVREGEN);
6615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
 144              		.loc 2 6637 26 is_stmt 1 view .LVU46
 145              	.LBB331:
6638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 146              		.loc 2 6639 3 view .LVU47
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 142


 147              		.loc 2 6639 12 is_stmt 0 view .LVU48
 148 002c 9368     		ldr	r3, [r2, #8]
 149              		.loc 2 6639 76 view .LVU49
 150 002e 13F0805F 		tst	r3, #268435456
 151 0032 1FD1     		bne	.L6
 152              	.LVL8:
 153              		.loc 2 6639 76 view .LVU50
 154              	.LBE331:
 155              	.LBE330:
 519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 156              		.loc 1 519 5 is_stmt 1 view .LVU51
 157              	.LBB332:
 158              	.LBI332:
6607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 159              		.loc 2 6607 22 view .LVU52
 160              	.LBB333:
6612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 161              		.loc 2 6612 3 view .LVU53
 162 0034 9368     		ldr	r3, [r2, #8]
 163 0036 23F01043 		bic	r3, r3, #-1879048192
 164 003a 23F03F03 		bic	r3, r3, #63
 165 003e 43F08053 		orr	r3, r3, #268435456
 166 0042 9360     		str	r3, [r2, #8]
 167              	.LVL9:
6612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 168              		.loc 2 6612 3 is_stmt 0 view .LVU54
 169              	.LBE333:
 170              	.LBE332:
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 171              		.loc 1 524 5 is_stmt 1 view .LVU55
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 172              		.loc 1 524 89 is_stmt 0 view .LVU56
 173 0044 604B     		ldr	r3, .L28
 174 0046 1B68     		ldr	r3, [r3]
 175 0048 9B09     		lsrs	r3, r3, #6
 176 004a 604A     		ldr	r2, .L28+4
 177 004c A2FB0323 		umull	r2, r3, r2, r3
 178 0050 9B09     		lsrs	r3, r3, #6
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 179              		.loc 1 524 109 view .LVU57
 180 0052 0133     		adds	r3, r3, #1
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 181              		.loc 1 524 69 view .LVU58
 182 0054 5B00     		lsls	r3, r3, #1
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 183              		.loc 1 524 21 view .LVU59
 184 0056 0193     		str	r3, [sp, #4]
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 185              		.loc 1 525 5 is_stmt 1 view .LVU60
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 186              		.loc 1 525 11 is_stmt 0 view .LVU61
 187 0058 09E0     		b	.L7
 188              	.LVL10:
 189              	.L24:
 491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 190              		.loc 1 491 5 is_stmt 1 view .LVU62
 191 005a FFF7FEFF 		bl	HAL_ADC_MspInit
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 143


 192              	.LVL11:
 495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 193              		.loc 1 495 5 view .LVU63
 194 005e 0023     		movs	r3, #0
 195 0060 A365     		str	r3, [r4, #88]
 498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 196              		.loc 1 498 5 view .LVU64
 498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 197              		.loc 1 498 16 is_stmt 0 view .LVU65
 198 0062 84F85030 		strb	r3, [r4, #80]
 199 0066 D5E7     		b	.L4
 200              	.L8:
 527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 201              		.loc 1 527 7 is_stmt 1 view .LVU66
 527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 202              		.loc 1 527 22 is_stmt 0 view .LVU67
 203 0068 019B     		ldr	r3, [sp, #4]
 204 006a 013B     		subs	r3, r3, #1
 205 006c 0193     		str	r3, [sp, #4]
 206              	.L7:
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 207              		.loc 1 525 11 is_stmt 1 view .LVU68
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 208              		.loc 1 525 28 is_stmt 0 view .LVU69
 209 006e 019B     		ldr	r3, [sp, #4]
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 210              		.loc 1 525 11 view .LVU70
 211 0070 002B     		cmp	r3, #0
 212 0072 F9D1     		bne	.L8
 213              	.L6:
 534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 214              		.loc 1 534 3 is_stmt 1 view .LVU71
 534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 215              		.loc 1 534 7 is_stmt 0 view .LVU72
 216 0074 2268     		ldr	r2, [r4]
 217              	.LVL12:
 218              	.LBB334:
 219              	.LBI334:
6637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 220              		.loc 2 6637 26 is_stmt 1 view .LVU73
 221              	.LBB335:
 222              		.loc 2 6639 3 view .LVU74
 223              		.loc 2 6639 12 is_stmt 0 view .LVU75
 224 0076 9368     		ldr	r3, [r2, #8]
 225              		.loc 2 6639 76 view .LVU76
 226 0078 13F0805F 		tst	r3, #268435456
 227 007c 09D1     		bne	.L22
 228              	.LVL13:
 229              		.loc 2 6639 76 view .LVU77
 230              	.LBE335:
 231              	.LBE334:
 537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 232              		.loc 1 537 5 is_stmt 1 view .LVU78
 233 007e 636D     		ldr	r3, [r4, #84]
 234 0080 43F01003 		orr	r3, r3, #16
 235 0084 6365     		str	r3, [r4, #84]
 540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 144


 236              		.loc 1 540 5 view .LVU79
 237 0086 A36D     		ldr	r3, [r4, #88]
 238 0088 43F00103 		orr	r3, r3, #1
 239 008c A365     		str	r3, [r4, #88]
 542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 240              		.loc 1 542 5 view .LVU80
 241              	.LVL14:
 542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 242              		.loc 1 542 20 is_stmt 0 view .LVU81
 243 008e 0120     		movs	r0, #1
 244 0090 00E0     		b	.L9
 245              	.LVL15:
 246              	.L22:
 400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpCFGR = 0UL;
 247              		.loc 1 400 21 view .LVU82
 248 0092 0020     		movs	r0, #0
 249              	.LVL16:
 250              	.L9:
 549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 251              		.loc 1 549 3 is_stmt 1 view .LVU83
 252              	.LBB336:
 253              	.LBI336:
6640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, after ADC enable, a delay for
6645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion start.
6647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADEN);
6666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 145


6675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADDIS);
6686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, a minimum number of ADC clock cycles
6718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
6721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
6722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
6723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration run must be performed for each of these
6724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
6726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 146


6732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
6735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADCAL);
6742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, a minimum number of ADC clock cycles
6748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
6751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
6752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
6753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration run must be performed for each of these
6754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
6756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC calibration state.
6780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 147


6789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both
6800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           starts immediately.
6803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           following the ADC start conversion command.
6806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADSTART);
6823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADSTP);
6843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 148


6846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 254              		.loc 2 6851 26 view .LVU84
 255              	.LBB337:
6852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 256              		.loc 2 6853 3 view .LVU85
 257              		.loc 2 6853 12 is_stmt 0 view .LVU86
 258 0094 9368     		ldr	r3, [r2, #8]
 259              		.loc 2 6853 74 view .LVU87
 260 0096 13F00403 		ands	r3, r3, #4
 261 009a 00D0     		beq	.L10
 262 009c 0123     		movs	r3, #1
 263              	.L10:
 264              	.LVL17:
 265              		.loc 2 6853 74 view .LVU88
 266              	.LBE337:
 267              	.LBE336:
 551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 268              		.loc 1 551 3 is_stmt 1 view .LVU89
 551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 269              		.loc 1 551 13 is_stmt 0 view .LVU90
 270 009e 616D     		ldr	r1, [r4, #84]
 551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 271              		.loc 1 551 6 view .LVU91
 272 00a0 11F0100F 		tst	r1, #16
 273 00a4 40F08680 		bne	.L11
 552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 274              		.loc 1 552 7 view .LVU92
 275 00a8 002B     		cmp	r3, #0
 276 00aa 40F08380 		bne	.L11
 556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 277              		.loc 1 556 5 is_stmt 1 view .LVU93
 278 00ae 636D     		ldr	r3, [r4, #84]
 279              	.LVL18:
 556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 280              		.loc 1 556 5 is_stmt 0 view .LVU94
 281 00b0 23F48173 		bic	r3, r3, #258
 282 00b4 43F00203 		orr	r3, r3, #2
 283 00b8 6365     		str	r3, [r4, #84]
 778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 284              		.loc 1 778 5 is_stmt 1 view .LVU95
 285              	.LVL19:
 286              	.LBB338:
 287              	.LBI338:
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 288              		.loc 2 6697 26 view .LVU96
 289              	.LBB339:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 290              		.loc 2 6699 3 view .LVU97
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 291              		.loc 2 6699 12 is_stmt 0 view .LVU98
 292 00ba 9368     		ldr	r3, [r2, #8]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 149


6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 293              		.loc 2 6699 68 view .LVU99
 294 00bc 13F0010F 		tst	r3, #1
 295 00c0 0BD1     		bne	.L12
 296              	.LVL20:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 297              		.loc 2 6699 68 view .LVU100
 298              	.LBE339:
 299              	.LBE338:
 780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 300              		.loc 1 780 7 is_stmt 1 view .LVU101
 301              	.LBB340:
 302              	.LBI340:
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 303              		.loc 2 6697 26 view .LVU102
 304              	.LBB341:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 305              		.loc 2 6699 3 view .LVU103
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 306              		.loc 2 6699 12 is_stmt 0 view .LVU104
 307 00c2 434B     		ldr	r3, .L28+8
 308 00c4 9B68     		ldr	r3, [r3, #8]
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 309              		.loc 2 6699 68 view .LVU105
 310 00c6 13F0010F 		tst	r3, #1
 311 00ca 06D1     		bne	.L12
 312              	.LVL21:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 313              		.loc 2 6699 68 view .LVU106
 314              	.LBE341:
 315              	.LBE340:
 799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 316              		.loc 1 799 9 is_stmt 1 view .LVU107
 317 00cc 6368     		ldr	r3, [r4, #4]
 318              	.LVL22:
 319              	.LBB342:
 320              	.LBI342:
2410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 321              		.loc 2 2410 22 view .LVU108
 322              	.LBB343:
2415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 323              		.loc 2 2415 3 view .LVU109
 324 00ce 4149     		ldr	r1, .L28+12
 325 00d0 8A68     		ldr	r2, [r1, #8]
 326 00d2 22F47C12 		bic	r2, r2, #4128768
 327 00d6 1343     		orrs	r3, r3, r2
 328              	.LVL23:
2415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 329              		.loc 2 2415 3 is_stmt 0 view .LVU110
 330 00d8 8B60     		str	r3, [r1, #8]
 331              	.LVL24:
 332              	.L12:
2415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 333              		.loc 2 2415 3 view .LVU111
 334              	.LBE343:
 335              	.LBE342:
 812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 150


 336              		.loc 1 812 5 is_stmt 1 view .LVU112
 812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 337              		.loc 1 812 17 is_stmt 0 view .LVU113
 338 00da 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 339              		.loc 1 813 27 view .LVU114
 340 00dc 636B     		ldr	r3, [r4, #52]
 812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 341              		.loc 1 812 88 view .LVU115
 342 00de 43EA4233 		orr	r3, r3, r2, lsl #13
 814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 343              		.loc 1 814 27 view .LVU116
 344 00e2 E268     		ldr	r2, [r4, #12]
 813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 345              		.loc 1 813 88 view .LVU117
 346 00e4 1343     		orrs	r3, r3, r2
 815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 347              		.loc 1 815 27 view .LVU118
 348 00e6 A268     		ldr	r2, [r4, #8]
 814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 349              		.loc 1 814 88 view .LVU119
 350 00e8 1343     		orrs	r3, r3, r2
 816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 351              		.loc 1 816 17 view .LVU120
 352 00ea 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 353              		.loc 1 815 88 view .LVU121
 354 00ee 43EA0243 		orr	r3, r3, r2, lsl #16
 355              	.LVL25:
 818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 356              		.loc 1 818 5 is_stmt 1 view .LVU122
 818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 357              		.loc 1 818 8 is_stmt 0 view .LVU123
 358 00f2 012A     		cmp	r2, #1
 359 00f4 3ED0     		beq	.L25
 360              	.L13:
 828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 361              		.loc 1 828 5 is_stmt 1 view .LVU124
 828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 362              		.loc 1 828 19 is_stmt 0 view .LVU125
 363 00f6 A26A     		ldr	r2, [r4, #40]
 828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 364              		.loc 1 828 8 view .LVU126
 365 00f8 22B1     		cbz	r2, .L14
 830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 366              		.loc 1 830 7 is_stmt 1 view .LVU127
 830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 367              		.loc 1 830 48 is_stmt 0 view .LVU128
 368 00fa 02F47072 		and	r2, r2, #960
 831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  );
 369              		.loc 1 831 31 view .LVU129
 370 00fe E16A     		ldr	r1, [r4, #44]
 831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  );
 371              		.loc 1 831 19 view .LVU130
 372 0100 0A43     		orrs	r2, r2, r1
 830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 373              		.loc 1 830 15 view .LVU131
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 151


 374 0102 1343     		orrs	r3, r3, r2
 375              	.LVL26:
 376              	.L14:
 836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 377              		.loc 1 836 5 is_stmt 1 view .LVU132
 378 0104 2168     		ldr	r1, [r4]
 379 0106 CD68     		ldr	r5, [r1, #12]
 380 0108 334A     		ldr	r2, .L28+16
 381 010a 2A40     		ands	r2, r2, r5
 382 010c 1343     		orrs	r3, r3, r2
 383              	.LVL27:
 836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 384              		.loc 1 836 5 is_stmt 0 view .LVU133
 385 010e CB60     		str	r3, [r1, #12]
 844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 386              		.loc 1 844 5 is_stmt 1 view .LVU134
 844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 387              		.loc 1 844 46 is_stmt 0 view .LVU135
 388 0110 2168     		ldr	r1, [r4]
 389              	.LVL28:
 390              	.LBB344:
 391              	.LBI344:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 392              		.loc 2 6851 26 is_stmt 1 view .LVU136
 393              	.LBB345:
 394              		.loc 2 6853 3 view .LVU137
 395              		.loc 2 6853 12 is_stmt 0 view .LVU138
 396 0112 8B68     		ldr	r3, [r1, #8]
 397              		.loc 2 6853 74 view .LVU139
 398 0114 13F00403 		ands	r3, r3, #4
 399 0118 00D0     		beq	.L15
 400 011a 0123     		movs	r3, #1
 401              	.L15:
 402              	.LVL29:
 403              		.loc 2 6853 74 view .LVU140
 404              	.LBE345:
 405              	.LBE344:
 845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 406              		.loc 1 845 5 is_stmt 1 view .LVU141
 407              	.LBB346:
 408              	.LBI346:
6854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 152


6870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all oversampling increased data width (for devices
6871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with feature oversampling).
6872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 12 bits.
6884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 10 bits.
6899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 8 bits.
6914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 153


6927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 6 bits.
6929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
6946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
6947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both
6955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           starts immediately.
6958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           following the ADC start conversion command.
6961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_JADSTART);
6978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
6982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 154


6984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
6991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_JADSTP);
6998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
 409              		.loc 2 7006 26 view .LVU142
 410              	.LBB347:
7007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 411              		.loc 2 7008 3 view .LVU143
 412              		.loc 2 7008 12 is_stmt 0 view .LVU144
 413 011c 8A68     		ldr	r2, [r1, #8]
 414              		.loc 2 7008 76 view .LVU145
 415 011e 12F00802 		ands	r2, r2, #8
 416 0122 00D0     		beq	.L16
 417 0124 0122     		movs	r2, #1
 418              	.L16:
 419              	.LVL30:
 420              		.loc 2 7008 76 view .LVU146
 421              	.LBE347:
 422              	.LBE346:
 846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 423              		.loc 1 846 5 is_stmt 1 view .LVU147
 846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 424              		.loc 1 846 8 is_stmt 0 view .LVU148
 425 0126 B3B9     		cbnz	r3, .L17
 847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 426              		.loc 1 847 9 view .LVU149
 427 0128 AAB9     		cbnz	r2, .L17
 850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 428              		.loc 1 850 7 is_stmt 1 view .LVU150
 851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 429              		.loc 1 851 18 is_stmt 0 view .LVU151
 430 012a 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 431              	.LVL31:
 852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 432              		.loc 1 852 18 view .LVU152
 433 012c 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 434              	.LVL32:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 155


 852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 435              		.loc 1 852 18 view .LVU153
 436 0130 5B00     		lsls	r3, r3, #1
 850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 437              		.loc 1 850 15 view .LVU154
 438 0132 43EA8232 		orr	r2, r3, r2, lsl #14
 439              	.LVL33:
 854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 440              		.loc 1 854 7 is_stmt 1 view .LVU155
 441 0136 CB68     		ldr	r3, [r1, #12]
 442 0138 23F48043 		bic	r3, r3, #16384
 443 013c 23F00203 		bic	r3, r3, #2
 444 0140 1343     		orrs	r3, r3, r2
 445 0142 CB60     		str	r3, [r1, #12]
 856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 446              		.loc 1 856 7 view .LVU156
 856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 447              		.loc 1 856 21 is_stmt 0 view .LVU157
 448 0144 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 449              		.loc 1 856 10 view .LVU158
 450 0148 012B     		cmp	r3, #1
 451 014a 18D0     		beq	.L26
 883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 452              		.loc 1 883 9 is_stmt 1 view .LVU159
 453 014c 2268     		ldr	r2, [r4]
 454              	.LVL34:
 883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 455              		.loc 1 883 9 is_stmt 0 view .LVU160
 456 014e 1369     		ldr	r3, [r2, #16]
 457 0150 23F00103 		bic	r3, r3, #1
 458 0154 1361     		str	r3, [r2, #16]
 459              	.L17:
 897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 460              		.loc 1 897 5 is_stmt 1 view .LVU161
 897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 461              		.loc 1 897 19 is_stmt 0 view .LVU162
 462 0156 2369     		ldr	r3, [r4, #16]
 897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 463              		.loc 1 897 8 view .LVU163
 464 0158 012B     		cmp	r3, #1
 465 015a 22D0     		beq	.L27
 904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 466              		.loc 1 904 7 is_stmt 1 view .LVU164
 467 015c 2268     		ldr	r2, [r4]
 468 015e 136B     		ldr	r3, [r2, #48]
 469 0160 23F00F03 		bic	r3, r3, #15
 470 0164 1363     		str	r3, [r2, #48]
 471              	.L20:
 909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 472              		.loc 1 909 5 view .LVU165
 473 0166 636D     		ldr	r3, [r4, #84]
 474 0168 23F00303 		bic	r3, r3, #3
 475 016c 43F00103 		orr	r3, r3, #1
 476 0170 6365     		str	r3, [r4, #84]
 477 0172 24E0     		b	.L3
 478              	.LVL35:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 156


 479              	.L25:
 820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 480              		.loc 1 820 7 view .LVU166
 820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 481              		.loc 1 820 18 is_stmt 0 view .LVU167
 482 0174 626A     		ldr	r2, [r4, #36]
 483 0176 013A     		subs	r2, r2, #1
 820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 484              		.loc 1 820 15 view .LVU168
 485 0178 43EA4243 		orr	r3, r3, r2, lsl #17
 486              	.LVL36:
 820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 487              		.loc 1 820 15 view .LVU169
 488 017c BBE7     		b	.L13
 489              	.LVL37:
 490              	.L26:
 858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 491              		.loc 1 858 9 is_stmt 1 view .LVU170
 859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 492              		.loc 1 859 9 view .LVU171
 860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 493              		.loc 1 860 9 view .LVU172
 861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 494              		.loc 1 861 9 view .LVU173
 868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 495              		.loc 1 868 9 view .LVU174
 496 017e 2168     		ldr	r1, [r4]
 497 0180 0B69     		ldr	r3, [r1, #16]
 498 0182 23F4FF63 		bic	r3, r3, #2040
 499 0186 23F00403 		bic	r3, r3, #4
 500 018a E26B     		ldr	r2, [r4, #60]
 501              	.LVL38:
 868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 502              		.loc 1 868 9 is_stmt 0 view .LVU175
 503 018c 256C     		ldr	r5, [r4, #64]
 504 018e 2A43     		orrs	r2, r2, r5
 505 0190 656C     		ldr	r5, [r4, #68]
 506 0192 2A43     		orrs	r2, r2, r5
 507 0194 A56C     		ldr	r5, [r4, #72]
 508 0196 2A43     		orrs	r2, r2, r5
 509 0198 1343     		orrs	r3, r3, r2
 510 019a 43F00103 		orr	r3, r3, #1
 511 019e 0B61     		str	r3, [r1, #16]
 512 01a0 D9E7     		b	.L17
 513              	.L27:
 900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 514              		.loc 1 900 7 is_stmt 1 view .LVU176
 515 01a2 2168     		ldr	r1, [r4]
 516 01a4 0B6B     		ldr	r3, [r1, #48]
 517 01a6 23F00F03 		bic	r3, r3, #15
 518 01aa E269     		ldr	r2, [r4, #28]
 519 01ac 013A     		subs	r2, r2, #1
 520 01ae 1343     		orrs	r3, r3, r2
 521 01b0 0B63     		str	r3, [r1, #48]
 522 01b2 D8E7     		b	.L20
 523              	.LVL39:
 524              	.L11:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 157


 915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 525              		.loc 1 915 5 view .LVU177
 526 01b4 636D     		ldr	r3, [r4, #84]
 527              	.LVL40:
 915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 528              		.loc 1 915 5 is_stmt 0 view .LVU178
 529 01b6 43F01003 		orr	r3, r3, #16
 530 01ba 6365     		str	r3, [r4, #84]
 917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 531              		.loc 1 917 5 is_stmt 1 view .LVU179
 532              	.LVL41:
 917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 533              		.loc 1 917 20 is_stmt 0 view .LVU180
 534 01bc 0120     		movs	r0, #1
 535              	.LVL42:
 536              	.L3:
 922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 537              		.loc 1 922 1 view .LVU181
 538 01be 03B0     		add	sp, sp, #12
 539              	.LCFI2:
 540              		.cfi_remember_state
 541              		.cfi_def_cfa_offset 12
 542              		@ sp needed
 543 01c0 30BD     		pop	{r4, r5, pc}
 544              	.LVL43:
 545              	.L21:
 546              	.LCFI3:
 547              		.cfi_restore_state
 414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 548              		.loc 1 414 12 view .LVU182
 549 01c2 0120     		movs	r0, #1
 550              	.LVL44:
 414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 551              		.loc 1 414 12 view .LVU183
 552 01c4 FBE7     		b	.L3
 553              	.L29:
 554 01c6 00BF     		.align	2
 555              	.L28:
 556 01c8 00000000 		.word	SystemCoreClock
 557 01cc 632D3E05 		.word	87960931
 558 01d0 00000450 		.word	1342439424
 559 01d4 00030450 		.word	1342440192
 560 01d8 07C0F0FF 		.word	-999417
 561              		.cfi_endproc
 562              	.LFE1104:
 564              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 565              		.align	1
 566              		.weak	HAL_ADC_MspDeInit
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	HAL_ADC_MspDeInit:
 573              	.LVL45:
 574              	.LFB1107:
1218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 158


1220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
1221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
1223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         the core clock reset all ADC instances).
1224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
1225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
1227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 575              		.loc 1 1227 1 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
1228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
 580              		.loc 1 1229 3 view .LVU185
1230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
1233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****    */
1234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 581              		.loc 1 1234 1 is_stmt 0 view .LVU186
 582 0000 7047     		bx	lr
 583              		.cfi_endproc
 584              	.LFE1107:
 586              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 587              		.align	1
 588              		.global	HAL_ADC_PollForConversion
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv4-sp-d16
 594              	HAL_ADC_PollForConversion:
 595              	.LVL46:
 596              	.LFB1110:
1235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Register a User ADC Callback
1239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         To be used instead of the weak predefined callback
1240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *                the configuration information for the specified ADC.
1242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
1243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This parameter can be one of the following values:
1244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 159


1257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
1258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
1261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (pCallback == NULL)
1265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update the error code */
1267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     return HAL_ERROR;
1270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (CallbackID)
1275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
1278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
1282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
1286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
1290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
1294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
1298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
1302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
1310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 160


1314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default :
1321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update the error code */
1322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Return error status */
1325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         status = HAL_ERROR;
1326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (CallbackID)
1332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default :
1342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update the error code */
1343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Return error status */
1346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         status = HAL_ERROR;
1347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
1351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update the error code */
1353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Return error status */
1356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     status =  HAL_ERROR;
1357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return status;
1360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *                the configuration information for the specified ADC.
1367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This parameter can be one of the following values:
1369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 161


1371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (CallbackID)
1391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
1410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
1419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 162


1428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default :
1441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update the error code */
1442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Return error status */
1445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         status =  HAL_ERROR;
1446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (CallbackID)
1452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default :
1462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update the error code */
1463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Return error status */
1466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         status =  HAL_ERROR;
1467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
1471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update the error code */
1473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Return error status */
1476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     status =  HAL_ERROR;
1477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return status;
1480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 163


1485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
1486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief    ADC IO operation functions
1490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
1491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @verbatim
1492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
1493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       ##### IO operation functions #####
1494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
1495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]  This section provides functions allowing to:
1496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Start conversion of regular group.
1497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Stop conversion of regular group.
1498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Poll for conversion event.
1500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Get result of regular channel conversion.
1501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Handle ADC interrupt request
1504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @endverbatim
1507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
1508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Process locked */
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_LOCK(hadc);
1528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable the ADC peripheral */
1530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state                                                        */
1536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 164


1542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code */
1543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Reset all ADC error code fields */
1545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
1554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset all ADC error code fields */
1556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Process unlocked */
1565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* trigger event.                                                       */
1573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Start ADC group regular conversion */
1574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
1577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Process unlocked */
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
1583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
1589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 165


1599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
1608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
1609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
1613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
1641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
1645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 166


1656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 597              		.loc 1 1666 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		.loc 1 1666 1 is_stmt 0 view .LVU188
 602 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 603              	.LCFI4:
 604              		.cfi_def_cfa_offset 24
 605              		.cfi_offset 3, -24
 606              		.cfi_offset 4, -20
 607              		.cfi_offset 5, -16
 608              		.cfi_offset 6, -12
 609              		.cfi_offset 7, -8
 610              		.cfi_offset 14, -4
 611 0002 0446     		mov	r4, r0
 612 0004 0E46     		mov	r6, r1
1667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 613              		.loc 1 1667 3 is_stmt 1 view .LVU189
1668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_Flag_End;
 614              		.loc 1 1668 3 view .LVU190
1669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 615              		.loc 1 1671 3 view .LVU191
1672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 616              		.loc 1 1674 3 view .LVU192
 617              		.loc 1 1674 17 is_stmt 0 view .LVU193
 618 0006 4569     		ldr	r5, [r0, #20]
 619              		.loc 1 1674 6 view .LVU194
 620 0008 082D     		cmp	r5, #8
 621 000a 05D0     		beq	.L32
1675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* each conversion:                                                       */
1683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 167


1688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN) != 0UL)
1689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
 622              		.loc 1 1690 5 is_stmt 1 view .LVU195
 623              		.loc 1 1690 8 is_stmt 0 view .LVU196
 624 000c 0368     		ldr	r3, [r0]
 625 000e DB68     		ldr	r3, [r3, #12]
 626              		.loc 1 1690 7 view .LVU197
 627 0010 13F0010F 		tst	r3, #1
 628 0014 1ED1     		bne	.L43
1691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
1692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update ADC state machine to error */
1694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       return HAL_ERROR;
1697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
1699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
 629              		.loc 1 1700 20 view .LVU198
 630 0016 0425     		movs	r5, #4
 631              	.L32:
 632              	.LVL47:
1701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Get tick count */
1705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tickstart = HAL_GetTick();
 633              		.loc 1 1705 3 is_stmt 1 view .LVU199
 634              		.loc 1 1705 15 is_stmt 0 view .LVU200
 635 0018 FFF7FEFF 		bl	HAL_GetTick
 636              	.LVL48:
 637              		.loc 1 1705 15 view .LVU201
 638 001c 0746     		mov	r7, r0
 639              	.LVL49:
1706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 640              		.loc 1 1708 3 is_stmt 1 view .LVU202
 641              	.L35:
 642              		.loc 1 1708 9 view .LVU203
 643              		.loc 1 1708 15 is_stmt 0 view .LVU204
 644 001e 2368     		ldr	r3, [r4]
 645              		.loc 1 1708 25 view .LVU205
 646 0020 1A68     		ldr	r2, [r3]
 647              		.loc 1 1708 9 view .LVU206
 648 0022 2A42     		tst	r2, r5
 649 0024 1CD1     		bne	.L44
1709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 650              		.loc 1 1711 5 is_stmt 1 view .LVU207
 651              		.loc 1 1711 8 is_stmt 0 view .LVU208
 652 0026 B6F1FF3F 		cmp	r6, #-1
 653 002a F8D0     		beq	.L35
1712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 168


1713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 654              		.loc 1 1713 7 is_stmt 1 view .LVU209
 655              		.loc 1 1713 13 is_stmt 0 view .LVU210
 656 002c FFF7FEFF 		bl	HAL_GetTick
 657              	.LVL50:
 658              		.loc 1 1713 27 view .LVU211
 659 0030 C31B     		subs	r3, r0, r7
 660              		.loc 1 1713 10 view .LVU212
 661 0032 B342     		cmp	r3, r6
 662 0034 01D8     		bhi	.L36
 663              		.loc 1 1713 51 discriminator 1 view .LVU213
 664 0036 002E     		cmp	r6, #0
 665 0038 F1D1     		bne	.L35
 666              	.L36:
1714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 667              		.loc 1 1716 9 is_stmt 1 view .LVU214
 668              		.loc 1 1716 18 is_stmt 0 view .LVU215
 669 003a 2368     		ldr	r3, [r4]
 670              		.loc 1 1716 28 view .LVU216
 671 003c 1B68     		ldr	r3, [r3]
 672              		.loc 1 1716 12 view .LVU217
 673 003e 2B42     		tst	r3, r5
 674 0040 EDD1     		bne	.L35
1717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
1718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to timeout */
1719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 675              		.loc 1 1719 11 is_stmt 1 view .LVU218
 676 0042 636D     		ldr	r3, [r4, #84]
 677 0044 43F00403 		orr	r3, r3, #4
 678 0048 6365     		str	r3, [r4, #84]
1720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Process unlocked */
1722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 679              		.loc 1 1722 11 view .LVU219
 680              		.loc 1 1722 11 view .LVU220
 681 004a 0023     		movs	r3, #0
 682 004c 84F85030 		strb	r3, [r4, #80]
 683              		.loc 1 1722 11 view .LVU221
1723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_TIMEOUT;
 684              		.loc 1 1724 11 view .LVU222
 685              		.loc 1 1724 18 is_stmt 0 view .LVU223
 686 0050 0320     		movs	r0, #3
 687 0052 04E0     		b	.L33
 688              	.LVL51:
 689              	.L43:
1694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 690              		.loc 1 1694 7 is_stmt 1 view .LVU224
 691 0054 436D     		ldr	r3, [r0, #84]
 692 0056 43F02003 		orr	r3, r3, #32
 693 005a 4365     		str	r3, [r0, #84]
1696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 694              		.loc 1 1696 7 view .LVU225
1696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 695              		.loc 1 1696 14 is_stmt 0 view .LVU226
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 169


 696 005c 0120     		movs	r0, #1
 697              	.LVL52:
 698              	.L33:
1725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
1726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Update ADC state machine */
1731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
1737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
1738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check whether end of sequence is reached */
1740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
1746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Clear polled flag */
1753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
1754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
1758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_WAIT) == 0UL)
1764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_AUTDLY) == 0UL)
1766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
1767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
1774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 699              		.loc 1 1774 1 view .LVU227
 700 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 701              	.LVL53:
 702              	.L44:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 170


1731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 703              		.loc 1 1731 3 is_stmt 1 view .LVU228
 704 0060 626D     		ldr	r2, [r4, #84]
 705 0062 42F40072 		orr	r2, r2, #512
 706 0066 6265     		str	r2, [r4, #84]
1735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 707              		.loc 1 1735 3 view .LVU229
 708              	.LVL54:
 709              	.LBB348:
 710              	.LBI348:
3481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 711              		.loc 2 3481 26 view .LVU230
 712              	.LBB349:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 713              		.loc 2 3486 3 view .LVU231
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 714              		.loc 2 3486 12 is_stmt 0 view .LVU232
 715 0068 DA68     		ldr	r2, [r3, #12]
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 716              		.loc 2 3486 103 view .LVU233
 717 006a 12F4406F 		tst	r2, #3072
 718 006e 11D1     		bne	.L38
 719              	.LVL55:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 720              		.loc 2 3486 103 view .LVU234
 721              	.LBE349:
 722              	.LBE348:
1736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 723              		.loc 1 1736 21 view .LVU235
 724 0070 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
1736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 725              		.loc 1 1736 7 view .LVU236
 726 0072 7AB9     		cbnz	r2, .L38
1740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 727              		.loc 1 1740 5 is_stmt 1 view .LVU237
1740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 728              		.loc 1 1740 9 is_stmt 0 view .LVU238
 729 0074 1A68     		ldr	r2, [r3]
1740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 730              		.loc 1 1740 8 view .LVU239
 731 0076 12F0080F 		tst	r2, #8
 732 007a 0BD0     		beq	.L38
1743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 733              		.loc 1 1743 7 is_stmt 1 view .LVU240
 734 007c 626D     		ldr	r2, [r4, #84]
 735 007e 22F48072 		bic	r2, r2, #256
 736 0082 6265     		str	r2, [r4, #84]
1745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 737              		.loc 1 1745 7 view .LVU241
1745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 738              		.loc 1 1745 16 is_stmt 0 view .LVU242
 739 0084 626D     		ldr	r2, [r4, #84]
1745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 740              		.loc 1 1745 10 view .LVU243
 741 0086 12F4805F 		tst	r2, #4096
 742 008a 03D1     		bne	.L38
1747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 171


 743              		.loc 1 1747 9 is_stmt 1 view .LVU244
 744 008c 626D     		ldr	r2, [r4, #84]
 745 008e 42F00102 		orr	r2, r2, #1
 746 0092 6265     		str	r2, [r4, #84]
 747              	.L38:
1753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 748              		.loc 1 1753 3 view .LVU245
1753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 749              		.loc 1 1753 6 is_stmt 0 view .LVU246
 750 0094 082D     		cmp	r5, #8
 751 0096 07D0     		beq	.L45
1765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 752              		.loc 1 1765 5 is_stmt 1 view .LVU247
1765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 753              		.loc 1 1765 9 is_stmt 0 view .LVU248
 754 0098 DA68     		ldr	r2, [r3, #12]
1765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 755              		.loc 1 1765 8 view .LVU249
 756 009a 12F4804F 		tst	r2, #16384
 757 009e 07D1     		bne	.L41
1768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 758              		.loc 1 1768 7 is_stmt 1 view .LVU250
 759 00a0 0C22     		movs	r2, #12
 760 00a2 1A60     		str	r2, [r3]
1773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 761              		.loc 1 1773 10 is_stmt 0 view .LVU251
 762 00a4 0020     		movs	r0, #0
 763 00a6 DAE7     		b	.L33
 764              	.L45:
1755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 765              		.loc 1 1755 5 is_stmt 1 view .LVU252
 766 00a8 0822     		movs	r2, #8
 767 00aa 1A60     		str	r2, [r3]
1773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 768              		.loc 1 1773 10 is_stmt 0 view .LVU253
 769 00ac 0020     		movs	r0, #0
 770 00ae D6E7     		b	.L33
 771              	.L41:
 772 00b0 0020     		movs	r0, #0
 773 00b2 D4E7     		b	.L33
 774              		.cfi_endproc
 775              	.LFE1110:
 777              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 778              		.align	1
 779              		.global	HAL_ADC_PollForEvent
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv4-sp-d16
 785              	HAL_ADC_PollForEvent:
 786              	.LVL56:
 787              	.LFB1111:
1775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Poll for ADC event.
1778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param EventType the ADC event type.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 172


1780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          This parameter can be one of the following values:
1781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event (1)
1787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
1788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
1789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 788              		.loc 1 1799 1 is_stmt 1 view -0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              		.loc 1 1799 1 is_stmt 0 view .LVU255
 793 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 794              	.LCFI5:
 795              		.cfi_def_cfa_offset 24
 796              		.cfi_offset 4, -24
 797              		.cfi_offset 5, -20
 798              		.cfi_offset 6, -16
 799              		.cfi_offset 7, -12
 800              		.cfi_offset 8, -8
 801              		.cfi_offset 14, -4
 802 0004 0646     		mov	r6, r0
 803 0006 0D46     		mov	r5, r1
 804 0008 1746     		mov	r7, r2
1800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 805              		.loc 1 1800 3 is_stmt 1 view .LVU256
1801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 806              		.loc 1 1803 3 view .LVU257
1804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 807              		.loc 1 1804 3 view .LVU258
1805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Get tick count */
1807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tickstart = HAL_GetTick();
 808              		.loc 1 1807 3 view .LVU259
 809              		.loc 1 1807 15 is_stmt 0 view .LVU260
 810 000a FFF7FEFF 		bl	HAL_GetTick
 811              	.LVL57:
 812              		.loc 1 1807 15 view .LVU261
 813 000e 8046     		mov	r8, r0
 814              	.LVL58:
1808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check selected event flag */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 173


1810:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 815              		.loc 1 1810 3 is_stmt 1 view .LVU262
 816              	.L48:
 817              		.loc 1 1810 9 view .LVU263
 818              		.loc 1 1810 10 is_stmt 0 view .LVU264
 819 0010 3368     		ldr	r3, [r6]
 820 0012 1C68     		ldr	r4, [r3]
 821              		.loc 1 1810 9 view .LVU265
 822 0014 35EA0402 		bics	r2, r5, r4
 823 0018 18D0     		beq	.L61
1811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 824              		.loc 1 1813 5 is_stmt 1 view .LVU266
 825              		.loc 1 1813 8 is_stmt 0 view .LVU267
 826 001a B7F1FF3F 		cmp	r7, #-1
 827 001e F7D0     		beq	.L48
1814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 828              		.loc 1 1815 7 is_stmt 1 view .LVU268
 829              		.loc 1 1815 13 is_stmt 0 view .LVU269
 830 0020 FFF7FEFF 		bl	HAL_GetTick
 831              	.LVL59:
 832              		.loc 1 1815 27 view .LVU270
 833 0024 A0EB0803 		sub	r3, r0, r8
 834              		.loc 1 1815 10 view .LVU271
 835 0028 BB42     		cmp	r3, r7
 836 002a 01D8     		bhi	.L49
 837              		.loc 1 1815 51 discriminator 1 view .LVU272
 838 002c 002F     		cmp	r7, #0
 839 002e EFD1     		bne	.L48
 840              	.L49:
1816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 841              		.loc 1 1818 9 is_stmt 1 view .LVU273
 842              		.loc 1 1818 13 is_stmt 0 view .LVU274
 843 0030 3368     		ldr	r3, [r6]
 844 0032 1B68     		ldr	r3, [r3]
 845              		.loc 1 1818 12 view .LVU275
 846 0034 35EA0303 		bics	r3, r5, r3
 847 0038 EAD0     		beq	.L48
1819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
1820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to timeout */
1821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 848              		.loc 1 1821 11 is_stmt 1 view .LVU276
 849 003a 736D     		ldr	r3, [r6, #84]
 850 003c 43F00403 		orr	r3, r3, #4
 851 0040 7365     		str	r3, [r6, #84]
1822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Process unlocked */
1824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 852              		.loc 1 1824 11 view .LVU277
 853              		.loc 1 1824 11 view .LVU278
 854 0042 0023     		movs	r3, #0
 855 0044 86F85030 		strb	r3, [r6, #80]
 856              		.loc 1 1824 11 view .LVU279
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 174


1825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1826:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_TIMEOUT;
 857              		.loc 1 1826 11 view .LVU280
 858              		.loc 1 1826 18 is_stmt 0 view .LVU281
 859 0048 0320     		movs	r0, #3
 860 004a 29E0     		b	.L50
 861              	.L61:
1827:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
1828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   switch (EventType)
 862              		.loc 1 1832 3 is_stmt 1 view .LVU282
 863 004c B5F5807F 		cmp	r5, #256
 864 0050 28D0     		beq	.L52
 865 0052 0BD8     		bhi	.L53
 866 0054 022D     		cmp	r5, #2
 867 0056 1CD0     		beq	.L54
 868 0058 802D     		cmp	r5, #128
 869 005a 35D1     		bne	.L56
1833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* End Of Sampling event */
1835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1843:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* For example:                                                             */
1849:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1853:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_AWD_EVENT:
1855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 870              		.loc 1 1856 7 view .LVU283
 871 005c 726D     		ldr	r2, [r6, #84]
 872 005e 42F48032 		orr	r2, r2, #65536
 873 0062 7265     		str	r2, [r6, #84]
1857:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 874              		.loc 1 1859 7 view .LVU284
 875 0064 8022     		movs	r2, #128
 876 0066 1A60     		str	r2, [r3]
1860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 175


 877              		.loc 1 1861 7 view .LVU285
1862:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1863:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_AWD2_EVENT:
1865:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1872:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_AWD3_EVENT:
1875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1877:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1880:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1884:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
1885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Injected context queue overflow event */
1887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1890:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1896:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
1899:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Overrun event */
1901:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1902:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* considered as an error.                                                */
1904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1905:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* overrun ")                                                             */
1906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1908:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC state */
1909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1910:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1911:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC error code to overrun */
1912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1913:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1914:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
1915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1916:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 176


1918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            as OVR is cleared. */
1919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1920:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
 878              		.loc 1 1925 10 is_stmt 0 view .LVU286
 879 0068 0020     		movs	r0, #0
1861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 880              		.loc 1 1861 7 view .LVU287
 881 006a 19E0     		b	.L50
 882              	.L53:
1832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 883              		.loc 1 1832 3 view .LVU288
 884 006c B5F5007F 		cmp	r5, #512
 885 0070 21D0     		beq	.L57
 886 0072 B5F5806F 		cmp	r5, #1024
 887 0076 27D1     		bne	.L56
1889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 888              		.loc 1 1889 7 is_stmt 1 view .LVU289
 889 0078 726D     		ldr	r2, [r6, #84]
 890 007a 42F48042 		orr	r2, r2, #16384
 891 007e 7265     		str	r2, [r6, #84]
1892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 892              		.loc 1 1892 7 view .LVU290
 893 0080 B26D     		ldr	r2, [r6, #88]
 894 0082 42F00802 		orr	r2, r2, #8
 895 0086 B265     		str	r2, [r6, #88]
1895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 896              		.loc 1 1895 7 view .LVU291
 897 0088 4FF48062 		mov	r2, #1024
 898 008c 1A60     		str	r2, [r3]
1897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 899              		.loc 1 1897 7 view .LVU292
 900              		.loc 1 1925 10 is_stmt 0 view .LVU293
 901 008e 0020     		movs	r0, #0
1897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 902              		.loc 1 1897 7 view .LVU294
 903 0090 06E0     		b	.L50
 904              	.L54:
1837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 905              		.loc 1 1837 7 is_stmt 1 view .LVU295
 906 0092 726D     		ldr	r2, [r6, #84]
 907 0094 42F40062 		orr	r2, r2, #2048
 908 0098 7265     		str	r2, [r6, #84]
1840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 909              		.loc 1 1840 7 view .LVU296
 910 009a 0222     		movs	r2, #2
 911 009c 1A60     		str	r2, [r3]
1842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 912              		.loc 1 1842 7 view .LVU297
 913              		.loc 1 1925 10 is_stmt 0 view .LVU298
 914 009e 0020     		movs	r0, #0
 915              	.L50:
1926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 177


 916              		.loc 1 1926 1 view .LVU299
 917 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 918              	.LVL60:
 919              	.L52:
1866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 920              		.loc 1 1866 7 is_stmt 1 view .LVU300
 921 00a4 726D     		ldr	r2, [r6, #84]
 922 00a6 42F40032 		orr	r2, r2, #131072
 923 00aa 7265     		str	r2, [r6, #84]
1869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 924              		.loc 1 1869 7 view .LVU301
 925 00ac 4FF48072 		mov	r2, #256
 926 00b0 1A60     		str	r2, [r3]
1871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 927              		.loc 1 1871 7 view .LVU302
1925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 928              		.loc 1 1925 10 is_stmt 0 view .LVU303
 929 00b2 0020     		movs	r0, #0
1871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 930              		.loc 1 1871 7 view .LVU304
 931 00b4 F4E7     		b	.L50
 932              	.L57:
1876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 933              		.loc 1 1876 7 is_stmt 1 view .LVU305
 934 00b6 726D     		ldr	r2, [r6, #84]
 935 00b8 42F48022 		orr	r2, r2, #262144
 936 00bc 7265     		str	r2, [r6, #84]
1879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 937              		.loc 1 1879 7 view .LVU306
 938 00be 4FF40072 		mov	r2, #512
 939 00c2 1A60     		str	r2, [r3]
1881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 940              		.loc 1 1881 7 view .LVU307
1925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 941              		.loc 1 1925 10 is_stmt 0 view .LVU308
 942 00c4 0020     		movs	r0, #0
1881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 943              		.loc 1 1881 7 view .LVU309
 944 00c6 EBE7     		b	.L50
 945              	.L56:
1906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 946              		.loc 1 1906 7 is_stmt 1 view .LVU310
1906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 947              		.loc 1 1906 21 is_stmt 0 view .LVU311
 948 00c8 726B     		ldr	r2, [r6, #52]
1906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 949              		.loc 1 1906 10 view .LVU312
 950 00ca 4AB9     		cbnz	r2, .L59
1909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 951              		.loc 1 1909 9 is_stmt 1 view .LVU313
 952 00cc 736D     		ldr	r3, [r6, #84]
 953 00ce 43F48063 		orr	r3, r3, #1024
 954 00d2 7365     		str	r3, [r6, #84]
1912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 955              		.loc 1 1912 9 view .LVU314
 956 00d4 B36D     		ldr	r3, [r6, #88]
 957 00d6 43F00203 		orr	r3, r3, #2
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 178


 958 00da B365     		str	r3, [r6, #88]
1925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 959              		.loc 1 1925 10 is_stmt 0 view .LVU315
 960 00dc 0020     		movs	r0, #0
 961 00de DFE7     		b	.L50
 962              	.L59:
1919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 963              		.loc 1 1919 9 is_stmt 1 view .LVU316
 964 00e0 1022     		movs	r2, #16
 965 00e2 1A60     		str	r2, [r3]
1925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 966              		.loc 1 1925 10 is_stmt 0 view .LVU317
 967 00e4 0020     		movs	r0, #0
 968 00e6 DBE7     		b	.L50
 969              		.cfi_endproc
 970              	.LFE1111:
 972              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 973              		.align	1
 974              		.global	HAL_ADC_GetValue
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu fpv4-sp-d16
 980              	HAL_ADC_GetValue:
 981              	.LVL61:
 982              	.LFB1116:
1927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1932:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         OVR overrun.
1933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         mode), the user must:
1940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1941:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Process locked */
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_LOCK(hadc);
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 179


1958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable the ADC peripheral */
1960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1961:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1964:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state                                                        */
1966:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1967:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1968:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1969:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1970:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1971:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1972:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code */
1973:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
1974:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Reset all ADC error code fields */
1975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1979:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1980:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
1984:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1985:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset all ADC error code fields */
1986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1987:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1988:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1990:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1992:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1993:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1994:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Process unlocked */
1995:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1996:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1999:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
2000:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
2001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2002:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
2003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
2004:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
2006:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
2007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
2008:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
2009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         default:
2010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
2011:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
2012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2014:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable ADC overrun interrupt */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 180


2015:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
2016:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
2017:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
2018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2019:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2021:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
2024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
2025:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
2026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* trigger event.                                                       */
2027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Start ADC group regular conversion */
2028:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
2029:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
2031:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2032:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Process unlocked */
2033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2036:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2037:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2038:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2039:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2041:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2042:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
2043:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
2044:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2046:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2048:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
2049:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
2050:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
2052:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2053:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
2054:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2060:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
2061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
2062:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2063:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2064:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
2065:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
2066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2067:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
2068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2070:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2071:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 181


2072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2073:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2074:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
2075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
2077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
2080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2085:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2086:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2087:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
2088:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2091:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2092:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2093:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2095:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2097:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
2098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2099:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
2101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
2102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
2106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Interruptions enabled in this function:
2107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
2108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
2109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param pData Destination Buffer address.
2111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
2112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
2113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
2115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Process locked */
2125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_LOCK(hadc);
2126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable the ADC peripheral */
2128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 182


2129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC state                                                        */
2134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset all ADC error code fields */
2142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
2143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
2151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Reset all ADC error code fields */
2153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the DMA error callback */
2164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* operations)                                                        */
2173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Process unlocked */
2176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Enable ADC DMA mode */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 183


2186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
2188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
2191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Start the DMA channel */
2193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* trigger event.                                                       */
2199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Start ADC group regular conversion */
2200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
2203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Process unlocked */
2205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
2214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
2215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         ADC peripheral.
2221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
2226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
2236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
2240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 184


2243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
2250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
2253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update ADC state machine to error */
2264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
2279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (void)ADC_Disable(hadc);
2281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
2290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 185


2300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
2301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
2304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
2305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            to flag EOC.
2316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         To clear this flag, either use function:
2320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval ADC group regular conversion data
2325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 983              		.loc 1 2327 1 is_stmt 1 view -0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              		@ link register save eliminated.
2328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 988              		.loc 1 2329 3 view .LVU319
2330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return ADC converted value */
2335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return hadc->Instance->DR;
 989              		.loc 1 2335 3 view .LVU320
 990              		.loc 1 2335 14 is_stmt 0 view .LVU321
 991 0000 0368     		ldr	r3, [r0]
 992              		.loc 1 2335 24 view .LVU322
 993 0002 186C     		ldr	r0, [r3, #64]
 994              	.LVL62:
2336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 995              		.loc 1 2336 1 view .LVU323
 996 0004 7047     		bx	lr
 997              		.cfi_endproc
 998              	.LFE1116:
 1000              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1001              		.align	1
 1002              		.weak	HAL_ADC_ConvCpltCallback
 1003              		.syntax unified
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 186


 1004              		.thumb
 1005              		.thumb_func
 1006              		.fpu fpv4-sp-d16
 1008              	HAL_ADC_ConvCpltCallback:
 1009              	.LVL63:
 1010              	.LFB1118:
2337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
2342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
2349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_cfgr;
2352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
2353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* End Of Sampling callback */
2369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear regular group conversion flag */
2376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 187


2388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* to disable interruption.                                               */
2393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (READ_BIT (hadc->Instance->CFGR1, ADC_CFGR1_CONT) != ADC_CFGR1_CONT)
2398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (READ_BIT (hadc->Instance->CFGR, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
2401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
2409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Set ADC state */
2416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
2420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
2422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
2423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else
2424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
2425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Change ADC state to error state */
2426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
2431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Conversion complete callback */
2436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       possibility to use:                                              */
2439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
2440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 188


2445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear regular group conversion flag */
2447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
2456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Retrieve ADC configuration */
2469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_adc_inj_is_trigger_source_sw_start != 0UL)
2479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL) ||
2481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
2482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
2483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Particular case if injected contexts queue is enabled:             */
2488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* when the last context has been fully processed, JSQR is reset      */
2489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* by the hardware. Even if no injected conversion is planned to come */
2490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* (queue empty, triggers are ignored), it can start again            */
2491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* immediately after setting a new context (JADSTART is still set).   */
2492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Therefore, state of HAL ADC injected group is kept to busy.        */
2493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM) == 0UL)
2494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
2495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* JADSTART==0 (no conversion on going)                             */
2497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
2499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Disable ADC end of sequence conversion interrupt  */
2500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 189


2502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Set ADC state */
2503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
2507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
2509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
2510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             else
2511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
2512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Update ADC state machine to error */
2513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Set ADC error code to ADC peripheral internal error */
2516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
2518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
2519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Injected Conversion complete callback */
2524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               sequence.    */
2529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear injected group conversion flag */
2536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
2544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Level out of window 1 callback */
2547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 190


2559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
2561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Level out of window 2 callback */
2564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
2578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Level out of window 3 callback */
2581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* overrun ")                                                             */
2598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* error.                                                                 */
2600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       overrun_error = 1UL;
2603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
2605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Check DMA configuration */
2607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (LL_ADC_REG_GetDMATransfer(hadc->Instance) != LL_ADC_REG_DMA_TRANSFER_NONE)
2608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         overrun_error = 1UL;
2610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (overrun_error == 1UL)
2614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Change ADC state to error state */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 191


2616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to overrun */
2619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Error callback */
2622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear ADC overrun flag */
2634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
2639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Change ADC state to overrun state */
2644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Injected context queue overflow callback */
2653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
2667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 1011              		.loc 1 2669 1 is_stmt 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 192


 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
2670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
 1016              		.loc 1 2671 3 view .LVU325
2672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****    */
2676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1017              		.loc 1 2676 1 is_stmt 0 view .LVU326
 1018 0000 7047     		bx	lr
 1019              		.cfi_endproc
 1020              	.LFE1118:
 1022              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1023              		.align	1
 1024              		.weak	HAL_ADC_ConvHalfCpltCallback
 1025              		.syntax unified
 1026              		.thumb
 1027              		.thumb_func
 1028              		.fpu fpv4-sp-d16
 1030              	HAL_ADC_ConvHalfCpltCallback:
 1031              	.LVL64:
 1032              	.LFB1119:
2677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
2682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 1033              		.loc 1 2684 1 is_stmt 1 view -0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
2685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
 1038              		.loc 1 2686 3 view .LVU328
2687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1039              		.loc 1 2691 1 is_stmt 0 view .LVU329
 1040 0000 7047     		bx	lr
 1041              		.cfi_endproc
 1042              	.LFE1119:
 1044              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1045              		.align	1
 1046              		.global	ADC_DMAHalfConvCplt
 1047              		.syntax unified
 1048              		.thumb
 1049              		.thumb_func
 1050              		.fpu fpv4-sp-d16
 1052              	ADC_DMAHalfConvCplt:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 193


 1053              	.LVL65:
 1054              	.LFB1130:
2692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
2697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
2702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
2719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
2724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
2732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief    Peripheral Control functions
2736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
2737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @verbatim
2738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
2739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              ##### Peripheral Control functions #####
2740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
2741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]  This section provides functions allowing to:
2742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Configure channels on regular group
2743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Configure the analog watchdog
2744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @endverbatim
2746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 194


2747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         These internal paths can be disabled using function
2754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         HAL_ADC_DeInit().
2755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         without resetting the ADC.
2760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
2765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(sConfig->SamplingTime));
2777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)          ||
2779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)   )
2780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK_SEQ_FIXED(sConfig->Rank));
2782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
2786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
2787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
2791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
2792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Channel number                                                        */
2797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Channel sampling time                                                 */
2798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
2799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configure channel: depending on rank setting, add it or remove it from */
2802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* ADC sequencer.                                                         */
2803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* If sequencer set to not fully configurable with channel rank set to    */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 195


2804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* none, remove the channel from the sequencer.                           */
2805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Otherwise (sequencer set to fully configurable or to to not fully      */
2806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* configurable with channel rank to be set), configure the selected      */
2807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* channel.                                                               */
2808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(sConfig->Rank != ADC_RANK_NONE)
2809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2810:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Regular sequence configuration */
2811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: ADC channel configuration requires few ADC clock cycles        */
2812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       to be ready. Processing of ADC settings in this function       */
2813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       induce that a specific wait time is not necessary.             */
2814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       For more details on ADC channel configuration ready,           */
2815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       refer to function "LL_ADC_IsActiveFlag_CCRDY()".               */
2816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)         ||
2817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
2818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the channel by enabling the corresponding bitfield.            */
2821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_REG_SetSequencerChAdd(hadc->Instance, sConfig->Channel);
2822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
2824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Sequencer set to fully configurable:                               */
2826:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the channel by entering it into the selected rank.             */
2827:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
2828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Memorize the channel set into variable in HAL ADC handle */
2829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         MODIFY_REG(hadc->ADCGroupRegularSequencerRanks,
2830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
2831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel) << (sConfig->Rank & 0x1FUL));
2832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
2833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If the selected rank is below ADC group regular sequencer length,  */
2834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* apply the configuration in ADC register.                           */
2835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: Otherwise, configuration is not applied.                     */
2836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*       To apply it, parameter'NbrOfConversion' must be increased.   */        
2837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(((sConfig->Rank >> 2UL) + 1UL) <= hadc->Init.NbrOfConversion)
2838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
2843:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
2846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
2847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* internal measurement paths enable: If internal channel selected,     */
2848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* enable dedicated internal buffers and path.                          */
2849:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using         */
2850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
2851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       channel configuration parameter "Rank".                        */
2852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2853:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
2856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If the requested internal measurement path has already been enabled,   */
2857:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* bypass the configuration processing.                                   */
2858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_
2859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTE
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 196


2861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
2862:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2863:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Wait loop initialization and execution */
2864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2865:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
2868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           while(wait_loop_index != 0UL)
2869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
2870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             wait_loop_index--;
2871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
2872:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_P
2874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTE
2876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2877:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_AD
2878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTE
2880:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
2882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* nothing to do */
2884:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
2888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Regular sequencer configuration */
2890:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: Case of sequencer set to fully configurable:                   */
2891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       Sequencer rank cannot be disabled, only affected to            */
2892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       another channel.                                               */
2893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       To remove a rank, use parameter 'NbrOfConversion".             */
2894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)         ||
2895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
2896:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset the channel by disabling the corresponding bitfield.         */
2899:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_REG_SetSequencerChRem(hadc->Instance, sConfig->Channel);
2900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2901:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
2902:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* paths.                                                                 */
2905:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2908:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
2909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2910:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2911:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), ~LL_ADC_PATH_INT
2912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2913:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else if (sConfig->Channel == ADC_CHANNEL_VBAT)
2914:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), ~LL_ADC_PATH_INT
2916:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else if (sConfig->Channel == ADC_CHANNEL_VREFINT)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 197


2918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), ~LL_ADC_PATH_INT
2920:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
2922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* nothing to do */
2924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* parameters.                                                              */
2932:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
2935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
2937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
2941:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
2948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
2949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
2952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2961:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ignored (considered as reset) */
2963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2964:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification of channel number */
2966:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2967:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2968:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2969:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2970:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2971:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2972:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
2973:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2974:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 198


2975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
2976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
2977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2979:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2980:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Channel number                                                        */
2982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Channel rank                                                          */
2983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2984:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2985:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2987:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2988:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2990:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2992:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Channel offset                                                        */
2993:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
2994:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2995:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2996:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2999:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
3000:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
3001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3002:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
3004:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
3005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3006:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
3007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3008:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
3009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
3010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
3011:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
3013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3014:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC selected offset number */
3015:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
3016:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3017:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
3019:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
3021:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
3022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
3023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
3025:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
3027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3028:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
3029:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
3031:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 199


3032:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
3033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3036:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
3037:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3038:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3039:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3041:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
3042:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
3043:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Single or differential mode                                           */
3044:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
3045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3046:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
3048:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
3049:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3050:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of differential mode */
3051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
3052:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3053:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
3054:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
3055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
3057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
3058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3060:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
3061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
3062:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* paths.                                                                 */
3063:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using           */
3064:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* HAL_ADC_DeInit().                                                      */
3065:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
3067:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Configuration of common ADC parameters                                 */
3069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3070:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
3071:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Software is allowed to change common parameters only when all ADCs   */
3073:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* of the common group are disabled.                                    */
3074:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0U
3075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* If the requested internal measurement path has already been enabled, */
3077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* bypass the configuration processing.                                 */
3078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_AD
3079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
3081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
3082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Delay for temperature sensor stabilization time */
3085:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Wait loop initialization and execution */
3086:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Note: Variable divided by 2 to compensate partially              */
3087:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /*       CPU processing cycles, scaling in us split to not          */
3088:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /*       exceed 32 bits register capacity and handle low frequency. */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 200


3089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (10
3090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
3091:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
3092:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 wait_loop_index--;
3093:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
3094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
3095:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC
3097:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
3099:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
3100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
3102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_
3104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if (ADC_VREFINT_INSTANCE(hadc))
3106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
3107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
3109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else
3111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* nothing to do */
3113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If the requested internal measurement path has already been          */
3116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* enabled and other ADC of the common group are enabled, internal      */
3117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* measurement paths cannot be enabled.                                 */
3118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
3119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           tmp_hal_status = HAL_ERROR;
3124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
3130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
3131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* parameters.                                                              */
3132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
3133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
3135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
3141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 201


3146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Configure the analog watchdog.
3150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
3151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
3152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
3153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
3154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         the ADC.
3155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
3156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         For parameters constraints, see comments of structure
3157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
3158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   On this STM32 serie, analog watchdog thresholds cannot be modified
3159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         while ADC conversion is on going.
3160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
3162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
3163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
3165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
3168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
3169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
3170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
3173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
3175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
3177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
3178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
3179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if(AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)
3182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
3184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
3185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
3186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
3187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
3189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verify thresholds range */
3192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verify if thresholds are within the selected ADC resolution */
3194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
3198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
3200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
3201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
3202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 202


3203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
3204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
3206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
3208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
3212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
3214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
3215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
3221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
3223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
3227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
3228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
3229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Analog watchdog configuration */
3232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
3246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 203


3260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
3264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution:         */
3280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* are set to 0                                                         */
3282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
3283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
3284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
3303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Feature "ADC analog watchdog 2 and 3" not available on ADC peripheral of this STM32WB device
3309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
3312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 204


3317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
3320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else
3327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
3334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
3337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
3342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Shift the thresholds in function of the selected ADC resolution      */
3350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* have to be left-aligned on bit 7, the LSB (right bits) are set to 0  */
3351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
3352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
3353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 205


3374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
3380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
3396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
3405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
3406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
3407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
3409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
3414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
3417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
3418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
3423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
3428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @verbatim
3429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
3430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ##### Peripheral state and errors functions #####
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 206


3431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
3432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
3433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     peripheral.
3435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Check the ADC state
3436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Check the ADC error code
3437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @endverbatim
3439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
3440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Return the ADC handle state.
3444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         compared with states bits.
3446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         For example:
3447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
3455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return ADC handle state */
3458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return hadc->State;
3459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Return the ADC error code.
3463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
3469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return hadc->ErrorCode;
3472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
3476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
3480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
3484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Stop ADC conversion.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 207


3488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          This parameter can be one of the following values:
3491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP               ADC regular conversion type.
3492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP         (1)  ADC injected conversion type.
3493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP (1)  ADC regular and injected conversion type.
3494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
3495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (1) On STM32WB serie, parameter not available on devices: STM32WB10xx, STM32WB15xx.
3496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
3497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(ConversionGroup);
3502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
3503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
3504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
3505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
3506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
3508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification if ADC is not already stopped on regular group to bypass    */
3509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* this function if not needed.                                             */
3510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
3513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Stop ADC group regular conversion */
3517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
3518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
3520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Get tick count */
3522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tickstart = HAL_GetTick();
3523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
3524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
3525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update ADC state machine to error */
3529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
3531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
3534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         return HAL_ERROR;
3535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
3538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
3541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 208


3545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
3548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
3558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* auto-delay mode.                                                       */
3561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* (see reference manual).                                                */
3565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
3569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Use stop of regular group */
3571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_ERROR;
3585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear JEOS */
3590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Stop ADC group regular conversion */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 209


3602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Stop ADC group injected conversion */
3616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (conversion_group_reassigned)
3623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
3627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
3630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default:
3632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
3634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tickstart = HAL_GetTick();
3638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_ERROR;
3653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 210


3659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return HAL status */
3661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
3662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Enable the selected ADC.
3668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
3672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
3676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
3677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR
3687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
3690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update ADC state machine to error */
3692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       return HAL_ERROR;
3698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable the ADC peripheral */
3701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) & LL_ADC_PATH_INTE
3704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
3706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Wait loop initialization and execution */
3707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
3708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
3709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
3710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US / 10UL) * ((SystemCoreClock / (100
3711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
3712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         wait_loop_index--;
3714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 211


3716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
3719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* performed automatically by hardware and flag ADC ready is not set.     */
3720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
3721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /*ADC_SUPPORT_2_5_MSPS */
3722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Wait for ADC effectively enabled */
3724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tickstart = HAL_GetTick();
3725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
3726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit 
3729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the 
3730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             calibration logic.
3731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
3732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             4 ADC clock cycle duration */
3734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
3735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
3736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
3739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
3741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
3746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
3749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_ERROR;
3750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return HAL status */
3756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
3757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Disable the selected ADC.
3761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         stopped.
3763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
3765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
3769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 212


3773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       disabled.                                                          */
3774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
3777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
3784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Disable the ADC peripheral */
3786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
3790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update ADC state machine to error */
3792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       return HAL_ERROR;
3798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Get tick count */
3802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tickstart = HAL_GetTick();
3803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3810:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_ERROR;
3818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return HAL status */
3824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
3825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3826:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3827:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 213


3830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
3831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
3841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3843:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* to disable interruption.                                               */
3846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
3848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(   (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3849:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        && (hadc->Init.ContinuousConvMode == DISABLE)
3850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       )
3851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
3853:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
3854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
3856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
3857:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
3858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
3860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
3861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
3862:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
3863:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
3864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
3865:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC state */
3866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
3867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
3868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                             HAL_ADC_STATE_READY);
3869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
3871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3872:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Change ADC state to error state */
3873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
3875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3877:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3880:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
3881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3884:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Are conversions software-triggered ? */
3885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 214


3887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Is CONT bit set ? */
3888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3890:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3896:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3899:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
3900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3901:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3902:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
3904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3905:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3908:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3910:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3911:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3913:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3914:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Conversion complete callback */
3916:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3920:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3932:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
3934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Call ADC DMA error callback */
3936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3941:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 215


3944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
3945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 1055              		.loc 1 3947 1 is_stmt 1 view -0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              		.loc 1 3947 1 is_stmt 0 view .LVU331
 1060 0000 08B5     		push	{r3, lr}
 1061              	.LCFI6:
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 3, -8
 1064              		.cfi_offset 14, -4
3948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1065              		.loc 1 3949 3 is_stmt 1 view .LVU332
 1066              	.LVL66:
3950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Half conversion callback */
3952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1067              		.loc 1 3955 3 view .LVU333
 1068 0002 806A     		ldr	r0, [r0, #40]
 1069              	.LVL67:
 1070              		.loc 1 3955 3 is_stmt 0 view .LVU334
 1071 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1072              	.LVL68:
3956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1073              		.loc 1 3957 1 view .LVU335
 1074 0008 08BD     		pop	{r3, pc}
 1075              		.cfi_endproc
 1076              	.LFE1130:
 1078              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1079              		.align	1
 1080              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1084              		.fpu fpv4-sp-d16
 1086              	HAL_ADC_LevelOutOfWindowCallback:
 1087              	.LVL69:
 1088              	.LFB1120:
2699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1089              		.loc 1 2699 1 is_stmt 1 view -0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              		@ link register save eliminated.
2701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1094              		.loc 1 2701 3 view .LVU337
2706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1095              		.loc 1 2706 1 is_stmt 0 view .LVU338
 1096 0000 7047     		bx	lr
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 216


 1097              		.cfi_endproc
 1098              	.LFE1120:
 1100              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1101              		.align	1
 1102              		.weak	HAL_ADC_ErrorCallback
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu fpv4-sp-d16
 1108              	HAL_ADC_ErrorCallback:
 1109              	.LVL70:
 1110              	.LFB1121:
2721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1111              		.loc 1 2721 1 is_stmt 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
2723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1116              		.loc 1 2723 3 view .LVU340
2728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1117              		.loc 1 2728 1 is_stmt 0 view .LVU341
 1118 0000 7047     		bx	lr
 1119              		.cfi_endproc
 1120              	.LFE1121:
 1122              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1123              		.align	1
 1124              		.global	HAL_ADC_IRQHandler
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1128              		.fpu fpv4-sp-d16
 1130              	HAL_ADC_IRQHandler:
 1131              	.LVL71:
 1132              	.LFB1117:
2344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1133              		.loc 1 2344 1 is_stmt 1 view -0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
2344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1137              		.loc 1 2344 1 is_stmt 0 view .LVU343
 1138 0000 70B5     		push	{r4, r5, r6, lr}
 1139              	.LCFI7:
 1140              		.cfi_def_cfa_offset 16
 1141              		.cfi_offset 4, -16
 1142              		.cfi_offset 5, -12
 1143              		.cfi_offset 6, -8
 1144              		.cfi_offset 14, -4
 1145 0002 0446     		mov	r4, r0
2345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1146              		.loc 1 2345 3 is_stmt 1 view .LVU344
 1147              	.LVL72:
2346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1148              		.loc 1 2346 3 view .LVU345
2346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1149              		.loc 1 2346 26 is_stmt 0 view .LVU346
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 217


 1150 0004 0368     		ldr	r3, [r0]
2346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1151              		.loc 1 2346 12 view .LVU347
 1152 0006 1E68     		ldr	r6, [r3]
 1153              	.LVL73:
2347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
 1154              		.loc 1 2347 3 is_stmt 1 view .LVU348
2347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
 1155              		.loc 1 2347 12 is_stmt 0 view .LVU349
 1156 0008 5D68     		ldr	r5, [r3, #4]
 1157              	.LVL74:
2349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 1158              		.loc 1 2349 3 is_stmt 1 view .LVU350
2350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_cfgr;
 1159              		.loc 1 2350 3 view .LVU351
2351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 1160              		.loc 1 2351 3 view .LVU352
2355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1161              		.loc 1 2355 3 view .LVU353
2356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1162              		.loc 1 2356 3 view .LVU354
2359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1163              		.loc 1 2359 3 view .LVU355
2359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1164              		.loc 1 2359 6 is_stmt 0 view .LVU356
 1165 000a 16F0020F 		tst	r6, #2
 1166 000e 10D0     		beq	.L70
2359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1167              		.loc 1 2359 54 discriminator 1 view .LVU357
 1168 0010 15F0020F 		tst	r5, #2
 1169 0014 0DD0     		beq	.L70
2362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1170              		.loc 1 2362 5 is_stmt 1 view .LVU358
2362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1171              		.loc 1 2362 14 is_stmt 0 view .LVU359
 1172 0016 436D     		ldr	r3, [r0, #84]
2362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1173              		.loc 1 2362 8 view .LVU360
 1174 0018 13F0100F 		tst	r3, #16
 1175 001c 03D1     		bne	.L71
2365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1176              		.loc 1 2365 7 is_stmt 1 view .LVU361
 1177 001e 436D     		ldr	r3, [r0, #84]
 1178 0020 43F40063 		orr	r3, r3, #2048
 1179 0024 4365     		str	r3, [r0, #84]
 1180              	.L71:
2372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1181              		.loc 1 2372 5 view .LVU362
 1182 0026 2046     		mov	r0, r4
 1183              	.LVL75:
2372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1184              		.loc 1 2372 5 is_stmt 0 view .LVU363
 1185 0028 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1186              	.LVL76:
2376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1187              		.loc 1 2376 5 is_stmt 1 view .LVU364
 1188 002c 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 218


 1189 002e 0222     		movs	r2, #2
 1190 0030 1A60     		str	r2, [r3]
 1191              	.L70:
2380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1192              		.loc 1 2380 3 view .LVU365
2380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1193              		.loc 1 2380 6 is_stmt 0 view .LVU366
 1194 0032 16F0040F 		tst	r6, #4
 1195 0036 02D0     		beq	.L72
2380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1196              		.loc 1 2380 51 discriminator 1 view .LVU367
 1197 0038 15F0040F 		tst	r5, #4
 1198 003c 05D1     		bne	.L73
 1199              	.L72:
2380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1200              		.loc 1 2380 94 discriminator 3 view .LVU368
 1201 003e 16F0080F 		tst	r6, #8
 1202 0042 3AD0     		beq	.L74
2381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1203              		.loc 1 2381 51 view .LVU369
 1204 0044 15F0080F 		tst	r5, #8
 1205 0048 37D0     		beq	.L74
 1206              	.L73:
2384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1207              		.loc 1 2384 5 is_stmt 1 view .LVU370
2384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1208              		.loc 1 2384 14 is_stmt 0 view .LVU371
 1209 004a 636D     		ldr	r3, [r4, #84]
2384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1210              		.loc 1 2384 8 view .LVU372
 1211 004c 13F0100F 		tst	r3, #16
 1212 0050 03D1     		bne	.L75
2387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1213              		.loc 1 2387 7 is_stmt 1 view .LVU373
 1214 0052 636D     		ldr	r3, [r4, #84]
 1215 0054 43F40073 		orr	r3, r3, #512
 1216 0058 6365     		str	r3, [r4, #84]
 1217              	.L75:
2393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1218              		.loc 1 2393 5 view .LVU374
2393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1219              		.loc 1 2393 9 is_stmt 0 view .LVU375
 1220 005a 2368     		ldr	r3, [r4]
 1221              	.LVL77:
 1222              	.LBB350:
 1223              	.LBI350:
3481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1224              		.loc 2 3481 26 is_stmt 1 view .LVU376
 1225              	.LBB351:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1226              		.loc 2 3486 3 view .LVU377
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1227              		.loc 2 3486 12 is_stmt 0 view .LVU378
 1228 005c DA68     		ldr	r2, [r3, #12]
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1229              		.loc 2 3486 103 view .LVU379
 1230 005e 12F4406F 		tst	r2, #3072
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 219


 1231 0062 24D1     		bne	.L76
 1232              	.LVL78:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1233              		.loc 2 3486 103 view .LVU380
 1234              	.LBE351:
 1235              	.LBE350:
2399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 1236              		.loc 1 2399 7 is_stmt 1 view .LVU381
2399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 1237              		.loc 1 2399 11 is_stmt 0 view .LVU382
 1238 0064 DA68     		ldr	r2, [r3, #12]
2399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 1239              		.loc 1 2399 10 view .LVU383
 1240 0066 12F4005F 		tst	r2, #8192
 1241 006a 20D1     		bne	.L76
2403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1242              		.loc 1 2403 9 is_stmt 1 view .LVU384
2403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1243              		.loc 1 2403 13 is_stmt 0 view .LVU385
 1244 006c 1A68     		ldr	r2, [r3]
2403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1245              		.loc 1 2403 12 view .LVU386
 1246 006e 12F0080F 		tst	r2, #8
 1247 0072 1CD0     		beq	.L76
2407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1248              		.loc 1 2407 11 is_stmt 1 view .LVU387
 1249              	.LVL79:
 1250              	.LBB352:
 1251              	.LBI352:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1252              		.loc 2 6851 26 view .LVU388
 1253              	.LBB353:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1254              		.loc 2 6853 3 view .LVU389
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1255              		.loc 2 6853 12 is_stmt 0 view .LVU390
 1256 0074 9A68     		ldr	r2, [r3, #8]
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1257              		.loc 2 6853 74 view .LVU391
 1258 0076 12F0040F 		tst	r2, #4
 1259 007a 10D1     		bne	.L77
 1260              	.LVL80:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1261              		.loc 2 6853 74 view .LVU392
 1262              	.LBE353:
 1263              	.LBE352:
2413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1264              		.loc 1 2413 13 is_stmt 1 view .LVU393
 1265 007c 5A68     		ldr	r2, [r3, #4]
 1266 007e 22F00C02 		bic	r2, r2, #12
 1267 0082 5A60     		str	r2, [r3, #4]
2416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1268              		.loc 1 2416 13 view .LVU394
 1269 0084 636D     		ldr	r3, [r4, #84]
 1270 0086 23F48073 		bic	r3, r3, #256
 1271 008a 6365     		str	r3, [r4, #84]
2418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 220


 1272              		.loc 1 2418 13 view .LVU395
2418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 1273              		.loc 1 2418 22 is_stmt 0 view .LVU396
 1274 008c 636D     		ldr	r3, [r4, #84]
2418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 1275              		.loc 1 2418 16 view .LVU397
 1276 008e 13F4805F 		tst	r3, #4096
 1277 0092 0CD1     		bne	.L76
2420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
 1278              		.loc 1 2420 15 is_stmt 1 view .LVU398
 1279 0094 636D     		ldr	r3, [r4, #84]
 1280 0096 43F00103 		orr	r3, r3, #1
 1281 009a 6365     		str	r3, [r4, #84]
 1282 009c 07E0     		b	.L76
 1283              	.LVL81:
 1284              	.L77:
2426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1285              		.loc 1 2426 13 view .LVU399
 1286 009e 636D     		ldr	r3, [r4, #84]
 1287 00a0 43F01003 		orr	r3, r3, #16
 1288 00a4 6365     		str	r3, [r4, #84]
2429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 1289              		.loc 1 2429 13 view .LVU400
 1290 00a6 A36D     		ldr	r3, [r4, #88]
 1291 00a8 43F00103 		orr	r3, r3, #1
 1292 00ac A365     		str	r3, [r4, #88]
 1293              	.L76:
2443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1294              		.loc 1 2443 5 view .LVU401
 1295 00ae 2046     		mov	r0, r4
 1296 00b0 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1297              	.LVL82:
2451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1298              		.loc 1 2451 5 view .LVU402
 1299 00b4 2368     		ldr	r3, [r4]
 1300 00b6 0C22     		movs	r2, #12
 1301 00b8 1A60     		str	r2, [r3]
 1302              	.L74:
2458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1303              		.loc 1 2458 3 view .LVU403
2458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1304              		.loc 1 2458 6 is_stmt 0 view .LVU404
 1305 00ba 16F0200F 		tst	r6, #32
 1306 00be 02D0     		beq	.L79
2458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1307              		.loc 1 2458 53 discriminator 1 view .LVU405
 1308 00c0 15F0200F 		tst	r5, #32
 1309 00c4 05D1     		bne	.L80
 1310              	.L79:
2458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1311              		.loc 1 2458 98 discriminator 3 view .LVU406
 1312 00c6 16F0400F 		tst	r6, #64
 1313 00ca 4DD0     		beq	.L81
2459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1314              		.loc 1 2459 53 view .LVU407
 1315 00cc 15F0400F 		tst	r5, #64
 1316 00d0 4AD0     		beq	.L81
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 221


 1317              	.L80:
2462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1318              		.loc 1 2462 5 is_stmt 1 view .LVU408
2462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1319              		.loc 1 2462 14 is_stmt 0 view .LVU409
 1320 00d2 636D     		ldr	r3, [r4, #84]
2462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1321              		.loc 1 2462 8 view .LVU410
 1322 00d4 13F0100F 		tst	r3, #16
 1323 00d8 03D1     		bne	.L82
2465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1324              		.loc 1 2465 7 is_stmt 1 view .LVU411
 1325 00da 636D     		ldr	r3, [r4, #84]
 1326 00dc 43F40053 		orr	r3, r3, #8192
 1327 00e0 6365     		str	r3, [r4, #84]
 1328              	.L82:
2469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1329              		.loc 1 2469 5 view .LVU412
2469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1330              		.loc 1 2469 46 is_stmt 0 view .LVU413
 1331 00e2 2368     		ldr	r3, [r4]
 1332              	.LVL83:
 1333              	.LBB354:
 1334              	.LBI354:
4712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1335              		.loc 2 4712 26 is_stmt 1 view .LVU414
 1336              	.LBB355:
4714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1337              		.loc 2 4714 3 view .LVU415
4714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1338              		.loc 2 4714 12 is_stmt 0 view .LVU416
 1339 00e4 DA6C     		ldr	r2, [r3, #76]
4714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1340              		.loc 2 4714 105 view .LVU417
 1341 00e6 12F0C00F 		tst	r2, #192
 1342 00ea 2BD1     		bne	.L96
 1343 00ec 0121     		movs	r1, #1
 1344              	.L83:
 1345              	.LVL84:
4714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1346              		.loc 2 4714 105 view .LVU418
 1347              	.LBE355:
 1348              	.LBE354:
2470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 1349              		.loc 1 2470 5 is_stmt 1 view .LVU419
 1350              	.LBB357:
 1351              	.LBI357:
3481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1352              		.loc 2 3481 26 view .LVU420
 1353              	.LBB358:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1354              		.loc 2 3486 3 view .LVU421
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1355              		.loc 2 3486 12 is_stmt 0 view .LVU422
 1356 00ee DA68     		ldr	r2, [r3, #12]
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1357              		.loc 2 3486 103 view .LVU423
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 222


 1358 00f0 12F4406F 		tst	r2, #3072
 1359 00f4 28D1     		bne	.L97
 1360 00f6 0120     		movs	r0, #1
 1361              	.L84:
 1362              	.LVL85:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1363              		.loc 2 3486 103 view .LVU424
 1364              	.LBE358:
 1365              	.LBE357:
2471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1366              		.loc 1 2471 5 is_stmt 1 view .LVU425
2471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1367              		.loc 1 2471 14 is_stmt 0 view .LVU426
 1368 00f8 DA68     		ldr	r2, [r3, #12]
 1369              	.LVL86:
2478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1370              		.loc 1 2478 5 is_stmt 1 view .LVU427
2478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1371              		.loc 1 2478 8 is_stmt 0 view .LVU428
 1372 00fa 79B3     		cbz	r1, .L85
2480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1373              		.loc 1 2480 7 is_stmt 1 view .LVU429
2480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1374              		.loc 1 2480 10 is_stmt 0 view .LVU430
 1375 00fc 12F0007F 		tst	r2, #33554432
 1376 0100 03D0     		beq	.L86
2480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1377              		.loc 1 2480 55 discriminator 1 view .LVU431
 1378 0102 58B3     		cbz	r0, .L85
2481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
 1379              		.loc 1 2481 60 view .LVU432
 1380 0104 12F4005F 		tst	r2, #8192
 1381 0108 28D1     		bne	.L85
 1382              	.L86:
2485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1383              		.loc 1 2485 9 is_stmt 1 view .LVU433
2485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1384              		.loc 1 2485 13 is_stmt 0 view .LVU434
 1385 010a 1A68     		ldr	r2, [r3]
 1386              	.LVL87:
2485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1387              		.loc 1 2485 12 view .LVU435
 1388 010c 12F0400F 		tst	r2, #64
 1389 0110 24D0     		beq	.L85
2493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1390              		.loc 1 2493 11 is_stmt 1 view .LVU436
2493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1391              		.loc 1 2493 15 is_stmt 0 view .LVU437
 1392 0112 DA68     		ldr	r2, [r3, #12]
2493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1393              		.loc 1 2493 14 view .LVU438
 1394 0114 12F4001F 		tst	r2, #2097152
 1395 0118 20D1     		bne	.L85
2497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 1396              		.loc 1 2497 13 is_stmt 1 view .LVU439
 1397              	.LVL88:
 1398              	.LBB360:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 223


 1399              	.LBI360:
7006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1400              		.loc 2 7006 26 view .LVU440
 1401              	.LBB361:
 1402              		.loc 2 7008 3 view .LVU441
 1403              		.loc 2 7008 12 is_stmt 0 view .LVU442
 1404 011a 9A68     		ldr	r2, [r3, #8]
 1405              		.loc 2 7008 76 view .LVU443
 1406 011c 12F0080F 		tst	r2, #8
 1407 0120 14D1     		bne	.L87
 1408              	.LVL89:
 1409              		.loc 2 7008 76 view .LVU444
 1410              	.LBE361:
 1411              	.LBE360:
2500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1412              		.loc 1 2500 15 is_stmt 1 view .LVU445
 1413 0122 5A68     		ldr	r2, [r3, #4]
 1414 0124 22F06002 		bic	r2, r2, #96
 1415 0128 5A60     		str	r2, [r3, #4]
2503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1416              		.loc 1 2503 15 view .LVU446
 1417 012a 636D     		ldr	r3, [r4, #84]
 1418 012c 23F48053 		bic	r3, r3, #4096
 1419 0130 6365     		str	r3, [r4, #84]
2505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 1420              		.loc 1 2505 15 view .LVU447
2505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 1421              		.loc 1 2505 24 is_stmt 0 view .LVU448
 1422 0132 636D     		ldr	r3, [r4, #84]
2505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 1423              		.loc 1 2505 18 view .LVU449
 1424 0134 13F4807F 		tst	r3, #256
 1425 0138 10D1     		bne	.L85
2507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
 1426              		.loc 1 2507 17 is_stmt 1 view .LVU450
 1427 013a 636D     		ldr	r3, [r4, #84]
 1428 013c 43F00103 		orr	r3, r3, #1
 1429 0140 6365     		str	r3, [r4, #84]
 1430 0142 0BE0     		b	.L85
 1431              	.LVL90:
 1432              	.L96:
 1433              	.LBB362:
 1434              	.LBB356:
4714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1435              		.loc 2 4714 105 is_stmt 0 view .LVU451
 1436 0144 0021     		movs	r1, #0
 1437 0146 D2E7     		b	.L83
 1438              	.LVL91:
 1439              	.L97:
4714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1440              		.loc 2 4714 105 view .LVU452
 1441              	.LBE356:
 1442              	.LBE362:
 1443              	.LBB363:
 1444              	.LBB359:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1445              		.loc 2 3486 103 view .LVU453
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 224


 1446 0148 0020     		movs	r0, #0
 1447 014a D5E7     		b	.L84
 1448              	.LVL92:
 1449              	.L87:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1450              		.loc 2 3486 103 view .LVU454
 1451              	.LBE359:
 1452              	.LBE363:
2513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1453              		.loc 1 2513 15 is_stmt 1 view .LVU455
 1454 014c 636D     		ldr	r3, [r4, #84]
 1455 014e 43F01003 		orr	r3, r3, #16
 1456 0152 6365     		str	r3, [r4, #84]
2516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
 1457              		.loc 1 2516 15 view .LVU456
 1458 0154 A36D     		ldr	r3, [r4, #88]
 1459 0156 43F00103 		orr	r3, r3, #1
 1460 015a A365     		str	r3, [r4, #88]
 1461              	.L85:
2532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1462              		.loc 1 2532 5 view .LVU457
 1463 015c 2046     		mov	r0, r4
 1464              	.LVL93:
2532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1465              		.loc 1 2532 5 is_stmt 0 view .LVU458
 1466 015e FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1467              	.LVL94:
2536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1468              		.loc 1 2536 5 is_stmt 1 view .LVU459
 1469 0162 2368     		ldr	r3, [r4]
 1470 0164 6022     		movs	r2, #96
 1471 0166 1A60     		str	r2, [r3]
 1472              	.L81:
2541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1473              		.loc 1 2541 3 view .LVU460
2541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1474              		.loc 1 2541 6 is_stmt 0 view .LVU461
 1475 0168 16F0800F 		tst	r6, #128
 1476 016c 02D0     		beq	.L89
2541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1477              		.loc 1 2541 52 discriminator 1 view .LVU462
 1478 016e 15F0800F 		tst	r5, #128
 1479 0172 2DD1     		bne	.L99
 1480              	.L89:
2558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1481              		.loc 1 2558 3 is_stmt 1 view .LVU463
2558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1482              		.loc 1 2558 6 is_stmt 0 view .LVU464
 1483 0174 16F4807F 		tst	r6, #256
 1484 0178 02D0     		beq	.L90
2558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1485              		.loc 1 2558 52 discriminator 1 view .LVU465
 1486 017a 15F4807F 		tst	r5, #256
 1487 017e 32D1     		bne	.L100
 1488              	.L90:
2575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1489              		.loc 1 2575 3 is_stmt 1 view .LVU466
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 225


2575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1490              		.loc 1 2575 6 is_stmt 0 view .LVU467
 1491 0180 16F4007F 		tst	r6, #512
 1492 0184 02D0     		beq	.L91
2575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1493              		.loc 1 2575 52 discriminator 1 view .LVU468
 1494 0186 15F4007F 		tst	r5, #512
 1495 018a 38D1     		bne	.L101
 1496              	.L91:
2592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1497              		.loc 1 2592 3 is_stmt 1 view .LVU469
2592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1498              		.loc 1 2592 6 is_stmt 0 view .LVU470
 1499 018c 16F0100F 		tst	r6, #16
 1500 0190 17D0     		beq	.L92
2592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1501              		.loc 1 2592 50 discriminator 1 view .LVU471
 1502 0192 15F0100F 		tst	r5, #16
 1503 0196 14D0     		beq	.L92
2600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1504              		.loc 1 2600 5 is_stmt 1 view .LVU472
2600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1505              		.loc 1 2600 19 is_stmt 0 view .LVU473
 1506 0198 636B     		ldr	r3, [r4, #52]
2600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1507              		.loc 1 2600 8 view .LVU474
 1508 019a 23B1     		cbz	r3, .L93
2607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1509              		.loc 1 2607 7 is_stmt 1 view .LVU475
2607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1510              		.loc 1 2607 11 is_stmt 0 view .LVU476
 1511 019c 2368     		ldr	r3, [r4]
 1512              	.LVL95:
 1513              	.LBB364:
 1514              	.LBI364:
4559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1515              		.loc 2 4559 26 is_stmt 1 view .LVU477
 1516              	.LBB365:
4564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1517              		.loc 2 4564 3 view .LVU478
4564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1518              		.loc 2 4564 21 is_stmt 0 view .LVU479
 1519 019e DB68     		ldr	r3, [r3, #12]
 1520              	.LVL96:
4564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1521              		.loc 2 4564 21 view .LVU480
 1522              	.LBE365:
 1523              	.LBE364:
2607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1524              		.loc 1 2607 10 view .LVU481
 1525 01a0 13F0030F 		tst	r3, #3
 1526 01a4 0AD0     		beq	.L94
 1527              	.L93:
 1528              	.LVL97:
2616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1529              		.loc 1 2616 7 is_stmt 1 view .LVU482
 1530 01a6 636D     		ldr	r3, [r4, #84]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 226


 1531 01a8 43F48063 		orr	r3, r3, #1024
 1532 01ac 6365     		str	r3, [r4, #84]
2619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1533              		.loc 1 2619 7 view .LVU483
 1534 01ae A36D     		ldr	r3, [r4, #88]
 1535 01b0 43F00203 		orr	r3, r3, #2
 1536 01b4 A365     		str	r3, [r4, #88]
2629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1537              		.loc 1 2629 7 view .LVU484
 1538 01b6 2046     		mov	r0, r4
 1539 01b8 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1540              	.LVL98:
 1541              	.L94:
2634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1542              		.loc 1 2634 5 view .LVU485
 1543 01bc 2368     		ldr	r3, [r4]
 1544 01be 1022     		movs	r2, #16
 1545 01c0 1A60     		str	r2, [r3]
 1546              	.L92:
2641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1547              		.loc 1 2641 3 view .LVU486
2641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1548              		.loc 1 2641 6 is_stmt 0 view .LVU487
 1549 01c2 16F4806F 		tst	r6, #1024
 1550 01c6 02D0     		beq	.L69
2641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1551              		.loc 1 2641 54 discriminator 1 view .LVU488
 1552 01c8 15F4806F 		tst	r5, #1024
 1553 01cc 23D1     		bne	.L102
 1554              	.L69:
2661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1555              		.loc 1 2661 1 view .LVU489
 1556 01ce 70BD     		pop	{r4, r5, r6, pc}
 1557              	.LVL99:
 1558              	.L99:
2544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1559              		.loc 1 2544 5 is_stmt 1 view .LVU490
 1560 01d0 636D     		ldr	r3, [r4, #84]
 1561 01d2 43F48033 		orr	r3, r3, #65536
 1562 01d6 6365     		str	r3, [r4, #84]
2550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1563              		.loc 1 2550 5 view .LVU491
 1564 01d8 2046     		mov	r0, r4
 1565 01da FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1566              	.LVL100:
2554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1567              		.loc 1 2554 5 view .LVU492
 1568 01de 2368     		ldr	r3, [r4]
 1569 01e0 8022     		movs	r2, #128
 1570 01e2 1A60     		str	r2, [r3]
 1571 01e4 C6E7     		b	.L89
 1572              	.L100:
2561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1573              		.loc 1 2561 5 view .LVU493
 1574 01e6 636D     		ldr	r3, [r4, #84]
 1575 01e8 43F40033 		orr	r3, r3, #131072
 1576 01ec 6365     		str	r3, [r4, #84]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 227


2567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1577              		.loc 1 2567 5 view .LVU494
 1578 01ee 2046     		mov	r0, r4
 1579 01f0 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1580              	.LVL101:
2571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1581              		.loc 1 2571 5 view .LVU495
 1582 01f4 2368     		ldr	r3, [r4]
 1583 01f6 4FF48072 		mov	r2, #256
 1584 01fa 1A60     		str	r2, [r3]
 1585 01fc C0E7     		b	.L90
 1586              	.L101:
2578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1587              		.loc 1 2578 5 view .LVU496
 1588 01fe 636D     		ldr	r3, [r4, #84]
 1589 0200 43F48023 		orr	r3, r3, #262144
 1590 0204 6365     		str	r3, [r4, #84]
2584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1591              		.loc 1 2584 5 view .LVU497
 1592 0206 2046     		mov	r0, r4
 1593 0208 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1594              	.LVL102:
2588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1595              		.loc 1 2588 5 view .LVU498
 1596 020c 2368     		ldr	r3, [r4]
 1597 020e 4FF40072 		mov	r2, #512
 1598 0212 1A60     		str	r2, [r3]
 1599 0214 BAE7     		b	.L91
 1600              	.LVL103:
 1601              	.L102:
2644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1602              		.loc 1 2644 5 view .LVU499
 1603 0216 636D     		ldr	r3, [r4, #84]
 1604 0218 43F48043 		orr	r3, r3, #16384
 1605 021c 6365     		str	r3, [r4, #84]
2647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1606              		.loc 1 2647 5 view .LVU500
 1607 021e A36D     		ldr	r3, [r4, #88]
 1608 0220 43F00803 		orr	r3, r3, #8
 1609 0224 A365     		str	r3, [r4, #88]
2650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1610              		.loc 1 2650 5 view .LVU501
 1611 0226 2368     		ldr	r3, [r4]
 1612 0228 4FF48062 		mov	r2, #1024
 1613 022c 1A60     		str	r2, [r3]
2656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1614              		.loc 1 2656 5 view .LVU502
 1615 022e 2046     		mov	r0, r4
 1616 0230 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1617              	.LVL104:
2661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1618              		.loc 1 2661 1 is_stmt 0 view .LVU503
 1619 0234 CBE7     		b	.L69
 1620              		.cfi_endproc
 1621              	.LFE1117:
 1623              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1624              		.align	1
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 228


 1625              		.global	ADC_DMAConvCplt
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1629              		.fpu fpv4-sp-d16
 1631              	ADC_DMAConvCplt:
 1632              	.LVL105:
 1633              	.LFB1129:
3833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1634              		.loc 1 3833 1 is_stmt 1 view -0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 0
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
3833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1638              		.loc 1 3833 1 is_stmt 0 view .LVU505
 1639 0000 08B5     		push	{r3, lr}
 1640              	.LCFI8:
 1641              		.cfi_def_cfa_offset 8
 1642              		.cfi_offset 3, -8
 1643              		.cfi_offset 14, -4
 1644 0002 0346     		mov	r3, r0
3835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1645              		.loc 1 3835 3 is_stmt 1 view .LVU506
3835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1646              		.loc 1 3835 22 is_stmt 0 view .LVU507
 1647 0004 806A     		ldr	r0, [r0, #40]
 1648              	.LVL106:
3838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1649              		.loc 1 3838 3 is_stmt 1 view .LVU508
3838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1650              		.loc 1 3838 12 is_stmt 0 view .LVU509
 1651 0006 426D     		ldr	r2, [r0, #84]
3838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1652              		.loc 1 3838 6 view .LVU510
 1653 0008 12F0500F 		tst	r2, #80
 1654 000c 30D1     		bne	.L104
3841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1655              		.loc 1 3841 5 is_stmt 1 view .LVU511
 1656 000e 436D     		ldr	r3, [r0, #84]
 1657              	.LVL107:
3841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1658              		.loc 1 3841 5 is_stmt 0 view .LVU512
 1659 0010 43F40073 		orr	r3, r3, #512
 1660 0014 4365     		str	r3, [r0, #84]
3882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1661              		.loc 1 3882 5 is_stmt 1 view .LVU513
3882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1662              		.loc 1 3882 14 is_stmt 0 view .LVU514
 1663 0016 0368     		ldr	r3, [r0]
3882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1664              		.loc 1 3882 24 view .LVU515
 1665 0018 1A68     		ldr	r2, [r3]
3882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1666              		.loc 1 3882 8 view .LVU516
 1667 001a 12F0080F 		tst	r2, #8
 1668 001e 14D0     		beq	.L105
3885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 229


 1669              		.loc 1 3885 7 is_stmt 1 view .LVU517
 1670              	.LVL108:
 1671              	.LBB366:
 1672              	.LBI366:
3481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1673              		.loc 2 3481 26 view .LVU518
 1674              	.LBB367:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1675              		.loc 2 3486 3 view .LVU519
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1676              		.loc 2 3486 12 is_stmt 0 view .LVU520
 1677 0020 DA68     		ldr	r2, [r3, #12]
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1678              		.loc 2 3486 103 view .LVU521
 1679 0022 12F4406F 		tst	r2, #3072
 1680 0026 20D1     		bne	.L106
 1681              	.LVL109:
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 1682              		.loc 2 3486 103 view .LVU522
 1683              	.LBE367:
 1684              	.LBE366:
3888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1685              		.loc 1 3888 9 is_stmt 1 view .LVU523
3888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1686              		.loc 1 3888 13 is_stmt 0 view .LVU524
 1687 0028 DB68     		ldr	r3, [r3, #12]
3888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1688              		.loc 1 3888 12 view .LVU525
 1689 002a 13F4005F 		tst	r3, #8192
 1690 002e 1CD1     		bne	.L106
3891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1691              		.loc 1 3891 11 is_stmt 1 view .LVU526
 1692 0030 436D     		ldr	r3, [r0, #84]
 1693 0032 23F48073 		bic	r3, r3, #256
 1694 0036 4365     		str	r3, [r0, #84]
3892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1695              		.loc 1 3892 11 view .LVU527
3892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1696              		.loc 1 3892 20 is_stmt 0 view .LVU528
 1697 0038 436D     		ldr	r3, [r0, #84]
3892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1698              		.loc 1 3892 14 view .LVU529
 1699 003a 13F4805F 		tst	r3, #4096
 1700 003e 14D1     		bne	.L106
3894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 1701              		.loc 1 3894 13 is_stmt 1 view .LVU530
 1702 0040 436D     		ldr	r3, [r0, #84]
 1703 0042 43F00103 		orr	r3, r3, #1
 1704 0046 4365     		str	r3, [r0, #84]
 1705 0048 0FE0     		b	.L106
 1706              	.L105:
3903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1707              		.loc 1 3903 7 view .LVU531
3903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1708              		.loc 1 3903 11 is_stmt 0 view .LVU532
 1709 004a DB68     		ldr	r3, [r3, #12]
3903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 230


 1710              		.loc 1 3903 10 view .LVU533
 1711 004c 13F0020F 		tst	r3, #2
 1712 0050 0BD1     		bne	.L106
3906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1713              		.loc 1 3906 9 is_stmt 1 view .LVU534
 1714 0052 436D     		ldr	r3, [r0, #84]
 1715 0054 23F48073 		bic	r3, r3, #256
 1716 0058 4365     		str	r3, [r0, #84]
3907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1717              		.loc 1 3907 9 view .LVU535
3907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1718              		.loc 1 3907 18 is_stmt 0 view .LVU536
 1719 005a 436D     		ldr	r3, [r0, #84]
3907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1720              		.loc 1 3907 12 view .LVU537
 1721 005c 13F4805F 		tst	r3, #4096
 1722 0060 03D1     		bne	.L106
3909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 1723              		.loc 1 3909 11 is_stmt 1 view .LVU538
 1724 0062 436D     		ldr	r3, [r0, #84]
 1725 0064 43F00103 		orr	r3, r3, #1
 1726 0068 4365     		str	r3, [r0, #84]
 1727              	.L106:
3919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1728              		.loc 1 3919 5 view .LVU539
 1729 006a FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1730              	.LVL110:
 1731              	.L103:
3939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1732              		.loc 1 3939 1 is_stmt 0 view .LVU540
 1733 006e 08BD     		pop	{r3, pc}
 1734              	.LVL111:
 1735              	.L104:
3924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1736              		.loc 1 3924 5 is_stmt 1 view .LVU541
3924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1737              		.loc 1 3924 14 is_stmt 0 view .LVU542
 1738 0070 426D     		ldr	r2, [r0, #84]
3924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1739              		.loc 1 3924 8 view .LVU543
 1740 0072 12F0100F 		tst	r2, #16
 1741 0076 04D1     		bne	.L110
3936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1742              		.loc 1 3936 7 is_stmt 1 view .LVU544
3936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1743              		.loc 1 3936 11 is_stmt 0 view .LVU545
 1744 0078 C26C     		ldr	r2, [r0, #76]
3936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1745              		.loc 1 3936 23 view .LVU546
 1746 007a 526B     		ldr	r2, [r2, #52]
3936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1747              		.loc 1 3936 7 view .LVU547
 1748 007c 1846     		mov	r0, r3
 1749              	.LVL112:
3936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1750              		.loc 1 3936 7 view .LVU548
 1751 007e 9047     		blx	r2
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 231


 1752              	.LVL113:
3939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1753              		.loc 1 3939 1 view .LVU549
 1754 0080 F5E7     		b	.L103
 1755              	.LVL114:
 1756              	.L110:
3930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1757              		.loc 1 3930 7 is_stmt 1 view .LVU550
 1758 0082 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1759              	.LVL115:
3930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1760              		.loc 1 3930 7 is_stmt 0 view .LVU551
 1761 0086 F2E7     		b	.L103
 1762              		.cfi_endproc
 1763              	.LFE1129:
 1765              		.section	.text.ADC_DMAError,"ax",%progbits
 1766              		.align	1
 1767              		.global	ADC_DMAError
 1768              		.syntax unified
 1769              		.thumb
 1770              		.thumb_func
 1771              		.fpu fpv4-sp-d16
 1773              	ADC_DMAError:
 1774              	.LVL116:
 1775              	.LFB1131:
3958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  DMA error callback.
3961:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
3963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3964:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 1776              		.loc 1 3965 1 is_stmt 1 view -0
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 0
 1779              		@ frame_needed = 0, uses_anonymous_args = 0
 1780              		.loc 1 3965 1 is_stmt 0 view .LVU553
 1781 0000 08B5     		push	{r3, lr}
 1782              	.LCFI9:
 1783              		.cfi_def_cfa_offset 8
 1784              		.cfi_offset 3, -8
 1785              		.cfi_offset 14, -4
3966:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3967:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1786              		.loc 1 3967 3 is_stmt 1 view .LVU554
 1787              		.loc 1 3967 22 is_stmt 0 view .LVU555
 1788 0002 806A     		ldr	r0, [r0, #40]
 1789              	.LVL117:
3968:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3969:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC state */
3970:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1790              		.loc 1 3970 3 is_stmt 1 view .LVU556
 1791 0004 436D     		ldr	r3, [r0, #84]
 1792 0006 43F04003 		orr	r3, r3, #64
 1793 000a 4365     		str	r3, [r0, #84]
3971:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 232


3972:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC error code to DMA error */
3973:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1794              		.loc 1 3973 3 view .LVU557
 1795 000c 836D     		ldr	r3, [r0, #88]
 1796 000e 43F00403 		orr	r3, r3, #4
 1797 0012 8365     		str	r3, [r0, #88]
3974:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Error callback */
3976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3979:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1798              		.loc 1 3979 3 view .LVU558
 1799 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1800              	.LVL118:
3980:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1801              		.loc 1 3981 1 is_stmt 0 view .LVU559
 1802 0018 08BD     		pop	{r3, pc}
 1803              		.cfi_endproc
 1804              	.LFE1131:
 1806              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1807              		.align	1
 1808              		.global	HAL_ADC_ConfigChannel
 1809              		.syntax unified
 1810              		.thumb
 1811              		.thumb_func
 1812              		.fpu fpv4-sp-d16
 1814              	HAL_ADC_ConfigChannel:
 1815              	.LVL119:
 1816              	.LFB1122:
2767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 1817              		.loc 1 2767 1 is_stmt 1 view -0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 8
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821              		@ link register save eliminated.
2767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 1822              		.loc 1 2767 1 is_stmt 0 view .LVU561
 1823 0000 F0B4     		push	{r4, r5, r6, r7}
 1824              	.LCFI10:
 1825              		.cfi_def_cfa_offset 16
 1826              		.cfi_offset 4, -16
 1827              		.cfi_offset 5, -12
 1828              		.cfi_offset 6, -8
 1829              		.cfi_offset 7, -4
 1830 0002 82B0     		sub	sp, sp, #8
 1831              	.LCFI11:
 1832              		.cfi_def_cfa_offset 24
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 1833              		.loc 1 2944 3 is_stmt 1 view .LVU562
 1834              	.LVL120:
2945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1835              		.loc 1 2945 3 view .LVU563
2946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 1836              		.loc 1 2946 3 view .LVU564
2947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 233


 1837              		.loc 1 2947 3 view .LVU565
2947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
 1838              		.loc 1 2947 17 is_stmt 0 view .LVU566
 1839 0004 0022     		movs	r2, #0
 1840 0006 0192     		str	r2, [sp, #4]
2949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 1841              		.loc 1 2949 3 is_stmt 1 view .LVU567
2950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 1842              		.loc 1 2950 3 view .LVU568
2954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 1843              		.loc 1 2954 3 view .LVU569
2955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 1844              		.loc 1 2955 3 view .LVU570
2956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 1845              		.loc 1 2956 3 view .LVU571
2957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 1846              		.loc 1 2957 3 view .LVU572
2958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 1847              		.loc 1 2958 3 view .LVU573
2959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1848              		.loc 1 2959 3 view .LVU574
2963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1849              		.loc 1 2963 3 view .LVU575
2966:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1850              		.loc 1 2966 3 view .LVU576
2972:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1851              		.loc 1 2972 5 view .LVU577
2976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1852              		.loc 1 2976 3 view .LVU578
2976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1853              		.loc 1 2976 3 view .LVU579
 1854 0008 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 1855 000c 012A     		cmp	r2, #1
 1856 000e 00F02582 		beq	.L166
 1857 0012 0346     		mov	r3, r0
2976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1858              		.loc 1 2976 3 discriminator 2 view .LVU580
 1859 0014 0122     		movs	r2, #1
 1860 0016 80F85020 		strb	r2, [r0, #80]
2976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1861              		.loc 1 2976 3 discriminator 2 view .LVU581
2983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1862              		.loc 1 2983 3 discriminator 2 view .LVU582
2983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1863              		.loc 1 2983 7 is_stmt 0 discriminator 2 view .LVU583
 1864 001a 0668     		ldr	r6, [r0]
 1865              	.LVL121:
 1866              	.LBB368:
 1867              	.LBI368:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1868              		.loc 2 6851 26 is_stmt 1 discriminator 2 view .LVU584
 1869              	.LBB369:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1870              		.loc 2 6853 3 discriminator 2 view .LVU585
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1871              		.loc 2 6853 12 is_stmt 0 discriminator 2 view .LVU586
 1872 001c B068     		ldr	r0, [r6, #8]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 234


 1873              	.LVL122:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1874              		.loc 2 6853 74 discriminator 2 view .LVU587
 1875 001e 10F0040F 		tst	r0, #4
 1876 0022 0AD0     		beq	.L115
 1877              	.LVL123:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1878              		.loc 2 6853 74 discriminator 2 view .LVU588
 1879              	.LBE369:
 1880              	.LBE368:
3135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1881              		.loc 1 3135 5 is_stmt 1 view .LVU589
 1882 0024 5A6D     		ldr	r2, [r3, #84]
 1883 0026 42F02002 		orr	r2, r2, #32
 1884 002a 5A65     		str	r2, [r3, #84]
3137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1885              		.loc 1 3137 5 view .LVU590
 1886              	.LVL124:
3137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1887              		.loc 1 3137 20 is_stmt 0 view .LVU591
 1888 002c 0120     		movs	r0, #1
 1889              	.LVL125:
 1890              	.L116:
3141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1891              		.loc 1 3141 3 is_stmt 1 view .LVU592
3141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1892              		.loc 1 3141 3 view .LVU593
 1893 002e 0022     		movs	r2, #0
 1894 0030 83F85020 		strb	r2, [r3, #80]
3141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1895              		.loc 1 3141 3 view .LVU594
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1896              		.loc 1 3145 3 view .LVU595
 1897              	.LVL126:
 1898              	.L114:
3146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1899              		.loc 1 3146 1 is_stmt 0 view .LVU596
 1900 0034 02B0     		add	sp, sp, #8
 1901              	.LCFI12:
 1902              		.cfi_remember_state
 1903              		.cfi_def_cfa_offset 16
 1904              		@ sp needed
 1905 0036 F0BC     		pop	{r4, r5, r6, r7}
 1906              	.LCFI13:
 1907              		.cfi_restore 7
 1908              		.cfi_restore 6
 1909              		.cfi_restore 5
 1910              		.cfi_restore 4
 1911              		.cfi_def_cfa_offset 0
 1912 0038 7047     		bx	lr
 1913              	.LVL127:
 1914              	.L115:
 1915              	.LCFI14:
 1916              		.cfi_restore_state
2986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1917              		.loc 1 2986 5 is_stmt 1 view .LVU597
 1918 003a 4D68     		ldr	r5, [r1, #4]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 235


 1919 003c 0C68     		ldr	r4, [r1]
 1920              	.LVL128:
 1921              	.LBB370:
 1922              	.LBI370:
3956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1923              		.loc 2 3956 22 view .LVU598
 1924              	.LBB371:
3971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 1925              		.loc 2 3971 3 view .LVU599
3971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 1926              		.loc 2 3971 25 is_stmt 0 view .LVU600
 1927 003e 3036     		adds	r6, r6, #48
 1928              	.LVL129:
3971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 1929              		.loc 2 3971 25 view .LVU601
 1930 0040 2A0A     		lsrs	r2, r5, #8
 1931 0042 9200     		lsls	r2, r2, #2
 1932 0044 02F00C02 		and	r2, r2, #12
 1933              	.LVL130:
3973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1934              		.loc 2 3973 3 is_stmt 1 view .LVU602
 1935 0048 B058     		ldr	r0, [r6, r2]
 1936 004a 05F01F05 		and	r5, r5, #31
 1937              	.LVL131:
3973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1938              		.loc 2 3973 3 is_stmt 0 view .LVU603
 1939 004e 1F27     		movs	r7, #31
 1940 0050 AF40     		lsls	r7, r7, r5
 1941 0052 20EA0700 		bic	r0, r0, r7
 1942 0056 C4F38464 		ubfx	r4, r4, #26, #5
 1943              	.LVL132:
3973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1944              		.loc 2 3973 3 view .LVU604
 1945 005a AC40     		lsls	r4, r4, r5
 1946 005c 2043     		orrs	r0, r0, r4
 1947 005e B050     		str	r0, [r6, r2]
 1948              	.LVL133:
3973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1949              		.loc 2 3973 3 view .LVU605
 1950              	.LBE371:
 1951              	.LBE370:
2996:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 1952              		.loc 1 2996 5 is_stmt 1 view .LVU606
2996:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 1953              		.loc 1 2996 46 is_stmt 0 view .LVU607
 1954 0060 1C68     		ldr	r4, [r3]
 1955              	.LVL134:
 1956              	.LBB372:
 1957              	.LBI372:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1958              		.loc 2 6851 26 is_stmt 1 view .LVU608
 1959              	.LBB373:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1960              		.loc 2 6853 3 view .LVU609
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1961              		.loc 2 6853 12 is_stmt 0 view .LVU610
 1962 0062 A268     		ldr	r2, [r4, #8]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 236


6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1963              		.loc 2 6853 74 view .LVU611
 1964 0064 12F00402 		ands	r2, r2, #4
 1965 0068 00D0     		beq	.L117
 1966 006a 0122     		movs	r2, #1
 1967              	.L117:
 1968              	.LVL135:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1969              		.loc 2 6853 74 view .LVU612
 1970              	.LBE373:
 1971              	.LBE372:
2997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 1972              		.loc 1 2997 5 is_stmt 1 view .LVU613
 1973              	.LBB374:
 1974              	.LBI374:
7006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1975              		.loc 2 7006 26 view .LVU614
 1976              	.LBB375:
 1977              		.loc 2 7008 3 view .LVU615
 1978              		.loc 2 7008 12 is_stmt 0 view .LVU616
 1979 006c A068     		ldr	r0, [r4, #8]
 1980              		.loc 2 7008 76 view .LVU617
 1981 006e 10F00800 		ands	r0, r0, #8
 1982 0072 00D0     		beq	.L118
 1983 0074 0120     		movs	r0, #1
 1984              	.L118:
 1985              	.LVL136:
 1986              		.loc 2 7008 76 view .LVU618
 1987              	.LBE375:
 1988              	.LBE374:
2998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 1989              		.loc 1 2998 5 is_stmt 1 view .LVU619
2998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 1990              		.loc 1 2998 8 is_stmt 0 view .LVU620
 1991 0076 52BB     		cbnz	r2, .L119
2999:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 1992              		.loc 1 2999 9 view .LVU621
 1993 0078 48BB     		cbnz	r0, .L119
3004:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1994              		.loc 1 3004 7 is_stmt 1 view .LVU622
 1995 007a 0E68     		ldr	r6, [r1]
 1996 007c 8D68     		ldr	r5, [r1, #8]
 1997              	.LVL137:
 1998              	.LBB376:
 1999              	.LBI376:
5445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2000              		.loc 2 5445 22 view .LVU623
 2001              	.LBB377:
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2002              		.loc 2 5459 3 view .LVU624
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2003              		.loc 2 5459 25 is_stmt 0 view .LVU625
 2004 007e 1434     		adds	r4, r4, #20
 2005              	.LVL138:
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2006              		.loc 2 5459 25 view .LVU626
 2007 0080 720E     		lsrs	r2, r6, #25
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 237


 2008              	.LVL139:
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2009              		.loc 2 5459 25 view .LVU627
 2010 0082 9200     		lsls	r2, r2, #2
 2011 0084 02F00402 		and	r2, r2, #4
 2012              	.LVL140:
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2013              		.loc 2 5461 3 is_stmt 1 view .LVU628
 2014 0088 A058     		ldr	r0, [r4, r2]
 2015              	.LVL141:
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2016              		.loc 2 5461 3 is_stmt 0 view .LVU629
 2017 008a C6F30456 		ubfx	r6, r6, #20, #5
 2018              	.LVL142:
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2019              		.loc 2 5461 3 view .LVU630
 2020 008e 0727     		movs	r7, #7
 2021 0090 B740     		lsls	r7, r7, r6
 2022 0092 20EA0700 		bic	r0, r0, r7
 2023 0096 B540     		lsls	r5, r5, r6
 2024              	.LVL143:
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2025              		.loc 2 5461 3 view .LVU631
 2026 0098 2843     		orrs	r0, r0, r5
 2027 009a A050     		str	r0, [r4, r2]
 2028              	.LVL144:
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2029              		.loc 2 5461 3 view .LVU632
 2030              	.LBE377:
 2031              	.LBE376:
3010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2032              		.loc 1 3010 7 is_stmt 1 view .LVU633
3010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2033              		.loc 1 3010 26 is_stmt 0 view .LVU634
 2034 009c 4C69     		ldr	r4, [r1, #20]
 2035 009e 1868     		ldr	r0, [r3]
 2036 00a0 C268     		ldr	r2, [r0, #12]
 2037 00a2 C2F3C102 		ubfx	r2, r2, #3, #2
 2038 00a6 5200     		lsls	r2, r2, #1
3010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2039              		.loc 1 3010 24 view .LVU635
 2040 00a8 04FA02F2 		lsl	r2, r4, r2
 2041              	.LVL145:
3012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2042              		.loc 1 3012 7 is_stmt 1 view .LVU636
3012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2043              		.loc 1 3012 18 is_stmt 0 view .LVU637
 2044 00ac 0D69     		ldr	r5, [r1, #16]
3012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2045              		.loc 1 3012 10 view .LVU638
 2046 00ae 042D     		cmp	r5, #4
 2047 00b0 47D0     		beq	.L120
3015:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2048              		.loc 1 3015 9 is_stmt 1 view .LVU639
 2049 00b2 0E68     		ldr	r6, [r1]
 2050              	.LVL146:
 2051              	.LBB378:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 238


 2052              	.LBI378:
3188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2053              		.loc 2 3188 22 view .LVU640
 2054              	.LBB379:
3190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2055              		.loc 2 3190 3 view .LVU641
3190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2056              		.loc 2 3190 25 is_stmt 0 view .LVU642
 2057 00b4 6030     		adds	r0, r0, #96
 2058              	.LVL147:
3192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2059              		.loc 2 3192 3 is_stmt 1 view .LVU643
 2060 00b6 50F82570 		ldr	r7, [r0, r5, lsl #2]
 2061 00ba B24C     		ldr	r4, .L196
 2062 00bc 3C40     		ands	r4, r4, r7
 2063 00be 06F0F846 		and	r6, r6, #2080374784
 2064              	.LVL148:
3192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2065              		.loc 2 3192 3 is_stmt 0 view .LVU644
 2066 00c2 3243     		orrs	r2, r2, r6
 2067              	.LVL149:
3192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2068              		.loc 2 3192 3 view .LVU645
 2069 00c4 1443     		orrs	r4, r4, r2
 2070 00c6 44F00044 		orr	r4, r4, #-2147483648
 2071 00ca 40F82540 		str	r4, [r0, r5, lsl #2]
 2072              	.LVL150:
 2073              	.L119:
3192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2074              		.loc 2 3192 3 view .LVU646
 2075              	.LBE379:
 2076              	.LBE378:
3045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 2077              		.loc 1 3045 5 is_stmt 1 view .LVU647
3045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 2078              		.loc 1 3045 9 is_stmt 0 view .LVU648
 2079 00ce 1868     		ldr	r0, [r3]
 2080              	.LVL151:
 2081              	.LBB380:
 2082              	.LBI380:
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2083              		.loc 2 6697 26 is_stmt 1 view .LVU649
 2084              	.LBB381:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2085              		.loc 2 6699 3 view .LVU650
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2086              		.loc 2 6699 12 is_stmt 0 view .LVU651
 2087 00d0 8268     		ldr	r2, [r0, #8]
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2088              		.loc 2 6699 68 view .LVU652
 2089 00d2 12F0010F 		tst	r2, #1
 2090 00d6 40F0BB81 		bne	.L171
 2091              	.LVL152:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2092              		.loc 2 6699 68 view .LVU653
 2093              	.LBE381:
 2094              	.LBE380:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 239


3048:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2095              		.loc 1 3048 7 is_stmt 1 view .LVU654
 2096 00da 0A68     		ldr	r2, [r1]
 2097 00dc CD68     		ldr	r5, [r1, #12]
 2098              	.LVL153:
 2099              	.LBB382:
 2100              	.LBI382:
5686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2101              		.loc 2 5686 22 view .LVU655
 2102              	.LBB383:
5691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2103              		.loc 2 5691 3 view .LVU656
 2104 00de D0F8B040 		ldr	r4, [r0, #176]
 2105 00e2 C2F31206 		ubfx	r6, r2, #0, #19
 2106 00e6 24EA0604 		bic	r4, r4, r6
 2107 00ea 05F01806 		and	r6, r5, #24
 2108 00ee A64D     		ldr	r5, .L196+4
 2109              	.LVL154:
5691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2110              		.loc 2 5691 3 is_stmt 0 view .LVU657
 2111 00f0 F540     		lsrs	r5, r5, r6
 2112 00f2 2A40     		ands	r2, r2, r5
 2113              	.LVL155:
5691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2114              		.loc 2 5691 3 view .LVU658
 2115 00f4 C2F31202 		ubfx	r2, r2, #0, #19
 2116 00f8 2243     		orrs	r2, r2, r4
 2117 00fa C0F8B020 		str	r2, [r0, #176]
 2118              	.LVL156:
5691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2119              		.loc 2 5691 3 view .LVU659
 2120              	.LBE383:
 2121              	.LBE382:
3051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2122              		.loc 1 3051 7 is_stmt 1 view .LVU660
3051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2123              		.loc 1 3051 18 is_stmt 0 view .LVU661
 2124 00fe C868     		ldr	r0, [r1, #12]
3051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2125              		.loc 1 3051 10 view .LVU662
 2126 0100 A24A     		ldr	r2, .L196+8
 2127 0102 9042     		cmp	r0, r2
 2128 0104 00F08480 		beq	.L186
 2129              	.L136:
3066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2130              		.loc 1 3066 7 is_stmt 1 view .LVU663
3066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2131              		.loc 1 3066 10 is_stmt 0 view .LVU664
 2132 0108 0A68     		ldr	r2, [r1]
3066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2133              		.loc 1 3066 9 view .LVU665
 2134 010a A149     		ldr	r1, .L196+12
 2135              	.LVL157:
3066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2136              		.loc 1 3066 9 view .LVU666
 2137 010c 0A42     		tst	r2, r1
 2138 010e 00F0A181 		beq	.L179
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 240


3070:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2139              		.loc 1 3070 9 is_stmt 1 view .LVU667
 2140              	.LVL158:
 2141              	.LBB384:
 2142              	.LBI384:
2583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2143              		.loc 2 2583 26 view .LVU668
 2144              	.LBB385:
2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2145              		.loc 2 2585 3 view .LVU669
2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2146              		.loc 2 2585 21 is_stmt 0 view .LVU670
 2147 0112 A049     		ldr	r1, .L196+16
 2148 0114 8968     		ldr	r1, [r1, #8]
2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2149              		.loc 2 2585 10 view .LVU671
 2150 0116 01F0E074 		and	r4, r1, #29360128
 2151              	.LVL159:
2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2152              		.loc 2 2585 10 view .LVU672
 2153              	.LBE385:
 2154              	.LBE384:
3074:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2155              		.loc 1 3074 9 is_stmt 1 view .LVU673
 2156              	.LBB386:
 2157              	.LBI386:
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2158              		.loc 2 6697 26 view .LVU674
 2159              	.LBB387:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2160              		.loc 2 6699 3 view .LVU675
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2161              		.loc 2 6699 12 is_stmt 0 view .LVU676
 2162 011a 9F48     		ldr	r0, .L196+20
 2163 011c 8068     		ldr	r0, [r0, #8]
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2164              		.loc 2 6699 68 view .LVU677
 2165 011e 10F0010F 		tst	r0, #1
 2166 0122 40F04181 		bne	.L160
 2167              	.LVL160:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2168              		.loc 2 6699 68 view .LVU678
 2169              	.LBE387:
 2170              	.LBE386:
3078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2171              		.loc 1 3078 11 is_stmt 1 view .LVU679
3078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2172              		.loc 1 3078 14 is_stmt 0 view .LVU680
 2173 0126 9D48     		ldr	r0, .L196+24
 2174 0128 8242     		cmp	r2, r0
 2175 012a 00F04381 		beq	.L187
 2176              	.L162:
3096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2177              		.loc 1 3096 16 is_stmt 1 view .LVU681
3096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2178              		.loc 1 3096 19 is_stmt 0 view .LVU682
 2179 012e 9C48     		ldr	r0, .L196+28
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 241


 2180 0130 8242     		cmp	r2, r0
 2181 0132 00F06681 		beq	.L188
 2182              	.L165:
3103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2183              		.loc 1 3103 16 is_stmt 1 view .LVU683
3103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2184              		.loc 1 3103 19 is_stmt 0 view .LVU684
 2185 0136 9B48     		ldr	r0, .L196+32
 2186 0138 8242     		cmp	r2, r0
 2187 013a 00F07681 		beq	.L189
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2188              		.loc 1 2944 21 view .LVU685
 2189 013e 0020     		movs	r0, #0
 2190 0140 75E7     		b	.L116
 2191              	.LVL161:
 2192              	.L120:
3022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2193              		.loc 1 3022 9 is_stmt 1 view .LVU686
 2194              	.LBB388:
 2195              	.LBI388:
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2196              		.loc 2 3255 26 view .LVU687
 2197              	.LBB389:
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2198              		.loc 2 3257 3 view .LVU688
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2199              		.loc 2 3259 3 view .LVU689
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2200              		.loc 2 3259 10 is_stmt 0 view .LVU690
 2201 0142 026E     		ldr	r2, [r0, #96]
 2202              	.LVL162:
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2203              		.loc 2 3259 10 view .LVU691
 2204              	.LBE389:
 2205              	.LBE388:
 2206              	.LBB390:
 2207              	.LBI390:
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2208              		.loc 2 3255 26 is_stmt 1 view .LVU692
 2209              	.LBB391:
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2210              		.loc 2 3257 3 view .LVU693
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2211              		.loc 2 3259 3 view .LVU694
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2212              		.loc 2 3259 10 is_stmt 0 view .LVU695
 2213 0144 046E     		ldr	r4, [r0, #96]
 2214              	.LVL163:
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2215              		.loc 2 3259 10 view .LVU696
 2216              	.LBE391:
 2217              	.LBE390:
3022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2218              		.loc 1 3022 12 view .LVU697
 2219 0146 C4F38464 		ubfx	r4, r4, #26, #5
3022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2220              		.loc 1 3022 104 view .LVU698
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 242


 2221 014a 0A68     		ldr	r2, [r1]
 2222 014c C2F31205 		ubfx	r5, r2, #0, #19
 2223 0150 7DBB     		cbnz	r5, .L121
3022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2224              		.loc 1 3022 104 discriminator 5 view .LVU699
 2225 0152 C2F38462 		ubfx	r2, r2, #26, #5
 2226              	.L122:
3022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2227              		.loc 1 3022 11 discriminator 8 view .LVU700
 2228 0156 9442     		cmp	r4, r2
 2229 0158 33D0     		beq	.L190
 2230              	.L124:
3026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2231              		.loc 1 3026 9 is_stmt 1 view .LVU701
3026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2232              		.loc 1 3026 12 is_stmt 0 view .LVU702
 2233 015a 1C68     		ldr	r4, [r3]
 2234              	.LVL164:
 2235              	.LBB392:
 2236              	.LBI392:
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2237              		.loc 2 3255 26 is_stmt 1 view .LVU703
 2238              	.LBB393:
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2239              		.loc 2 3257 3 view .LVU704
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2240              		.loc 2 3259 3 view .LVU705
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2241              		.loc 2 3259 10 is_stmt 0 view .LVU706
 2242 015c 626E     		ldr	r2, [r4, #100]
 2243              	.LVL165:
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2244              		.loc 2 3259 10 view .LVU707
 2245              	.LBE393:
 2246              	.LBE392:
 2247              	.LBB394:
 2248              	.LBI394:
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2249              		.loc 2 3255 26 is_stmt 1 view .LVU708
 2250              	.LBB395:
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2251              		.loc 2 3257 3 view .LVU709
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2252              		.loc 2 3259 3 view .LVU710
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2253              		.loc 2 3259 10 is_stmt 0 view .LVU711
 2254 015e 606E     		ldr	r0, [r4, #100]
 2255              	.LVL166:
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2256              		.loc 2 3259 10 view .LVU712
 2257              	.LBE395:
 2258              	.LBE394:
3026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2259              		.loc 1 3026 12 view .LVU713
 2260 0160 C0F38460 		ubfx	r0, r0, #26, #5
3026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2261              		.loc 1 3026 104 view .LVU714
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 243


 2262 0164 0A68     		ldr	r2, [r1]
 2263 0166 C2F31205 		ubfx	r5, r2, #0, #19
 2264 016a 7DBB     		cbnz	r5, .L125
3026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2265              		.loc 1 3026 104 discriminator 5 view .LVU715
 2266 016c C2F38462 		ubfx	r2, r2, #26, #5
 2267              	.L126:
3026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2268              		.loc 1 3026 11 discriminator 8 view .LVU716
 2269 0170 9042     		cmp	r0, r2
 2270 0172 33D0     		beq	.L191
 2271              	.L128:
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2272              		.loc 1 3030 9 is_stmt 1 view .LVU717
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2273              		.loc 1 3030 12 is_stmt 0 view .LVU718
 2274 0174 1C68     		ldr	r4, [r3]
 2275              	.LVL167:
 2276              	.LBB396:
 2277              	.LBI396:
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2278              		.loc 2 3255 26 is_stmt 1 view .LVU719
 2279              	.LBB397:
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2280              		.loc 2 3257 3 view .LVU720
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2281              		.loc 2 3259 3 view .LVU721
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2282              		.loc 2 3259 10 is_stmt 0 view .LVU722
 2283 0176 A26E     		ldr	r2, [r4, #104]
 2284              	.LVL168:
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2285              		.loc 2 3259 10 view .LVU723
 2286              	.LBE397:
 2287              	.LBE396:
 2288              	.LBB398:
 2289              	.LBI398:
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2290              		.loc 2 3255 26 is_stmt 1 view .LVU724
 2291              	.LBB399:
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2292              		.loc 2 3257 3 view .LVU725
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2293              		.loc 2 3259 3 view .LVU726
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2294              		.loc 2 3259 10 is_stmt 0 view .LVU727
 2295 0178 A06E     		ldr	r0, [r4, #104]
 2296              	.LVL169:
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2297              		.loc 2 3259 10 view .LVU728
 2298              	.LBE399:
 2299              	.LBE398:
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2300              		.loc 1 3030 12 view .LVU729
 2301 017a C0F38460 		ubfx	r0, r0, #26, #5
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2302              		.loc 1 3030 104 view .LVU730
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 244


 2303 017e 0A68     		ldr	r2, [r1]
 2304 0180 C2F31205 		ubfx	r5, r2, #0, #19
 2305 0184 7DBB     		cbnz	r5, .L129
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2306              		.loc 1 3030 104 discriminator 5 view .LVU731
 2307 0186 C2F38462 		ubfx	r2, r2, #26, #5
 2308              	.L130:
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2309              		.loc 1 3030 11 discriminator 8 view .LVU732
 2310 018a 9042     		cmp	r0, r2
 2311 018c 33D0     		beq	.L192
 2312              	.L132:
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2313              		.loc 1 3034 9 is_stmt 1 view .LVU733
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2314              		.loc 1 3034 12 is_stmt 0 view .LVU734
 2315 018e 1C68     		ldr	r4, [r3]
 2316              	.LVL170:
 2317              	.LBB400:
 2318              	.LBI400:
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2319              		.loc 2 3255 26 is_stmt 1 view .LVU735
 2320              	.LBB401:
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2321              		.loc 2 3257 3 view .LVU736
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2322              		.loc 2 3259 3 view .LVU737
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2323              		.loc 2 3259 10 is_stmt 0 view .LVU738
 2324 0190 E26E     		ldr	r2, [r4, #108]
 2325              	.LVL171:
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2326              		.loc 2 3259 10 view .LVU739
 2327              	.LBE401:
 2328              	.LBE400:
 2329              	.LBB402:
 2330              	.LBI402:
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2331              		.loc 2 3255 26 is_stmt 1 view .LVU740
 2332              	.LBB403:
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2333              		.loc 2 3257 3 view .LVU741
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2334              		.loc 2 3259 3 view .LVU742
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2335              		.loc 2 3259 10 is_stmt 0 view .LVU743
 2336 0192 E06E     		ldr	r0, [r4, #108]
 2337              	.LVL172:
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2338              		.loc 2 3259 10 view .LVU744
 2339              	.LBE403:
 2340              	.LBE402:
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2341              		.loc 1 3034 12 view .LVU745
 2342 0194 C0F38460 		ubfx	r0, r0, #26, #5
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2343              		.loc 1 3034 104 view .LVU746
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 245


 2344 0198 0A68     		ldr	r2, [r1]
 2345 019a C2F31205 		ubfx	r5, r2, #0, #19
 2346 019e 7DBB     		cbnz	r5, .L133
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2347              		.loc 1 3034 104 discriminator 5 view .LVU747
 2348 01a0 C2F38462 		ubfx	r2, r2, #26, #5
 2349              	.L134:
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2350              		.loc 1 3034 11 discriminator 8 view .LVU748
 2351 01a4 9042     		cmp	r0, r2
 2352 01a6 92D1     		bne	.L119
3036:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 2353              		.loc 1 3036 11 is_stmt 1 view .LVU749
 2354              	.LVL173:
 2355              	.LBB404:
 2356              	.LBI404:
3314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2357              		.loc 2 3314 22 view .LVU750
 2358              	.LBB405:
3316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2359              		.loc 2 3316 3 view .LVU751
3318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2360              		.loc 2 3318 3 view .LVU752
 2361 01a8 E26E     		ldr	r2, [r4, #108]
 2362 01aa 22F00042 		bic	r2, r2, #-2147483648
 2363 01ae E266     		str	r2, [r4, #108]
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2364              		.loc 2 3321 1 is_stmt 0 view .LVU753
 2365 01b0 8DE7     		b	.L119
 2366              	.LVL174:
 2367              	.L121:
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2368              		.loc 2 3321 1 view .LVU754
 2369              	.LBE405:
 2370              	.LBE404:
 2371              	.LBB406:
 2372              	.LBI406:
 2373              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 246


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 247


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 248


 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 249


 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 250


 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 251


 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 252


 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 253


 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 254


 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 255


 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 256


 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 257


 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 258


 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 259


 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 260


 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 261


 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 262


 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 263


 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 264


1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2374              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU755
 2375              	.LBB407:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2376              		.loc 3 1050 3 discriminator 6 view .LVU756
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2377              		.loc 3 1055 4 discriminator 6 view .LVU757
 2378              		.syntax unified
 2379              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2380 01b2 92FAA2F2 		rbit r2, r2
 2381              	@ 0 "" 2
 2382              	.LVL175:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2383              		.loc 3 1068 3 discriminator 6 view .LVU758
 2384              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU759
 2385              		.thumb
 2386              		.syntax unified
 2387              	.LBE407:
 2388              	.LBE406:
 2389              	.LBB408:
 2390              	.LBI408:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 2391              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU760
 2392              	.LBB409:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 265


1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 2393              		.loc 3 1089 3 discriminator 6 view .LVU761
 2394              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU762
 2395 01b6 12B1     		cbz	r2, .L167
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2396              		.loc 3 1093 3 is_stmt 1 view .LVU763
 2397              		.loc 3 1093 10 is_stmt 0 view .LVU764
 2398 01b8 B2FA82F2 		clz	r2, r2
 2399              	.LVL176:
 2400              		.loc 3 1093 10 view .LVU765
 2401 01bc CBE7     		b	.L122
 2402              	.LVL177:
 2403              	.L167:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2404              		.loc 3 1091 12 view .LVU766
 2405 01be 2022     		movs	r2, #32
 2406              	.LVL178:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2407              		.loc 3 1091 12 view .LVU767
 2408 01c0 C9E7     		b	.L122
 2409              	.L190:
 2410              	.LBE409:
 2411              	.LBE408:
3024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 2412              		.loc 1 3024 11 is_stmt 1 view .LVU768
 2413              	.LVL179:
 2414              	.LBB410:
 2415              	.LBI410:
3314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2416              		.loc 2 3314 22 view .LVU769
 2417              	.LBB411:
3316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2418              		.loc 2 3316 3 view .LVU770
3318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2419              		.loc 2 3318 3 view .LVU771
 2420 01c2 026E     		ldr	r2, [r0, #96]
 2421 01c4 22F00042 		bic	r2, r2, #-2147483648
 2422 01c8 0266     		str	r2, [r0, #96]
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2423              		.loc 2 3321 1 is_stmt 0 view .LVU772
 2424 01ca C6E7     		b	.L124
 2425              	.LVL180:
 2426              	.L125:
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2427              		.loc 2 3321 1 view .LVU773
 2428              	.LBE411:
 2429              	.LBE410:
 2430              	.LBB412:
 2431              	.LBI412:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 266


1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2432              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU774
 2433              	.LBB413:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2434              		.loc 3 1050 3 discriminator 6 view .LVU775
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2435              		.loc 3 1055 4 discriminator 6 view .LVU776
 2436              		.syntax unified
 2437              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2438 01cc 92FAA2F2 		rbit r2, r2
 2439              	@ 0 "" 2
 2440              	.LVL181:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2441              		.loc 3 1068 3 discriminator 6 view .LVU777
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2442              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU778
 2443              		.thumb
 2444              		.syntax unified
 2445              	.LBE413:
 2446              	.LBE412:
 2447              	.LBB414:
 2448              	.LBI414:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2449              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU779
 2450              	.LBB415:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2451              		.loc 3 1089 3 discriminator 6 view .LVU780
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2452              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU781
 2453 01d0 12B1     		cbz	r2, .L168
 2454              		.loc 3 1093 3 is_stmt 1 view .LVU782
 2455              		.loc 3 1093 10 is_stmt 0 view .LVU783
 2456 01d2 B2FA82F2 		clz	r2, r2
 2457              	.LVL182:
 2458              		.loc 3 1093 10 view .LVU784
 2459 01d6 CBE7     		b	.L126
 2460              	.LVL183:
 2461              	.L168:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2462              		.loc 3 1091 12 view .LVU785
 2463 01d8 2022     		movs	r2, #32
 2464              	.LVL184:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2465              		.loc 3 1091 12 view .LVU786
 2466 01da C9E7     		b	.L126
 2467              	.L191:
 2468              	.LBE415:
 2469              	.LBE414:
3028:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 2470              		.loc 1 3028 11 is_stmt 1 view .LVU787
 2471              	.LVL185:
 2472              	.LBB416:
 2473              	.LBI416:
3314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2474              		.loc 2 3314 22 view .LVU788
 2475              	.LBB417:
3316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 267


 2476              		.loc 2 3316 3 view .LVU789
3318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2477              		.loc 2 3318 3 view .LVU790
 2478 01dc 626E     		ldr	r2, [r4, #100]
 2479 01de 22F00042 		bic	r2, r2, #-2147483648
 2480 01e2 6266     		str	r2, [r4, #100]
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2481              		.loc 2 3321 1 is_stmt 0 view .LVU791
 2482 01e4 C6E7     		b	.L128
 2483              	.LVL186:
 2484              	.L129:
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2485              		.loc 2 3321 1 view .LVU792
 2486              	.LBE417:
 2487              	.LBE416:
 2488              	.LBB418:
 2489              	.LBI418:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2490              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU793
 2491              	.LBB419:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2492              		.loc 3 1050 3 discriminator 6 view .LVU794
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2493              		.loc 3 1055 4 discriminator 6 view .LVU795
 2494              		.syntax unified
 2495              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2496 01e6 92FAA2F2 		rbit r2, r2
 2497              	@ 0 "" 2
 2498              	.LVL187:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2499              		.loc 3 1068 3 discriminator 6 view .LVU796
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2500              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU797
 2501              		.thumb
 2502              		.syntax unified
 2503              	.LBE419:
 2504              	.LBE418:
 2505              	.LBB420:
 2506              	.LBI420:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2507              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU798
 2508              	.LBB421:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2509              		.loc 3 1089 3 discriminator 6 view .LVU799
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2510              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU800
 2511 01ea 12B1     		cbz	r2, .L169
 2512              		.loc 3 1093 3 is_stmt 1 view .LVU801
 2513              		.loc 3 1093 10 is_stmt 0 view .LVU802
 2514 01ec B2FA82F2 		clz	r2, r2
 2515              	.LVL188:
 2516              		.loc 3 1093 10 view .LVU803
 2517 01f0 CBE7     		b	.L130
 2518              	.LVL189:
 2519              	.L169:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2520              		.loc 3 1091 12 view .LVU804
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 268


 2521 01f2 2022     		movs	r2, #32
 2522              	.LVL190:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2523              		.loc 3 1091 12 view .LVU805
 2524 01f4 C9E7     		b	.L130
 2525              	.L192:
 2526              	.LBE421:
 2527              	.LBE420:
3032:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 2528              		.loc 1 3032 11 is_stmt 1 view .LVU806
 2529              	.LVL191:
 2530              	.LBB422:
 2531              	.LBI422:
3314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2532              		.loc 2 3314 22 view .LVU807
 2533              	.LBB423:
3316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2534              		.loc 2 3316 3 view .LVU808
3318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2535              		.loc 2 3318 3 view .LVU809
 2536 01f6 A26E     		ldr	r2, [r4, #104]
 2537 01f8 22F00042 		bic	r2, r2, #-2147483648
 2538 01fc A266     		str	r2, [r4, #104]
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2539              		.loc 2 3321 1 is_stmt 0 view .LVU810
 2540 01fe C6E7     		b	.L132
 2541              	.LVL192:
 2542              	.L133:
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2543              		.loc 2 3321 1 view .LVU811
 2544              	.LBE423:
 2545              	.LBE422:
 2546              	.LBB424:
 2547              	.LBI424:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2548              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU812
 2549              	.LBB425:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2550              		.loc 3 1050 3 discriminator 6 view .LVU813
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2551              		.loc 3 1055 4 discriminator 6 view .LVU814
 2552              		.syntax unified
 2553              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2554 0200 92FAA2F2 		rbit r2, r2
 2555              	@ 0 "" 2
 2556              	.LVL193:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2557              		.loc 3 1068 3 discriminator 6 view .LVU815
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2558              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU816
 2559              		.thumb
 2560              		.syntax unified
 2561              	.LBE425:
 2562              	.LBE424:
 2563              	.LBB426:
 2564              	.LBI426:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 269


 2565              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU817
 2566              	.LBB427:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2567              		.loc 3 1089 3 discriminator 6 view .LVU818
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2568              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU819
 2569 0204 12B1     		cbz	r2, .L170
 2570              		.loc 3 1093 3 is_stmt 1 view .LVU820
 2571              		.loc 3 1093 10 is_stmt 0 view .LVU821
 2572 0206 B2FA82F2 		clz	r2, r2
 2573              	.LVL194:
 2574              		.loc 3 1093 10 view .LVU822
 2575 020a CBE7     		b	.L134
 2576              	.LVL195:
 2577              	.L170:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2578              		.loc 3 1091 12 view .LVU823
 2579 020c 2022     		movs	r2, #32
 2580              	.LVL196:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2581              		.loc 3 1091 12 view .LVU824
 2582 020e C9E7     		b	.L134
 2583              	.L186:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2584              		.loc 3 1091 12 view .LVU825
 2585              	.LBE427:
 2586              	.LBE426:
3055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2587              		.loc 1 3055 9 is_stmt 1 view .LVU826
 2588 0210 1D68     		ldr	r5, [r3]
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2589              		.loc 1 3056 50 is_stmt 0 view .LVU827
 2590 0212 0A68     		ldr	r2, [r1]
 2591 0214 C2F31206 		ubfx	r6, r2, #0, #19
 2592 0218 002E     		cmp	r6, #0
 2593 021a 35D1     		bne	.L137
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2594              		.loc 1 3056 50 discriminator 1 view .LVU828
 2595 021c 900E     		lsrs	r0, r2, #26
 2596 021e 0130     		adds	r0, r0, #1
 2597 0220 00F01F00 		and	r0, r0, #31
 2598 0224 0928     		cmp	r0, #9
 2599 0226 8CBF     		ite	hi
 2600 0228 0020     		movhi	r0, #0
 2601 022a 0120     		movls	r0, #1
 2602              	.L138:
3055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2603              		.loc 1 3055 9 view .LVU829
 2604 022c 0028     		cmp	r0, #0
 2605 022e 62D0     		beq	.L140
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2606              		.loc 1 3056 50 view .LVU830
 2607 0230 002E     		cmp	r6, #0
 2608 0232 38D1     		bne	.L141
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2609              		.loc 1 3056 50 discriminator 3 view .LVU831
 2610 0234 940E     		lsrs	r4, r2, #26
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 270


 2611 0236 0134     		adds	r4, r4, #1
 2612 0238 A406     		lsls	r4, r4, #26
 2613 023a 04F0F844 		and	r4, r4, #2080374784
 2614              	.L142:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2615              		.loc 1 3056 50 discriminator 6 view .LVU832
 2616 023e 002E     		cmp	r6, #0
 2617 0240 3DD1     		bne	.L144
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2618              		.loc 1 3056 50 discriminator 7 view .LVU833
 2619 0242 900E     		lsrs	r0, r2, #26
 2620 0244 0130     		adds	r0, r0, #1
 2621 0246 00F01F07 		and	r7, r0, #31
 2622 024a 0120     		movs	r0, #1
 2623 024c B840     		lsls	r0, r0, r7
 2624              	.L145:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2625              		.loc 1 3056 50 discriminator 10 view .LVU834
 2626 024e 0443     		orrs	r4, r4, r0
 2627 0250 002E     		cmp	r6, #0
 2628 0252 42D1     		bne	.L147
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2629              		.loc 1 3056 50 discriminator 11 view .LVU835
 2630 0254 920E     		lsrs	r2, r2, #26
 2631 0256 0132     		adds	r2, r2, #1
 2632 0258 02F01F02 		and	r2, r2, #31
 2633 025c 02EB4202 		add	r2, r2, r2, lsl #1
 2634 0260 1205     		lsls	r2, r2, #20
 2635              	.L148:
3055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2636              		.loc 1 3055 9 view .LVU836
 2637 0262 2243     		orrs	r2, r2, r4
 2638              	.L150:
3055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2639              		.loc 1 3055 9 discriminator 1 view .LVU837
 2640 0264 8C68     		ldr	r4, [r1, #8]
 2641              	.LVL197:
 2642              	.LBB428:
 2643              	.LBI428:
5445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2644              		.loc 2 5445 22 is_stmt 1 discriminator 1 view .LVU838
 2645              	.LBB429:
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2646              		.loc 2 5459 3 discriminator 1 view .LVU839
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2647              		.loc 2 5459 25 is_stmt 0 discriminator 1 view .LVU840
 2648 0266 1435     		adds	r5, r5, #20
 2649              	.LVL198:
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2650              		.loc 2 5459 25 discriminator 1 view .LVU841
 2651 0268 500E     		lsrs	r0, r2, #25
 2652 026a 8000     		lsls	r0, r0, #2
 2653 026c 00F00400 		and	r0, r0, #4
 2654              	.LVL199:
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2655              		.loc 2 5461 3 is_stmt 1 discriminator 1 view .LVU842
 2656 0270 2E58     		ldr	r6, [r5, r0]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 271


 2657 0272 C2F30452 		ubfx	r2, r2, #20, #5
 2658              	.LVL200:
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2659              		.loc 2 5461 3 is_stmt 0 discriminator 1 view .LVU843
 2660 0276 0727     		movs	r7, #7
 2661 0278 9740     		lsls	r7, r7, r2
 2662 027a 26EA0706 		bic	r6, r6, r7
 2663 027e 04FA02F2 		lsl	r2, r4, r2
 2664 0282 3243     		orrs	r2, r2, r6
 2665 0284 2A50     		str	r2, [r5, r0]
 2666              	.LVL201:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 2667              		.loc 2 5465 1 discriminator 1 view .LVU844
 2668 0286 3FE7     		b	.L136
 2669              	.LVL202:
 2670              	.L137:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 2671              		.loc 2 5465 1 discriminator 1 view .LVU845
 2672              	.LBE429:
 2673              	.LBE428:
 2674              	.LBB430:
 2675              	.LBI430:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2676              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU846
 2677              	.LBB431:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2678              		.loc 3 1050 3 discriminator 2 view .LVU847
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2679              		.loc 3 1055 4 discriminator 2 view .LVU848
 2680              		.syntax unified
 2681              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2682 0288 92FAA2F0 		rbit r0, r2
 2683              	@ 0 "" 2
 2684              	.LVL203:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2685              		.loc 3 1068 3 discriminator 2 view .LVU849
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2686              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU850
 2687              		.thumb
 2688              		.syntax unified
 2689              	.LBE431:
 2690              	.LBE430:
 2691              	.LBB432:
 2692              	.LBI432:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2693              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU851
 2694              	.LBB433:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2695              		.loc 3 1089 3 discriminator 2 view .LVU852
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2696              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU853
 2697 028c 48B1     		cbz	r0, .L172
 2698              		.loc 3 1093 3 is_stmt 1 view .LVU854
 2699              		.loc 3 1093 10 is_stmt 0 view .LVU855
 2700 028e B0FA80F0 		clz	r0, r0
 2701              	.LVL204:
 2702              	.L139:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 272


 2703              		.loc 3 1093 10 view .LVU856
 2704              	.LBE433:
 2705              	.LBE432:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2706              		.loc 1 3056 50 view .LVU857
 2707 0292 0130     		adds	r0, r0, #1
 2708 0294 00F01F00 		and	r0, r0, #31
 2709 0298 0928     		cmp	r0, #9
 2710 029a 8CBF     		ite	hi
 2711 029c 0020     		movhi	r0, #0
 2712 029e 0120     		movls	r0, #1
 2713 02a0 C4E7     		b	.L138
 2714              	.LVL205:
 2715              	.L172:
 2716              	.LBB435:
 2717              	.LBB434:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2718              		.loc 3 1091 12 view .LVU858
 2719 02a2 2020     		movs	r0, #32
 2720              	.LVL206:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2721              		.loc 3 1091 12 view .LVU859
 2722 02a4 F5E7     		b	.L139
 2723              	.L141:
 2724              	.LVL207:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2725              		.loc 3 1091 12 view .LVU860
 2726              	.LBE434:
 2727              	.LBE435:
 2728              	.LBB436:
 2729              	.LBI436:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2730              		.loc 3 1048 31 is_stmt 1 discriminator 4 view .LVU861
 2731              	.LBB437:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2732              		.loc 3 1050 3 discriminator 4 view .LVU862
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2733              		.loc 3 1055 4 discriminator 4 view .LVU863
 2734              		.syntax unified
 2735              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2736 02a6 92FAA2F4 		rbit r4, r2
 2737              	@ 0 "" 2
 2738              	.LVL208:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2739              		.loc 3 1068 3 discriminator 4 view .LVU864
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2740              		.loc 3 1068 3 is_stmt 0 discriminator 4 view .LVU865
 2741              		.thumb
 2742              		.syntax unified
 2743              	.LBE437:
 2744              	.LBE436:
 2745              	.LBB438:
 2746              	.LBI438:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2747              		.loc 3 1078 30 is_stmt 1 discriminator 4 view .LVU866
 2748              	.LBB439:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 273


 2749              		.loc 3 1089 3 discriminator 4 view .LVU867
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2750              		.loc 3 1089 6 is_stmt 0 discriminator 4 view .LVU868
 2751 02aa 34B1     		cbz	r4, .L173
 2752              		.loc 3 1093 3 is_stmt 1 view .LVU869
 2753              		.loc 3 1093 10 is_stmt 0 view .LVU870
 2754 02ac B4FA84F4 		clz	r4, r4
 2755              	.LVL209:
 2756              	.L143:
 2757              		.loc 3 1093 10 view .LVU871
 2758              	.LBE439:
 2759              	.LBE438:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2760              		.loc 1 3056 50 view .LVU872
 2761 02b0 0134     		adds	r4, r4, #1
 2762 02b2 A406     		lsls	r4, r4, #26
 2763 02b4 04F0F844 		and	r4, r4, #2080374784
 2764 02b8 C1E7     		b	.L142
 2765              	.LVL210:
 2766              	.L173:
 2767              	.LBB441:
 2768              	.LBB440:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2769              		.loc 3 1091 12 view .LVU873
 2770 02ba 2024     		movs	r4, #32
 2771              	.LVL211:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2772              		.loc 3 1091 12 view .LVU874
 2773 02bc F8E7     		b	.L143
 2774              	.L144:
 2775              	.LVL212:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2776              		.loc 3 1091 12 view .LVU875
 2777              	.LBE440:
 2778              	.LBE441:
 2779              	.LBB442:
 2780              	.LBI442:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2781              		.loc 3 1048 31 is_stmt 1 discriminator 8 view .LVU876
 2782              	.LBB443:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2783              		.loc 3 1050 3 discriminator 8 view .LVU877
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2784              		.loc 3 1055 4 discriminator 8 view .LVU878
 2785              		.syntax unified
 2786              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2787 02be 92FAA2F0 		rbit r0, r2
 2788              	@ 0 "" 2
 2789              	.LVL213:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2790              		.loc 3 1068 3 discriminator 8 view .LVU879
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2791              		.loc 3 1068 3 is_stmt 0 discriminator 8 view .LVU880
 2792              		.thumb
 2793              		.syntax unified
 2794              	.LBE443:
 2795              	.LBE442:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 274


 2796              	.LBB444:
 2797              	.LBI444:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2798              		.loc 3 1078 30 is_stmt 1 discriminator 8 view .LVU881
 2799              	.LBB445:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2800              		.loc 3 1089 3 discriminator 8 view .LVU882
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2801              		.loc 3 1089 6 is_stmt 0 discriminator 8 view .LVU883
 2802 02c2 40B1     		cbz	r0, .L174
 2803              		.loc 3 1093 3 is_stmt 1 view .LVU884
 2804              		.loc 3 1093 10 is_stmt 0 view .LVU885
 2805 02c4 B0FA80F0 		clz	r0, r0
 2806              	.LVL214:
 2807              	.L146:
 2808              		.loc 3 1093 10 view .LVU886
 2809              	.LBE445:
 2810              	.LBE444:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2811              		.loc 1 3056 50 view .LVU887
 2812 02c8 0130     		adds	r0, r0, #1
 2813 02ca 00F01F00 		and	r0, r0, #31
 2814 02ce 0127     		movs	r7, #1
 2815 02d0 07FA00F0 		lsl	r0, r7, r0
 2816 02d4 BBE7     		b	.L145
 2817              	.LVL215:
 2818              	.L174:
 2819              	.LBB447:
 2820              	.LBB446:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2821              		.loc 3 1091 12 view .LVU888
 2822 02d6 2020     		movs	r0, #32
 2823              	.LVL216:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2824              		.loc 3 1091 12 view .LVU889
 2825 02d8 F6E7     		b	.L146
 2826              	.L147:
 2827              	.LVL217:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2828              		.loc 3 1091 12 view .LVU890
 2829              	.LBE446:
 2830              	.LBE447:
 2831              	.LBB448:
 2832              	.LBI448:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2833              		.loc 3 1048 31 is_stmt 1 discriminator 12 view .LVU891
 2834              	.LBB449:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2835              		.loc 3 1050 3 discriminator 12 view .LVU892
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2836              		.loc 3 1055 4 discriminator 12 view .LVU893
 2837              		.syntax unified
 2838              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2839 02da 92FAA2F2 		rbit r2, r2
 2840              	@ 0 "" 2
 2841              	.LVL218:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 275


 2842              		.loc 3 1068 3 discriminator 12 view .LVU894
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2843              		.loc 3 1068 3 is_stmt 0 discriminator 12 view .LVU895
 2844              		.thumb
 2845              		.syntax unified
 2846              	.LBE449:
 2847              	.LBE448:
 2848              	.LBB450:
 2849              	.LBI450:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2850              		.loc 3 1078 30 is_stmt 1 discriminator 12 view .LVU896
 2851              	.LBB451:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2852              		.loc 3 1089 3 discriminator 12 view .LVU897
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2853              		.loc 3 1089 6 is_stmt 0 discriminator 12 view .LVU898
 2854 02de 42B1     		cbz	r2, .L175
 2855              		.loc 3 1093 3 is_stmt 1 view .LVU899
 2856              		.loc 3 1093 10 is_stmt 0 view .LVU900
 2857 02e0 B2FA82F2 		clz	r2, r2
 2858              	.LVL219:
 2859              	.L149:
 2860              		.loc 3 1093 10 view .LVU901
 2861              	.LBE451:
 2862              	.LBE450:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2863              		.loc 1 3056 50 view .LVU902
 2864 02e4 0132     		adds	r2, r2, #1
 2865 02e6 02F01F02 		and	r2, r2, #31
 2866 02ea 02EB4202 		add	r2, r2, r2, lsl #1
 2867 02ee 1205     		lsls	r2, r2, #20
 2868 02f0 B7E7     		b	.L148
 2869              	.LVL220:
 2870              	.L175:
 2871              	.LBB453:
 2872              	.LBB452:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2873              		.loc 3 1091 12 view .LVU903
 2874 02f2 2022     		movs	r2, #32
 2875              	.LVL221:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2876              		.loc 3 1091 12 view .LVU904
 2877 02f4 F6E7     		b	.L149
 2878              	.L140:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2879              		.loc 3 1091 12 view .LVU905
 2880              	.LBE452:
 2881              	.LBE453:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2882              		.loc 1 3056 50 view .LVU906
 2883 02f6 CEB9     		cbnz	r6, .L151
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2884              		.loc 1 3056 50 discriminator 13 view .LVU907
 2885 02f8 940E     		lsrs	r4, r2, #26
 2886 02fa 0134     		adds	r4, r4, #1
 2887 02fc A406     		lsls	r4, r4, #26
 2888 02fe 04F0F844 		and	r4, r4, #2080374784
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 276


 2889              	.L152:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2890              		.loc 1 3056 50 discriminator 16 view .LVU908
 2891 0302 FEB9     		cbnz	r6, .L154
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2892              		.loc 1 3056 50 discriminator 17 view .LVU909
 2893 0304 900E     		lsrs	r0, r2, #26
 2894 0306 0130     		adds	r0, r0, #1
 2895 0308 00F01F07 		and	r7, r0, #31
 2896 030c 0120     		movs	r0, #1
 2897 030e B840     		lsls	r0, r0, r7
 2898              	.L155:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2899              		.loc 1 3056 50 discriminator 20 view .LVU910
 2900 0310 0443     		orrs	r4, r4, r0
 2901 0312 2EBB     		cbnz	r6, .L157
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2902              		.loc 1 3056 50 discriminator 21 view .LVU911
 2903 0314 900E     		lsrs	r0, r2, #26
 2904 0316 0130     		adds	r0, r0, #1
 2905 0318 00F01F00 		and	r0, r0, #31
 2906 031c 00EB4002 		add	r2, r0, r0, lsl #1
 2907 0320 1E3A     		subs	r2, r2, #30
 2908 0322 1205     		lsls	r2, r2, #20
 2909 0324 42F00072 		orr	r2, r2, #33554432
 2910              	.L158:
3055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2911              		.loc 1 3055 9 discriminator 2 view .LVU912
 2912 0328 2243     		orrs	r2, r2, r4
 2913 032a 9BE7     		b	.L150
 2914              	.L151:
 2915              	.LVL222:
 2916              	.LBB454:
 2917              	.LBI454:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2918              		.loc 3 1048 31 is_stmt 1 discriminator 14 view .LVU913
 2919              	.LBB455:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2920              		.loc 3 1050 3 discriminator 14 view .LVU914
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2921              		.loc 3 1055 4 discriminator 14 view .LVU915
 2922              		.syntax unified
 2923              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2924 032c 92FAA2F4 		rbit r4, r2
 2925              	@ 0 "" 2
 2926              	.LVL223:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2927              		.loc 3 1068 3 discriminator 14 view .LVU916
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2928              		.loc 3 1068 3 is_stmt 0 discriminator 14 view .LVU917
 2929              		.thumb
 2930              		.syntax unified
 2931              	.LBE455:
 2932              	.LBE454:
 2933              	.LBB456:
 2934              	.LBI456:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 277


 2935              		.loc 3 1078 30 is_stmt 1 discriminator 14 view .LVU918
 2936              	.LBB457:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2937              		.loc 3 1089 3 discriminator 14 view .LVU919
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2938              		.loc 3 1089 6 is_stmt 0 discriminator 14 view .LVU920
 2939 0330 34B1     		cbz	r4, .L176
 2940              		.loc 3 1093 3 is_stmt 1 view .LVU921
 2941              		.loc 3 1093 10 is_stmt 0 view .LVU922
 2942 0332 B4FA84F4 		clz	r4, r4
 2943              	.LVL224:
 2944              	.L153:
 2945              		.loc 3 1093 10 view .LVU923
 2946              	.LBE457:
 2947              	.LBE456:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2948              		.loc 1 3056 50 view .LVU924
 2949 0336 0134     		adds	r4, r4, #1
 2950 0338 A406     		lsls	r4, r4, #26
 2951 033a 04F0F844 		and	r4, r4, #2080374784
 2952 033e E0E7     		b	.L152
 2953              	.LVL225:
 2954              	.L176:
 2955              	.LBB459:
 2956              	.LBB458:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2957              		.loc 3 1091 12 view .LVU925
 2958 0340 2024     		movs	r4, #32
 2959              	.LVL226:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2960              		.loc 3 1091 12 view .LVU926
 2961 0342 F8E7     		b	.L153
 2962              	.L154:
 2963              	.LVL227:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2964              		.loc 3 1091 12 view .LVU927
 2965              	.LBE458:
 2966              	.LBE459:
 2967              	.LBB460:
 2968              	.LBI460:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2969              		.loc 3 1048 31 is_stmt 1 discriminator 18 view .LVU928
 2970              	.LBB461:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2971              		.loc 3 1050 3 discriminator 18 view .LVU929
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2972              		.loc 3 1055 4 discriminator 18 view .LVU930
 2973              		.syntax unified
 2974              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2975 0344 92FAA2F0 		rbit r0, r2
 2976              	@ 0 "" 2
 2977              	.LVL228:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2978              		.loc 3 1068 3 discriminator 18 view .LVU931
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2979              		.loc 3 1068 3 is_stmt 0 discriminator 18 view .LVU932
 2980              		.thumb
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 278


 2981              		.syntax unified
 2982              	.LBE461:
 2983              	.LBE460:
 2984              	.LBB462:
 2985              	.LBI462:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2986              		.loc 3 1078 30 is_stmt 1 discriminator 18 view .LVU933
 2987              	.LBB463:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2988              		.loc 3 1089 3 discriminator 18 view .LVU934
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2989              		.loc 3 1089 6 is_stmt 0 discriminator 18 view .LVU935
 2990 0348 40B1     		cbz	r0, .L177
 2991              		.loc 3 1093 3 is_stmt 1 view .LVU936
 2992              		.loc 3 1093 10 is_stmt 0 view .LVU937
 2993 034a B0FA80F0 		clz	r0, r0
 2994              	.LVL229:
 2995              	.L156:
 2996              		.loc 3 1093 10 view .LVU938
 2997              	.LBE463:
 2998              	.LBE462:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2999              		.loc 1 3056 50 view .LVU939
 3000 034e 0130     		adds	r0, r0, #1
 3001 0350 00F01F00 		and	r0, r0, #31
 3002 0354 0127     		movs	r7, #1
 3003 0356 07FA00F0 		lsl	r0, r7, r0
 3004 035a D9E7     		b	.L155
 3005              	.LVL230:
 3006              	.L177:
 3007              	.LBB465:
 3008              	.LBB464:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3009              		.loc 3 1091 12 view .LVU940
 3010 035c 2020     		movs	r0, #32
 3011              	.LVL231:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3012              		.loc 3 1091 12 view .LVU941
 3013 035e F6E7     		b	.L156
 3014              	.L157:
 3015              	.LVL232:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3016              		.loc 3 1091 12 view .LVU942
 3017              	.LBE464:
 3018              	.LBE465:
 3019              	.LBB466:
 3020              	.LBI466:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3021              		.loc 3 1048 31 is_stmt 1 discriminator 22 view .LVU943
 3022              	.LBB467:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3023              		.loc 3 1050 3 discriminator 22 view .LVU944
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3024              		.loc 3 1055 4 discriminator 22 view .LVU945
 3025              		.syntax unified
 3026              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3027 0360 92FAA2F2 		rbit r2, r2
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 279


 3028              	@ 0 "" 2
 3029              	.LVL233:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3030              		.loc 3 1068 3 discriminator 22 view .LVU946
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3031              		.loc 3 1068 3 is_stmt 0 discriminator 22 view .LVU947
 3032              		.thumb
 3033              		.syntax unified
 3034              	.LBE467:
 3035              	.LBE466:
 3036              	.LBB468:
 3037              	.LBI468:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3038              		.loc 3 1078 30 is_stmt 1 discriminator 22 view .LVU948
 3039              	.LBB469:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3040              		.loc 3 1089 3 discriminator 22 view .LVU949
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3041              		.loc 3 1089 6 is_stmt 0 discriminator 22 view .LVU950
 3042 0364 5AB1     		cbz	r2, .L178
 3043              		.loc 3 1093 3 is_stmt 1 view .LVU951
 3044              		.loc 3 1093 10 is_stmt 0 view .LVU952
 3045 0366 B2FA82F0 		clz	r0, r2
 3046              	.L159:
 3047              	.LVL234:
 3048              		.loc 3 1093 10 view .LVU953
 3049              	.LBE469:
 3050              	.LBE468:
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 3051              		.loc 1 3056 50 view .LVU954
 3052 036a 0130     		adds	r0, r0, #1
 3053 036c 00F01F00 		and	r0, r0, #31
 3054 0370 00EB4002 		add	r2, r0, r0, lsl #1
 3055 0374 1E3A     		subs	r2, r2, #30
 3056 0376 1205     		lsls	r2, r2, #20
 3057 0378 42F00072 		orr	r2, r2, #33554432
 3058 037c D4E7     		b	.L158
 3059              	.LVL235:
 3060              	.L178:
 3061              	.LBB471:
 3062              	.LBB470:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3063              		.loc 3 1091 12 view .LVU955
 3064 037e 2020     		movs	r0, #32
 3065 0380 F3E7     		b	.L159
 3066              	.L197:
 3067 0382 00BF     		.align	2
 3068              	.L196:
 3069 0384 00F0FF03 		.word	67104768
 3070 0388 FFFF0700 		.word	524287
 3071 038c 00007F40 		.word	1082064896
 3072 0390 00000880 		.word	-2146959360
 3073 0394 00030450 		.word	1342440192
 3074 0398 00000450 		.word	1342439424
 3075 039c 000052C7 		.word	-950927360
 3076 03a0 000084CB 		.word	-880541696
 3077 03a4 01000080 		.word	-2147483647
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 280


 3078              	.LVL236:
 3079              	.L160:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3080              		.loc 3 1091 12 view .LVU956
 3081              	.LBE470:
 3082              	.LBE471:
3121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3083              		.loc 1 3121 11 is_stmt 1 view .LVU957
 3084 03a8 5A6D     		ldr	r2, [r3, #84]
 3085 03aa 42F02002 		orr	r2, r2, #32
 3086 03ae 5A65     		str	r2, [r3, #84]
3123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 3087              		.loc 1 3123 11 view .LVU958
 3088              	.LVL237:
3123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 3089              		.loc 1 3123 26 is_stmt 0 view .LVU959
 3090 03b0 0120     		movs	r0, #1
 3091 03b2 3CE6     		b	.L116
 3092              	.LVL238:
 3093              	.L187:
3078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3094              		.loc 1 3078 60 discriminator 1 view .LVU960
 3095 03b4 11F4000F 		tst	r1, #8388608
 3096 03b8 7FF4B9AE 		bne	.L162
3080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3097              		.loc 1 3080 13 is_stmt 1 view .LVU961
3080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3098              		.loc 1 3080 17 is_stmt 0 view .LVU962
 3099 03bc 1968     		ldr	r1, [r3]
3080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3100              		.loc 1 3080 16 view .LVU963
 3101 03be 284A     		ldr	r2, .L198
 3102 03c0 9142     		cmp	r1, r2
 3103 03c2 01D0     		beq	.L193
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3104              		.loc 1 2944 21 view .LVU964
 3105 03c4 0020     		movs	r0, #0
 3106 03c6 32E6     		b	.L116
 3107              	.L193:
3082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3108              		.loc 1 3082 15 is_stmt 1 view .LVU965
 3109 03c8 44F40002 		orr	r2, r4, #8388608
 3110              	.LVL239:
 3111              	.LBB472:
 3112              	.LBI472:
2490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3113              		.loc 2 2490 22 view .LVU966
 3114              	.LBB473:
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3115              		.loc 2 2492 3 view .LVU967
 3116 03cc 2548     		ldr	r0, .L198+4
 3117 03ce 8168     		ldr	r1, [r0, #8]
 3118 03d0 21F0E071 		bic	r1, r1, #29360128
 3119 03d4 0A43     		orrs	r2, r2, r1
 3120              	.LVL240:
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3121              		.loc 2 2492 3 is_stmt 0 view .LVU968
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 281


 3122 03d6 8260     		str	r2, [r0, #8]
 3123              	.LVL241:
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3124              		.loc 2 2492 3 view .LVU969
 3125              	.LBE473:
 3126              	.LBE472:
3089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
 3127              		.loc 1 3089 15 is_stmt 1 view .LVU970
3089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
 3128              		.loc 1 3089 95 is_stmt 0 view .LVU971
 3129 03d8 234A     		ldr	r2, .L198+8
 3130 03da 1268     		ldr	r2, [r2]
 3131 03dc 9209     		lsrs	r2, r2, #6
 3132 03de 2349     		ldr	r1, .L198+12
 3133 03e0 A1FB0212 		umull	r1, r2, r1, r2
 3134 03e4 9209     		lsrs	r2, r2, #6
3089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
 3135              		.loc 1 3089 75 view .LVU972
 3136 03e6 0132     		adds	r2, r2, #1
 3137 03e8 02EB4202 		add	r2, r2, r2, lsl #1
 3138 03ec 9200     		lsls	r2, r2, #2
3089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
 3139              		.loc 1 3089 31 view .LVU973
 3140 03ee 0192     		str	r2, [sp, #4]
3090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 3141              		.loc 1 3090 15 is_stmt 1 view .LVU974
3090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 3142              		.loc 1 3090 20 is_stmt 0 view .LVU975
 3143 03f0 02E0     		b	.L163
 3144              	.L164:
3092:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
 3145              		.loc 1 3092 17 is_stmt 1 view .LVU976
3092:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
 3146              		.loc 1 3092 32 is_stmt 0 view .LVU977
 3147 03f2 019A     		ldr	r2, [sp, #4]
 3148 03f4 013A     		subs	r2, r2, #1
 3149 03f6 0192     		str	r2, [sp, #4]
 3150              	.L163:
3090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 3151              		.loc 1 3090 20 is_stmt 1 view .LVU978
3090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 3152              		.loc 1 3090 37 is_stmt 0 view .LVU979
 3153 03f8 019A     		ldr	r2, [sp, #4]
3090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 3154              		.loc 1 3090 20 view .LVU980
 3155 03fa 002A     		cmp	r2, #0
 3156 03fc F9D1     		bne	.L164
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3157              		.loc 1 2944 21 view .LVU981
 3158 03fe 0020     		movs	r0, #0
 3159 0400 15E6     		b	.L116
 3160              	.L188:
3096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3161              		.loc 1 3096 59 discriminator 1 view .LVU982
 3162 0402 11F0807F 		tst	r1, #16777216
 3163 0406 7FF496AE 		bne	.L165
3098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 282


 3164              		.loc 1 3098 13 is_stmt 1 view .LVU983
3098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3165              		.loc 1 3098 17 is_stmt 0 view .LVU984
 3166 040a 1968     		ldr	r1, [r3]
3098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3167              		.loc 1 3098 16 view .LVU985
 3168 040c 144A     		ldr	r2, .L198
 3169 040e 9142     		cmp	r1, r2
 3170 0410 01D0     		beq	.L194
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3171              		.loc 1 2944 21 view .LVU986
 3172 0412 0020     		movs	r0, #0
 3173 0414 0BE6     		b	.L116
 3174              	.L194:
3100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
 3175              		.loc 1 3100 15 is_stmt 1 view .LVU987
 3176 0416 44F08072 		orr	r2, r4, #16777216
 3177              	.LVL242:
 3178              	.LBB474:
 3179              	.LBI474:
2490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3180              		.loc 2 2490 22 view .LVU988
 3181              	.LBB475:
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3182              		.loc 2 2492 3 view .LVU989
 3183 041a 1248     		ldr	r0, .L198+4
 3184 041c 8168     		ldr	r1, [r0, #8]
 3185 041e 21F0E071 		bic	r1, r1, #29360128
 3186 0422 0A43     		orrs	r2, r2, r1
 3187              	.LVL243:
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3188              		.loc 2 2492 3 is_stmt 0 view .LVU990
 3189 0424 8260     		str	r2, [r0, #8]
 3190              	.LBE475:
 3191              	.LBE474:
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3192              		.loc 1 2944 21 view .LVU991
 3193 0426 0020     		movs	r0, #0
 3194              	.LBB477:
 3195              	.LBB476:
2493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3196              		.loc 2 2493 1 view .LVU992
 3197 0428 01E6     		b	.L116
 3198              	.LVL244:
 3199              	.L189:
2493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3200              		.loc 2 2493 1 view .LVU993
 3201              	.LBE476:
 3202              	.LBE477:
3103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3203              		.loc 1 3103 62 discriminator 1 view .LVU994
 3204 042a 11F4800F 		tst	r1, #4194304
 3205 042e 13D1     		bne	.L183
3105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3206              		.loc 1 3105 13 is_stmt 1 view .LVU995
3105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3207              		.loc 1 3105 17 is_stmt 0 view .LVU996
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 283


 3208 0430 1968     		ldr	r1, [r3]
3105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3209              		.loc 1 3105 16 view .LVU997
 3210 0432 0B4A     		ldr	r2, .L198
 3211 0434 9142     		cmp	r1, r2
 3212 0436 01D0     		beq	.L195
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3213              		.loc 1 2944 21 view .LVU998
 3214 0438 0020     		movs	r0, #0
 3215 043a F8E5     		b	.L116
 3216              	.L195:
3107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
 3217              		.loc 1 3107 15 is_stmt 1 view .LVU999
 3218 043c 44F48002 		orr	r2, r4, #4194304
 3219              	.LVL245:
 3220              	.LBB478:
 3221              	.LBI478:
2490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3222              		.loc 2 2490 22 view .LVU1000
 3223              	.LBB479:
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3224              		.loc 2 2492 3 view .LVU1001
 3225 0440 0848     		ldr	r0, .L198+4
 3226 0442 8168     		ldr	r1, [r0, #8]
 3227 0444 21F0E071 		bic	r1, r1, #29360128
 3228 0448 0A43     		orrs	r2, r2, r1
 3229              	.LVL246:
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3230              		.loc 2 2492 3 is_stmt 0 view .LVU1002
 3231 044a 8260     		str	r2, [r0, #8]
 3232              	.LBE479:
 3233              	.LBE478:
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3234              		.loc 1 2944 21 view .LVU1003
 3235 044c 0020     		movs	r0, #0
 3236              	.LBB481:
 3237              	.LBB480:
2493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3238              		.loc 2 2493 1 view .LVU1004
 3239 044e EEE5     		b	.L116
 3240              	.LVL247:
 3241              	.L171:
2493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3242              		.loc 2 2493 1 view .LVU1005
 3243              	.LBE480:
 3244              	.LBE481:
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3245              		.loc 1 2944 21 view .LVU1006
 3246 0450 0020     		movs	r0, #0
 3247              	.LVL248:
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3248              		.loc 1 2944 21 view .LVU1007
 3249 0452 ECE5     		b	.L116
 3250              	.LVL249:
 3251              	.L179:
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3252              		.loc 1 2944 21 view .LVU1008
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 284


 3253 0454 0020     		movs	r0, #0
 3254 0456 EAE5     		b	.L116
 3255              	.LVL250:
 3256              	.L183:
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3257              		.loc 1 2944 21 view .LVU1009
 3258 0458 0020     		movs	r0, #0
 3259 045a E8E5     		b	.L116
 3260              	.LVL251:
 3261              	.L166:
2976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3262              		.loc 1 2976 3 view .LVU1010
 3263 045c 0220     		movs	r0, #2
 3264              	.LVL252:
2976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3265              		.loc 1 2976 3 view .LVU1011
 3266 045e E9E5     		b	.L114
 3267              	.L199:
 3268              		.align	2
 3269              	.L198:
 3270 0460 00000450 		.word	1342439424
 3271 0464 00030450 		.word	1342440192
 3272 0468 00000000 		.word	SystemCoreClock
 3273 046c 632D3E05 		.word	87960931
 3274              		.cfi_endproc
 3275              	.LFE1122:
 3277              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3278              		.align	1
 3279              		.global	HAL_ADC_AnalogWDGConfig
 3280              		.syntax unified
 3281              		.thumb
 3282              		.thumb_func
 3283              		.fpu fpv4-sp-d16
 3285              	HAL_ADC_AnalogWDGConfig:
 3286              	.LVL253:
 3287              	.LFB1123:
3165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3288              		.loc 1 3165 1 is_stmt 1 view -0
 3289              		.cfi_startproc
 3290              		@ args = 0, pretend = 0, frame = 0
 3291              		@ frame_needed = 0, uses_anonymous_args = 0
 3292              		@ link register save eliminated.
3166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3293              		.loc 1 3166 3 view .LVU1013
3167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 3294              		.loc 1 3167 3 view .LVU1014
3168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined (ADC_SUPPORT_2_5_MSPS)
 3295              		.loc 1 3168 3 view .LVU1015
3170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3296              		.loc 1 3170 3 view .LVU1016
3171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 3297              		.loc 1 3171 3 view .LVU1017
3175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 3298              		.loc 1 3175 3 view .LVU1018
3176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3299              		.loc 1 3176 3 view .LVU1019
3177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 285


 3300              		.loc 1 3177 3 view .LVU1020
3178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3301              		.loc 1 3178 3 view .LVU1021
3183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3302              		.loc 1 3183 3 view .LVU1022
3188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 3303              		.loc 1 3188 5 view .LVU1023
3197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 3304              		.loc 1 3197 3 view .LVU1024
3208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3305              		.loc 1 3208 5 view .LVU1025
3209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 3306              		.loc 1 3209 5 view .LVU1026
3214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3307              		.loc 1 3214 3 view .LVU1027
3214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3308              		.loc 1 3214 3 view .LVU1028
 3309 0000 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 3310 0004 012A     		cmp	r2, #1
 3311 0006 00F09B81 		beq	.L236
3165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3312              		.loc 1 3165 1 is_stmt 0 discriminator 2 view .LVU1029
 3313 000a 70B4     		push	{r4, r5, r6}
 3314              	.LCFI15:
 3315              		.cfi_def_cfa_offset 12
 3316              		.cfi_offset 4, -12
 3317              		.cfi_offset 5, -8
 3318              		.cfi_offset 6, -4
 3319 000c 0346     		mov	r3, r0
3214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3320              		.loc 1 3214 3 is_stmt 1 discriminator 2 view .LVU1030
 3321 000e 0122     		movs	r2, #1
 3322 0010 80F85020 		strb	r2, [r0, #80]
3214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3323              		.loc 1 3214 3 discriminator 2 view .LVU1031
3224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3324              		.loc 1 3224 3 discriminator 2 view .LVU1032
3224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3325              		.loc 1 3224 44 is_stmt 0 discriminator 2 view .LVU1033
 3326 0014 0468     		ldr	r4, [r0]
 3327              	.LVL254:
 3328              	.LBB482:
 3329              	.LBI482:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3330              		.loc 2 6851 26 is_stmt 1 discriminator 2 view .LVU1034
 3331              	.LBB483:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3332              		.loc 2 6853 3 discriminator 2 view .LVU1035
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3333              		.loc 2 6853 12 is_stmt 0 discriminator 2 view .LVU1036
 3334 0016 A268     		ldr	r2, [r4, #8]
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3335              		.loc 2 6853 74 discriminator 2 view .LVU1037
 3336 0018 12F00402 		ands	r2, r2, #4
 3337 001c 00D0     		beq	.L202
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3338              		.loc 2 6853 74 view .LVU1038
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 286


 3339 001e 0122     		movs	r2, #1
 3340              	.L202:
 3341              	.LVL255:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3342              		.loc 2 6853 74 view .LVU1039
 3343              	.LBE483:
 3344              	.LBE482:
3225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3345              		.loc 1 3225 3 is_stmt 1 view .LVU1040
 3346              	.LBB484:
 3347              	.LBI484:
7006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3348              		.loc 2 7006 26 view .LVU1041
 3349              	.LBB485:
 3350              		.loc 2 7008 3 view .LVU1042
 3351              		.loc 2 7008 12 is_stmt 0 view .LVU1043
 3352 0020 A068     		ldr	r0, [r4, #8]
 3353              	.LVL256:
 3354              		.loc 2 7008 76 view .LVU1044
 3355 0022 10F00800 		ands	r0, r0, #8
 3356 0026 00D0     		beq	.L203
 3357 0028 0120     		movs	r0, #1
 3358              	.L203:
 3359              	.LVL257:
 3360              		.loc 2 7008 76 view .LVU1045
 3361              	.LBE485:
 3362              	.LBE484:
3226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3363              		.loc 1 3226 3 is_stmt 1 view .LVU1046
3226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3364              		.loc 1 3226 6 is_stmt 0 view .LVU1047
 3365 002a 002A     		cmp	r2, #0
 3366 002c 40F07E81 		bne	.L204
3227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 3367              		.loc 1 3227 7 view .LVU1048
 3368 0030 0028     		cmp	r0, #0
 3369 0032 40F07B81 		bne	.L204
3232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 3370              		.loc 1 3232 5 is_stmt 1 view .LVU1049
3232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 3371              		.loc 1 3232 24 is_stmt 0 view .LVU1050
 3372 0036 0A68     		ldr	r2, [r1]
 3373              	.LVL258:
3232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 3374              		.loc 1 3232 8 view .LVU1051
 3375 0038 BA48     		ldr	r0, .L250
 3376              	.LVL259:
3232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 3377              		.loc 1 3232 8 view .LVU1052
 3378 003a 8242     		cmp	r2, r0
 3379 003c 26D0     		beq	.L243
3313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3380              		.loc 1 3313 7 is_stmt 1 view .LVU1053
3313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3381              		.loc 1 3313 30 is_stmt 0 view .LVU1054
 3382 003e 4868     		ldr	r0, [r1, #4]
3313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 287


 3383              		.loc 1 3313 7 view .LVU1055
 3384 0040 B0F1A07F 		cmp	r0, #20971520
 3385 0044 00F0B880 		beq	.L217
 3386 0048 00F2AF80 		bhi	.L218
 3387 004c B0F5400F 		cmp	r0, #12582912
 3388 0050 00F0B280 		beq	.L217
 3389 0054 B0F1807F 		cmp	r0, #16777216
 3390 0058 00F0E580 		beq	.L219
 3391 005c B0F5000F 		cmp	r0, #8388608
 3392 0060 00F0E180 		beq	.L219
 3393              	.L220:
3345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3394              		.loc 1 3345 11 is_stmt 1 view .LVU1056
 3395              	.LVL260:
 3396              	.LBB486:
 3397              	.LBI486:
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3398              		.loc 2 5871 22 view .LVU1057
 3399              	.LBB487:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3400              		.loc 2 5885 3 view .LVU1058
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3401              		.loc 2 5885 25 is_stmt 0 view .LVU1059
 3402 0064 0C34     		adds	r4, r4, #12
 3403              	.LVL261:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3404              		.loc 2 5885 25 view .LVU1060
 3405 0066 C2F30150 		ubfx	r0, r2, #20, #2
 3406 006a 02F00106 		and	r6, r2, #1
 3407 006e F500     		lsls	r5, r6, #3
 3408 0070 3544     		add	r5, r5, r6
 3409 0072 00EB8500 		add	r0, r0, r5, lsl #2
 3410              	.LVL262:
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3411              		.loc 2 5888 3 is_stmt 1 view .LVU1061
 3412 0076 54F82050 		ldr	r5, [r4, r0, lsl #2]
 3413 007a 22F00242 		bic	r2, r2, #-2113929216
 3414              	.LVL263:
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3415              		.loc 2 5888 3 is_stmt 0 view .LVU1062
 3416 007e 22F46012 		bic	r2, r2, #3670016
 3417 0082 25EA0202 		bic	r2, r5, r2
 3418 0086 44F82020 		str	r2, [r4, r0, lsl #2]
 3419              	.LVL264:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3420              		.loc 2 5892 1 view .LVU1063
 3421 008a E4E0     		b	.L225
 3422              	.LVL265:
 3423              	.L243:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3424              		.loc 2 5892 1 view .LVU1064
 3425              	.LBE487:
 3426              	.LBE486:
3237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3427              		.loc 1 3237 7 is_stmt 1 view .LVU1065
3237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3428              		.loc 1 3237 30 is_stmt 0 view .LVU1066
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 288


 3429 008c 4A68     		ldr	r2, [r1, #4]
3237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3430              		.loc 1 3237 7 view .LVU1067
 3431 008e B2F1A07F 		cmp	r2, #20971520
 3432 0092 67D0     		beq	.L206
 3433 0094 1AD8     		bhi	.L207
 3434 0096 B2F5400F 		cmp	r2, #12582912
 3435 009a 2AD0     		beq	.L208
 3436 009c B2F1807F 		cmp	r2, #16777216
 3437 00a0 08D1     		bne	.L244
3266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3438              		.loc 1 3266 11 is_stmt 1 view .LVU1068
 3439              	.LVL266:
 3440              	.LBB488:
 3441              	.LBI488:
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3442              		.loc 2 5871 22 view .LVU1069
 3443              	.LBB489:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3444              		.loc 2 5885 3 view .LVU1070
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3445              		.loc 2 5888 3 view .LVU1071
 3446 00a2 E268     		ldr	r2, [r4, #12]
 3447 00a4 22F0FB42 		bic	r2, r2, #2105540608
 3448 00a8 22F48002 		bic	r2, r2, #4194304
 3449 00ac 42F08072 		orr	r2, r2, #16777216
 3450 00b0 E260     		str	r2, [r4, #12]
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3451              		.loc 2 5892 1 is_stmt 0 view .LVU1072
 3452 00b2 2AE0     		b	.L214
 3453              	.LVL267:
 3454              	.L244:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3455              		.loc 2 5892 1 view .LVU1073
 3456              	.LBE489:
 3457              	.LBE488:
3237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3458              		.loc 1 3237 7 view .LVU1074
 3459 00b4 B2F5000F 		cmp	r2, #8388608
 3460 00b8 6AD1     		bne	.L211
3259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3461              		.loc 1 3259 11 is_stmt 1 view .LVU1075
 3462              	.LVL268:
 3463              	.LBB490:
 3464              	.LBI490:
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3465              		.loc 2 5871 22 view .LVU1076
 3466              	.LBB491:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3467              		.loc 2 5885 3 view .LVU1077
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3468              		.loc 2 5888 3 view .LVU1078
 3469 00ba E268     		ldr	r2, [r4, #12]
 3470 00bc 22F0FB42 		bic	r2, r2, #2105540608
 3471 00c0 22F48002 		bic	r2, r2, #4194304
 3472 00c4 42F40002 		orr	r2, r2, #8388608
 3473 00c8 E260     		str	r2, [r4, #12]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 289


5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3474              		.loc 2 5892 1 is_stmt 0 view .LVU1079
 3475 00ca 1EE0     		b	.L214
 3476              	.LVL269:
 3477              	.L207:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3478              		.loc 2 5892 1 view .LVU1080
 3479              	.LBE491:
 3480              	.LBE490:
3237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3481              		.loc 1 3237 7 view .LVU1081
 3482 00cc B2F1C07F 		cmp	r2, #25165824
 3483 00d0 55D0     		beq	.L212
 3484 00d2 B2F1E07F 		cmp	r2, #29360128
 3485 00d6 5BD1     		bne	.L211
3253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3486              		.loc 1 3253 11 is_stmt 1 view .LVU1082
3253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3487              		.loc 1 3253 72 is_stmt 0 view .LVU1083
 3488 00d8 8868     		ldr	r0, [r1, #8]
 3489              	.LVL270:
 3490              	.LBB492:
 3491              	.LBI492:
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3492              		.loc 2 5871 22 is_stmt 1 view .LVU1084
 3493              	.LBB493:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3494              		.loc 2 5885 3 view .LVU1085
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3495              		.loc 2 5888 3 view .LVU1086
 3496 00da E268     		ldr	r2, [r4, #12]
 3497 00dc 22F0FB42 		bic	r2, r2, #2105540608
 3498 00e0 22F48002 		bic	r2, r2, #4194304
 3499 00e4 00F0F840 		and	r0, r0, #2080374784
 3500              	.LVL271:
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3501              		.loc 2 5888 3 is_stmt 0 view .LVU1087
 3502 00e8 40F0E070 		orr	r0, r0, #29360128
 3503 00ec 0243     		orrs	r2, r2, r0
 3504 00ee E260     		str	r2, [r4, #12]
 3505              	.LVL272:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3506              		.loc 2 5892 1 view .LVU1088
 3507 00f0 0BE0     		b	.L214
 3508              	.LVL273:
 3509              	.L208:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3510              		.loc 2 5892 1 view .LVU1089
 3511              	.LBE493:
 3512              	.LBE492:
3240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3513              		.loc 1 3240 11 is_stmt 1 view .LVU1090
3240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3514              		.loc 1 3240 72 is_stmt 0 view .LVU1091
 3515 00f2 8868     		ldr	r0, [r1, #8]
 3516              	.LVL274:
 3517              	.LBB494:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 290


 3518              	.LBI494:
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3519              		.loc 2 5871 22 is_stmt 1 view .LVU1092
 3520              	.LBB495:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3521              		.loc 2 5885 3 view .LVU1093
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3522              		.loc 2 5888 3 view .LVU1094
 3523 00f4 E268     		ldr	r2, [r4, #12]
 3524 00f6 22F0FB42 		bic	r2, r2, #2105540608
 3525 00fa 22F48002 		bic	r2, r2, #4194304
 3526 00fe 00F0F840 		and	r0, r0, #2080374784
 3527              	.LVL275:
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3528              		.loc 2 5888 3 is_stmt 0 view .LVU1095
 3529 0102 40F44000 		orr	r0, r0, #12582912
 3530 0106 0243     		orrs	r2, r2, r0
 3531 0108 E260     		str	r2, [r4, #12]
 3532              	.LVL276:
 3533              	.L214:
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3534              		.loc 2 5888 3 view .LVU1096
 3535              	.LBE495:
 3536              	.LBE494:
3282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3537              		.loc 1 3282 7 is_stmt 1 view .LVU1097
3282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3538              		.loc 1 3282 36 is_stmt 0 view .LVU1098
 3539 010a 0D69     		ldr	r5, [r1, #16]
 3540 010c 1868     		ldr	r0, [r3]
 3541 010e C268     		ldr	r2, [r0, #12]
 3542 0110 C2F3C102 		ubfx	r2, r2, #3, #2
 3543 0114 5200     		lsls	r2, r2, #1
3282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3544              		.loc 1 3282 34 view .LVU1099
 3545 0116 05FA02F6 		lsl	r6, r5, r2
 3546              	.LVL277:
3283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3547              		.loc 1 3283 7 is_stmt 1 view .LVU1100
3283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3548              		.loc 1 3283 36 is_stmt 0 view .LVU1101
 3549 011a 4A69     		ldr	r2, [r1, #20]
 3550 011c C568     		ldr	r5, [r0, #12]
 3551 011e C5F3C105 		ubfx	r5, r5, #3, #2
 3552 0122 6D00     		lsls	r5, r5, #1
3283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3553              		.loc 1 3283 34 view .LVU1102
 3554 0124 02FA05F5 		lsl	r5, r2, r5
 3555              	.LVL278:
3286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3556              		.loc 1 3286 7 is_stmt 1 view .LVU1103
 3557 0128 0A68     		ldr	r2, [r1]
 3558              	.LVL279:
 3559              	.LBB496:
 3560              	.LBI496:
6159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 3561              		.loc 2 6159 22 view .LVU1104
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 291


 3562              	.LBB497:
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3563              		.loc 2 6175 3 view .LVU1105
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3564              		.loc 2 6175 25 is_stmt 0 view .LVU1106
 3565 012a 2030     		adds	r0, r0, #32
 3566              	.LVL280:
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3567              		.loc 2 6175 25 view .LVU1107
 3568 012c 120D     		lsrs	r2, r2, #20
 3569              	.LVL281:
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3570              		.loc 2 6175 25 view .LVU1108
 3571 012e 9200     		lsls	r2, r2, #2
 3572 0130 02F00C02 		and	r2, r2, #12
 3573              	.LVL282:
6177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3574              		.loc 2 6177 3 is_stmt 1 view .LVU1109
 3575 0134 8458     		ldr	r4, [r0, r2]
 3576 0136 04F0F024 		and	r4, r4, #-268374016
 3577 013a 45EA0645 		orr	r5, r5, r6, lsl #16
 3578              	.LVL283:
6177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3579              		.loc 2 6177 3 is_stmt 0 view .LVU1110
 3580 013e 2C43     		orrs	r4, r4, r5
 3581 0140 8450     		str	r4, [r0, r2]
 3582              	.LVL284:
6177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3583              		.loc 2 6177 3 view .LVU1111
 3584              	.LBE497:
 3585              	.LBE496:
3289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3586              		.loc 1 3289 7 is_stmt 1 view .LVU1112
 3587 0142 5A6D     		ldr	r2, [r3, #84]
 3588 0144 22F48032 		bic	r2, r2, #65536
 3589 0148 5A65     		str	r2, [r3, #84]
3295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3590              		.loc 1 3295 7 view .LVU1113
 3591 014a 1A68     		ldr	r2, [r3]
 3592              	.LVL285:
 3593              	.LBB498:
 3594              	.LBI498:
7009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
7013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
7014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
7016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 292


7024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all oversampling increased data width (for devices
7026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with feature oversampling).
7027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
7028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
7029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
7030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
7031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
7040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
7044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              ADC_JDR1_JDATA)
7045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
7046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 12 bits.
7051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
7053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
7055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
7056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
7057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
7058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
7067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              ADC_JDR1_JDATA)
7072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
7073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 10 bits.
7078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
7080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 293


7081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
7082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
7083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
7084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
7085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
7094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              ADC_JDR1_JDATA)
7099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
7100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 8 bits.
7105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
7107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
7109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
7110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
7111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
7112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
7121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                             ADC_JDR1_JDATA)
7126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   );
7127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 6 bits.
7132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
7134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
7136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
7137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 294


7138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
7139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(ADC_TypeDef *ADCx, uint32_t Rank)
7148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                             ADC_JDR1_JDATA)
7153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   );
7154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
7158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
7162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
7163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC ready.
7167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
7171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
7175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
7177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC channel configuration ready.
7182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Duration of ADC channel configuration ready: CCRDY handshake
7183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires 1APB + 2 ADC + 3 APB cycles after the channel configuration
7184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         has been changed.
7185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_IsActiveFlag_CCRDY
7186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_CCRDY(ADC_TypeDef *ADCx)
7190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_CCRDY) == (LL_ADC_FLAG_CCRDY)) ? 1UL : 0UL);
7192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 295


7195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
7196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
7198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
7199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
7203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
7205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
7209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
7210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
7214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
7216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
7220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
7221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
7225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
7227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
7231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
7232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
7236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
7238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
7241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
7242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
7245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
7246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
7250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 296


7252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
7256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
7257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
7261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
7263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
7267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
7268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
7272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
7274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
7279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
7280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
7284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
7286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
7290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
7291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
7295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
7297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
7301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
7302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
7306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
7308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 297


7309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
7313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
7314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(ADC_TypeDef *ADCx)
7318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL)) ? 1UL : 0UL);
7320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
7323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC ready.
7325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
7329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
7333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
7335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC channel configuration ready.
7340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_ClearFlag_CCRDY
7341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_CCRDY(ADC_TypeDef *ADCx)
7345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_CCRDY);
7347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
7351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
7353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
7354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
7358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
7360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
7364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
7365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 298


7366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
7369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
7371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
7375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
7376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
7380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
7382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
7386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
7387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
7391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
7393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
7396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
7397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
7400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
7401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
7405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
7407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
7411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
7412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
7416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
7418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
7422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 299


7423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
7427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
7429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
7434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
7435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 3595              		.loc 2 7438 22 view .LVU1114
 3596              	.LBB499:
7439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3597              		.loc 2 7440 3 view .LVU1115
 3598 014c 8020     		movs	r0, #128
 3599 014e 1060     		str	r0, [r2]
 3600              	.LVL286:
 3601              		.loc 2 7440 3 is_stmt 0 view .LVU1116
 3602              	.LBE499:
 3603              	.LBE498:
3298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3604              		.loc 1 3298 7 is_stmt 1 view .LVU1117
3298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3605              		.loc 1 3298 26 is_stmt 0 view .LVU1118
 3606 0150 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3607              		.loc 1 3298 10 view .LVU1119
 3608 0152 012A     		cmp	r2, #1
 3609 0154 23D0     		beq	.L245
3304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 3610              		.loc 1 3304 9 is_stmt 1 view .LVU1120
 3611 0156 1968     		ldr	r1, [r3]
 3612              	.LVL287:
 3613              	.LBB500:
 3614              	.LBI500:
7441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
7445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
7446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
7450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
7452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 300


7456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
7457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
7461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
7463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
7468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
7469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
7473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
7475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
7478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
7480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
7484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable ADC ready.
7488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC channel configuration ready.
7500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_CCRDY
7501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_CCRDY(ADC_TypeDef *ADCx)
7505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
7507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
7511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 301


7513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
7556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
7557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 302


7570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 303


7627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
7628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
7629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
7633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
7635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
7638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC channel configuration ready.
7652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_CCRDY
7653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_CCRDY(ADC_TypeDef *ADCx)
7657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
7659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
7663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 304


7684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
7708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
7709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
7724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 305


7741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
7747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 3615              		.loc 2 7750 22 view .LVU1121
 3616              	.LBB501:
7751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 3617              		.loc 2 7752 3 view .LVU1122
 3618 0158 4A68     		ldr	r2, [r1, #4]
 3619 015a 22F08002 		bic	r2, r2, #128
 3620 015e 4A60     		str	r2, [r1, #4]
 3621              	.LBE501:
 3622              	.LBE500:
3166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3623              		.loc 1 3166 21 is_stmt 0 view .LVU1123
 3624 0160 0020     		movs	r0, #0
 3625              	.LBB503:
 3626              	.LBB502:
7753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3627              		.loc 2 7753 1 view .LVU1124
 3628 0162 E8E0     		b	.L216
 3629              	.LVL288:
 3630              	.L206:
 3631              		.loc 2 7753 1 view .LVU1125
 3632              	.LBE502:
 3633              	.LBE503:
3248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3634              		.loc 1 3248 11 is_stmt 1 view .LVU1126
3248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3635              		.loc 1 3248 72 is_stmt 0 view .LVU1127
 3636 0164 8868     		ldr	r0, [r1, #8]
 3637              	.LVL289:
 3638              	.LBB504:
 3639              	.LBI504:
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3640              		.loc 2 5871 22 is_stmt 1 view .LVU1128
 3641              	.LBB505:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3642              		.loc 2 5885 3 view .LVU1129
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3643              		.loc 2 5888 3 view .LVU1130
 3644 0166 E268     		ldr	r2, [r4, #12]
 3645 0168 22F0FB42 		bic	r2, r2, #2105540608
 3646 016c 22F48002 		bic	r2, r2, #4194304
 3647 0170 00F0F840 		and	r0, r0, #2080374784
 3648              	.LVL290:
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3649              		.loc 2 5888 3 is_stmt 0 view .LVU1131
 3650 0174 40F0A070 		orr	r0, r0, #20971520
 3651 0178 0243     		orrs	r2, r2, r0
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 306


 3652 017a E260     		str	r2, [r4, #12]
 3653              	.LVL291:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3654              		.loc 2 5892 1 view .LVU1132
 3655 017c C5E7     		b	.L214
 3656              	.LVL292:
 3657              	.L212:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3658              		.loc 2 5892 1 view .LVU1133
 3659              	.LBE505:
 3660              	.LBE504:
3270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3661              		.loc 1 3270 11 is_stmt 1 view .LVU1134
 3662              	.LBB506:
 3663              	.LBI506:
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3664              		.loc 2 5871 22 view .LVU1135
 3665              	.LBB507:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3666              		.loc 2 5885 3 view .LVU1136
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3667              		.loc 2 5888 3 view .LVU1137
 3668 017e E268     		ldr	r2, [r4, #12]
 3669 0180 22F0FB42 		bic	r2, r2, #2105540608
 3670 0184 22F48002 		bic	r2, r2, #4194304
 3671 0188 42F0C072 		orr	r2, r2, #25165824
 3672 018c E260     		str	r2, [r4, #12]
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3673              		.loc 2 5892 1 is_stmt 0 view .LVU1138
 3674 018e BCE7     		b	.L214
 3675              	.LVL293:
 3676              	.L211:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3677              		.loc 2 5892 1 view .LVU1139
 3678              	.LBE507:
 3679              	.LBE506:
3275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3680              		.loc 1 3275 11 is_stmt 1 view .LVU1140
 3681              	.LBB508:
 3682              	.LBI508:
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3683              		.loc 2 5871 22 view .LVU1141
 3684              	.LBB509:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3685              		.loc 2 5885 3 view .LVU1142
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3686              		.loc 2 5888 3 view .LVU1143
 3687 0190 E268     		ldr	r2, [r4, #12]
 3688 0192 22F0FB42 		bic	r2, r2, #2105540608
 3689 0196 22F48002 		bic	r2, r2, #4194304
 3690 019a E260     		str	r2, [r4, #12]
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3691              		.loc 2 5892 1 is_stmt 0 view .LVU1144
 3692 019c B5E7     		b	.L214
 3693              	.LVL294:
 3694              	.L245:
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 307


 3695              		.loc 2 5892 1 view .LVU1145
 3696              	.LBE509:
 3697              	.LBE508:
3300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 3698              		.loc 1 3300 9 is_stmt 1 view .LVU1146
 3699 019e 1968     		ldr	r1, [r3]
 3700              	.LVL295:
 3701              	.LBB510:
 3702              	.LBI510:
7598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3703              		.loc 2 7598 22 view .LVU1147
 3704              	.LBB511:
7600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3705              		.loc 2 7600 3 view .LVU1148
 3706 01a0 4A68     		ldr	r2, [r1, #4]
 3707 01a2 0243     		orrs	r2, r2, r0
 3708 01a4 4A60     		str	r2, [r1, #4]
 3709              	.LBE511:
 3710              	.LBE510:
3166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3711              		.loc 1 3166 21 is_stmt 0 view .LVU1149
 3712 01a6 0020     		movs	r0, #0
 3713              	.LBB513:
 3714              	.LBB512:
7601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3715              		.loc 2 7601 1 view .LVU1150
 3716 01a8 C5E0     		b	.L216
 3717              	.LVL296:
 3718              	.L218:
7601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3719              		.loc 2 7601 1 view .LVU1151
 3720              	.LBE512:
 3721              	.LBE513:
3313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3722              		.loc 1 3313 7 view .LVU1152
 3723 01aa B0F1C07F 		cmp	r0, #25165824
 3724 01ae 3AD0     		beq	.L219
 3725 01b0 B0F1E07F 		cmp	r0, #29360128
 3726 01b4 7FF456AF 		bne	.L220
 3727              	.L217:
3322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3728              		.loc 1 3322 11 is_stmt 1 view .LVU1153
3322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3729              		.loc 1 3322 14 is_stmt 0 view .LVU1154
 3730 01b8 5B48     		ldr	r0, .L250+4
 3731 01ba 8242     		cmp	r2, r0
 3732 01bc 0DD0     		beq	.L246
3328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3733              		.loc 1 3328 13 is_stmt 1 view .LVU1155
 3734 01be 8A68     		ldr	r2, [r1, #8]
 3735 01c0 C2F31200 		ubfx	r0, r2, #0, #19
 3736 01c4 18BB     		cbnz	r0, .L226
3328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3737              		.loc 1 3328 13 is_stmt 0 discriminator 1 view .LVU1156
 3738 01c6 C2F38462 		ubfx	r2, r2, #26, #5
 3739 01ca 0120     		movs	r0, #1
 3740 01cc 9040     		lsls	r0, r0, r2
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 308


 3741              	.L227:
3328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3742              		.loc 1 3328 13 discriminator 4 view .LVU1157
 3743 01ce D4F8A420 		ldr	r2, [r4, #164]
 3744 01d2 0243     		orrs	r2, r2, r0
 3745 01d4 C4F8A420 		str	r2, [r4, #164]
 3746 01d8 3DE0     		b	.L225
 3747              	.L246:
3324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3748              		.loc 1 3324 13 is_stmt 1 view .LVU1158
 3749 01da 8A68     		ldr	r2, [r1, #8]
 3750 01dc C2F31200 		ubfx	r0, r2, #0, #19
 3751 01e0 48B9     		cbnz	r0, .L222
3324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3752              		.loc 1 3324 13 is_stmt 0 discriminator 1 view .LVU1159
 3753 01e2 C2F38462 		ubfx	r2, r2, #26, #5
 3754 01e6 0120     		movs	r0, #1
 3755 01e8 9040     		lsls	r0, r0, r2
 3756              	.L223:
3324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3757              		.loc 1 3324 13 discriminator 4 view .LVU1160
 3758 01ea D4F8A020 		ldr	r2, [r4, #160]
 3759 01ee 0243     		orrs	r2, r2, r0
 3760 01f0 C4F8A020 		str	r2, [r4, #160]
 3761 01f4 2FE0     		b	.L225
 3762              	.L222:
 3763              	.LVL297:
 3764              	.LBB514:
 3765              	.LBI514:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3766              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1161
 3767              	.LBB515:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3768              		.loc 3 1050 3 discriminator 2 view .LVU1162
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3769              		.loc 3 1055 4 discriminator 2 view .LVU1163
 3770              		.syntax unified
 3771              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3772 01f6 92FAA2F2 		rbit r2, r2
 3773              	@ 0 "" 2
 3774              	.LVL298:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3775              		.loc 3 1068 3 discriminator 2 view .LVU1164
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3776              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1165
 3777              		.thumb
 3778              		.syntax unified
 3779              	.LBE515:
 3780              	.LBE514:
 3781              	.LBB516:
 3782              	.LBI516:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3783              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1166
 3784              	.LBB517:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3785              		.loc 3 1089 3 discriminator 2 view .LVU1167
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 309


 3786              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1168
 3787 01fa 32B1     		cbz	r2, .L237
 3788              		.loc 3 1093 3 is_stmt 1 view .LVU1169
 3789              		.loc 3 1093 10 is_stmt 0 view .LVU1170
 3790 01fc B2FA82F2 		clz	r2, r2
 3791              	.LVL299:
 3792              	.L224:
 3793              		.loc 3 1093 10 view .LVU1171
 3794              	.LBE517:
 3795              	.LBE516:
3324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3796              		.loc 1 3324 13 view .LVU1172
 3797 0200 02F01F02 		and	r2, r2, #31
 3798 0204 0120     		movs	r0, #1
 3799 0206 9040     		lsls	r0, r0, r2
 3800 0208 EFE7     		b	.L223
 3801              	.LVL300:
 3802              	.L237:
 3803              	.LBB519:
 3804              	.LBB518:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3805              		.loc 3 1091 12 view .LVU1173
 3806 020a 2022     		movs	r2, #32
 3807              	.LVL301:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3808              		.loc 3 1091 12 view .LVU1174
 3809 020c F8E7     		b	.L224
 3810              	.L226:
 3811              	.LVL302:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3812              		.loc 3 1091 12 view .LVU1175
 3813              	.LBE518:
 3814              	.LBE519:
 3815              	.LBB520:
 3816              	.LBI520:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3817              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1176
 3818              	.LBB521:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3819              		.loc 3 1050 3 discriminator 2 view .LVU1177
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3820              		.loc 3 1055 4 discriminator 2 view .LVU1178
 3821              		.syntax unified
 3822              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3823 020e 92FAA2F2 		rbit r2, r2
 3824              	@ 0 "" 2
 3825              	.LVL303:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3826              		.loc 3 1068 3 discriminator 2 view .LVU1179
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3827              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1180
 3828              		.thumb
 3829              		.syntax unified
 3830              	.LBE521:
 3831              	.LBE520:
 3832              	.LBB522:
 3833              	.LBI522:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 310


1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3834              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1181
 3835              	.LBB523:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3836              		.loc 3 1089 3 discriminator 2 view .LVU1182
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3837              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1183
 3838 0212 32B1     		cbz	r2, .L238
 3839              		.loc 3 1093 3 is_stmt 1 view .LVU1184
 3840              		.loc 3 1093 10 is_stmt 0 view .LVU1185
 3841 0214 B2FA82F2 		clz	r2, r2
 3842              	.LVL304:
 3843              	.L228:
 3844              		.loc 3 1093 10 view .LVU1186
 3845              	.LBE523:
 3846              	.LBE522:
3328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3847              		.loc 1 3328 13 view .LVU1187
 3848 0218 02F01F02 		and	r2, r2, #31
 3849 021c 0120     		movs	r0, #1
 3850 021e 9040     		lsls	r0, r0, r2
 3851 0220 D5E7     		b	.L227
 3852              	.LVL305:
 3853              	.L238:
 3854              	.LBB525:
 3855              	.LBB524:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3856              		.loc 3 1091 12 view .LVU1188
 3857 0222 2022     		movs	r2, #32
 3858              	.LVL306:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3859              		.loc 3 1091 12 view .LVU1189
 3860 0224 F8E7     		b	.L228
 3861              	.L219:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3862              		.loc 3 1091 12 view .LVU1190
 3863              	.LBE524:
 3864              	.LBE525:
3340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 3865              		.loc 1 3340 11 is_stmt 1 view .LVU1191
 3866              	.LVL307:
 3867              	.LBB526:
 3868              	.LBI526:
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3869              		.loc 2 5871 22 view .LVU1192
 3870              	.LBB527:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3871              		.loc 2 5885 3 view .LVU1193
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3872              		.loc 2 5885 25 is_stmt 0 view .LVU1194
 3873 0226 0C34     		adds	r4, r4, #12
 3874              	.LVL308:
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3875              		.loc 2 5885 25 view .LVU1195
 3876 0228 C2F30155 		ubfx	r5, r2, #20, #2
 3877 022c 02F00106 		and	r6, r2, #1
 3878 0230 F000     		lsls	r0, r6, #3
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 311


 3879 0232 3044     		add	r0, r0, r6
 3880 0234 05EB8005 		add	r5, r5, r0, lsl #2
 3881              	.LVL309:
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3882              		.loc 2 5888 3 is_stmt 1 view .LVU1196
 3883 0238 54F82500 		ldr	r0, [r4, r5, lsl #2]
 3884 023c 22F00246 		bic	r6, r2, #-2113929216
 3885 0240 26F46016 		bic	r6, r6, #3670016
 3886 0244 20EA0600 		bic	r0, r0, r6
 3887 0248 22F07E42 		bic	r2, r2, #-33554432
 3888              	.LVL310:
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3889              		.loc 2 5888 3 is_stmt 0 view .LVU1197
 3890 024c 22F4F002 		bic	r2, r2, #7864320
 3891 0250 0243     		orrs	r2, r2, r0
 3892 0252 44F82520 		str	r2, [r4, r5, lsl #2]
 3893              	.LVL311:
 3894              	.L225:
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3895              		.loc 2 5888 3 view .LVU1198
 3896              	.LBE527:
 3897              	.LBE526:
3351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3898              		.loc 1 3351 7 is_stmt 1 view .LVU1199
3351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3899              		.loc 1 3351 36 is_stmt 0 view .LVU1200
 3900 0256 1868     		ldr	r0, [r3]
 3901 0258 C268     		ldr	r2, [r0, #12]
 3902 025a 02F01802 		and	r2, r2, #24
 3903 025e 182A     		cmp	r2, #24
 3904 0260 3BD0     		beq	.L229
3351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3905              		.loc 1 3351 36 discriminator 1 view .LVU1201
 3906 0262 0D69     		ldr	r5, [r1, #16]
 3907 0264 C268     		ldr	r2, [r0, #12]
 3908 0266 C2F3C102 		ubfx	r2, r2, #3, #2
 3909 026a C2F10202 		rsb	r2, r2, #2
 3910 026e 5200     		lsls	r2, r2, #1
 3911 0270 02F01E02 		and	r2, r2, #30
 3912 0274 D540     		lsrs	r5, r5, r2
 3913              	.L230:
 3914              	.LVL312:
3352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3915              		.loc 1 3352 7 is_stmt 1 discriminator 4 view .LVU1202
3352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3916              		.loc 1 3352 36 is_stmt 0 discriminator 4 view .LVU1203
 3917 0276 C268     		ldr	r2, [r0, #12]
 3918 0278 02F01802 		and	r2, r2, #24
 3919 027c 182A     		cmp	r2, #24
 3920 027e 2FD0     		beq	.L231
3352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3921              		.loc 1 3352 36 discriminator 1 view .LVU1204
 3922 0280 4C69     		ldr	r4, [r1, #20]
 3923 0282 C268     		ldr	r2, [r0, #12]
 3924 0284 C2F3C102 		ubfx	r2, r2, #3, #2
 3925 0288 C2F10202 		rsb	r2, r2, #2
 3926 028c 5200     		lsls	r2, r2, #1
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 312


 3927 028e 02F01E02 		and	r2, r2, #30
 3928 0292 D440     		lsrs	r4, r4, r2
 3929              	.L232:
 3930              	.LVL313:
3355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3931              		.loc 1 3355 7 is_stmt 1 discriminator 4 view .LVU1205
 3932 0294 0A68     		ldr	r2, [r1]
 3933              	.LVL314:
 3934              	.LBB528:
 3935              	.LBI528:
6159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 3936              		.loc 2 6159 22 discriminator 4 view .LVU1206
 3937              	.LBB529:
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3938              		.loc 2 6175 3 discriminator 4 view .LVU1207
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3939              		.loc 2 6175 25 is_stmt 0 discriminator 4 view .LVU1208
 3940 0296 2030     		adds	r0, r0, #32
 3941              	.LVL315:
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3942              		.loc 2 6175 25 discriminator 4 view .LVU1209
 3943 0298 120D     		lsrs	r2, r2, #20
 3944              	.LVL316:
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3945              		.loc 2 6175 25 discriminator 4 view .LVU1210
 3946 029a 9200     		lsls	r2, r2, #2
 3947 029c 02F00C02 		and	r2, r2, #12
 3948              	.LVL317:
6177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3949              		.loc 2 6177 3 is_stmt 1 discriminator 4 view .LVU1211
 3950 02a0 8658     		ldr	r6, [r0, r2]
 3951 02a2 06F0F026 		and	r6, r6, #-268374016
 3952 02a6 44EA0545 		orr	r5, r4, r5, lsl #16
 3953              	.LVL318:
6177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3954              		.loc 2 6177 3 is_stmt 0 discriminator 4 view .LVU1212
 3955 02aa 3543     		orrs	r5, r5, r6
 3956 02ac 8550     		str	r5, [r0, r2]
 3957              	.LVL319:
6177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3958              		.loc 2 6177 3 discriminator 4 view .LVU1213
 3959              	.LBE529:
 3960              	.LBE528:
3357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3961              		.loc 1 3357 7 is_stmt 1 discriminator 4 view .LVU1214
3357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3962              		.loc 1 3357 26 is_stmt 0 discriminator 4 view .LVU1215
 3963 02ae 0868     		ldr	r0, [r1]
3357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3964              		.loc 1 3357 10 discriminator 4 view .LVU1216
 3965 02b0 1D4A     		ldr	r2, .L250+4
 3966 02b2 9042     		cmp	r0, r2
 3967 02b4 17D0     		beq	.L247
3382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3968              		.loc 1 3382 9 is_stmt 1 view .LVU1217
 3969 02b6 5A6D     		ldr	r2, [r3, #84]
 3970 02b8 22F48022 		bic	r2, r2, #262144
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 313


 3971 02bc 5A65     		str	r2, [r3, #84]
3388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3972              		.loc 1 3388 9 view .LVU1218
 3973 02be 1A68     		ldr	r2, [r3]
 3974              	.LVL320:
 3975              	.LBB530:
 3976              	.LBI530:
7460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3977              		.loc 2 7460 22 view .LVU1219
 3978              	.LBB531:
7462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3979              		.loc 2 7462 3 view .LVU1220
 3980 02c0 4FF40070 		mov	r0, #512
 3981 02c4 1060     		str	r0, [r2]
 3982              	.LVL321:
7462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3983              		.loc 2 7462 3 is_stmt 0 view .LVU1221
 3984              	.LBE531:
 3985              	.LBE530:
3391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 3986              		.loc 1 3391 9 is_stmt 1 view .LVU1222
3391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 3987              		.loc 1 3391 28 is_stmt 0 view .LVU1223
 3988 02c6 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 3989              		.loc 1 3391 12 view .LVU1224
 3990 02c8 012A     		cmp	r2, #1
 3991 02ca 24D0     		beq	.L248
3397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 3992              		.loc 1 3397 11 is_stmt 1 view .LVU1225
 3993 02cc 1968     		ldr	r1, [r3]
 3994              	.LVL322:
 3995              	.LBB532:
 3996              	.LBI532:
7754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
7757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
7758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
7762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
7768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
7769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 3997              		.loc 2 7772 22 view .LVU1226
 3998              	.LBB533:
7773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 314


 3999              		.loc 2 7774 3 view .LVU1227
 4000 02ce 4A68     		ldr	r2, [r1, #4]
 4001 02d0 22F40072 		bic	r2, r2, #512
 4002 02d4 4A60     		str	r2, [r1, #4]
 4003              	.LBE533:
 4004              	.LBE532:
3166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4005              		.loc 1 3166 21 is_stmt 0 view .LVU1228
 4006 02d6 0020     		movs	r0, #0
 4007              	.LBB535:
 4008              	.LBB534:
7775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4009              		.loc 2 7775 1 view .LVU1229
 4010 02d8 2DE0     		b	.L216
 4011              	.LVL323:
 4012              	.L229:
 4013              		.loc 2 7775 1 view .LVU1230
 4014              	.LBE534:
 4015              	.LBE535:
3351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 4016              		.loc 1 3351 36 discriminator 2 view .LVU1231
 4017 02da 0D69     		ldr	r5, [r1, #16]
 4018 02dc AD00     		lsls	r5, r5, #2
 4019 02de CAE7     		b	.L230
 4020              	.LVL324:
 4021              	.L231:
3352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4022              		.loc 1 3352 36 discriminator 2 view .LVU1232
 4023 02e0 4C69     		ldr	r4, [r1, #20]
 4024 02e2 A400     		lsls	r4, r4, #2
 4025 02e4 D6E7     		b	.L232
 4026              	.LVL325:
 4027              	.L247:
3360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4028              		.loc 1 3360 9 is_stmt 1 view .LVU1233
 4029 02e6 5A6D     		ldr	r2, [r3, #84]
 4030 02e8 22F40032 		bic	r2, r2, #131072
 4031 02ec 5A65     		str	r2, [r3, #84]
3366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4032              		.loc 1 3366 9 view .LVU1234
 4033 02ee 1A68     		ldr	r2, [r3]
 4034              	.LVL326:
 4035              	.LBB536:
 4036              	.LBI536:
7449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4037              		.loc 2 7449 22 view .LVU1235
 4038              	.LBB537:
7451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4039              		.loc 2 7451 3 view .LVU1236
 4040 02f0 4FF48070 		mov	r0, #256
 4041 02f4 1060     		str	r0, [r2]
 4042              	.LVL327:
7451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4043              		.loc 2 7451 3 is_stmt 0 view .LVU1237
 4044              	.LBE537:
 4045              	.LBE536:
3369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 315


 4046              		.loc 1 3369 9 is_stmt 1 view .LVU1238
3369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4047              		.loc 1 3369 28 is_stmt 0 view .LVU1239
 4048 02f6 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4049              		.loc 1 3369 12 view .LVU1240
 4050 02f8 012A     		cmp	r2, #1
 4051 02fa 06D0     		beq	.L249
3375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4052              		.loc 1 3375 11 is_stmt 1 view .LVU1241
 4053 02fc 1968     		ldr	r1, [r3]
 4054              	.LVL328:
 4055              	.LBB538:
 4056              	.LBI538:
7761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4057              		.loc 2 7761 22 view .LVU1242
 4058              	.LBB539:
7763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4059              		.loc 2 7763 3 view .LVU1243
 4060 02fe 4A68     		ldr	r2, [r1, #4]
 4061 0300 22F48072 		bic	r2, r2, #256
 4062 0304 4A60     		str	r2, [r1, #4]
 4063              	.LBE539:
 4064              	.LBE538:
3166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4065              		.loc 1 3166 21 is_stmt 0 view .LVU1244
 4066 0306 0020     		movs	r0, #0
 4067              	.LBB541:
 4068              	.LBB540:
7764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4069              		.loc 2 7764 1 view .LVU1245
 4070 0308 15E0     		b	.L216
 4071              	.LVL329:
 4072              	.L249:
7764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4073              		.loc 2 7764 1 view .LVU1246
 4074              	.LBE540:
 4075              	.LBE541:
3371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4076              		.loc 1 3371 11 is_stmt 1 view .LVU1247
 4077 030a 1968     		ldr	r1, [r3]
 4078              	.LVL330:
 4079              	.LBB542:
 4080              	.LBI542:
7609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4081              		.loc 2 7609 22 view .LVU1248
 4082              	.LBB543:
7611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4083              		.loc 2 7611 3 view .LVU1249
 4084 030c 4A68     		ldr	r2, [r1, #4]
 4085 030e 0243     		orrs	r2, r2, r0
 4086 0310 4A60     		str	r2, [r1, #4]
 4087              	.LBE543:
 4088              	.LBE542:
3166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4089              		.loc 1 3166 21 is_stmt 0 view .LVU1250
 4090 0312 0020     		movs	r0, #0
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 316


 4091              	.LBB545:
 4092              	.LBB544:
7612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4093              		.loc 2 7612 1 view .LVU1251
 4094 0314 0FE0     		b	.L216
 4095              	.LVL331:
 4096              	.L248:
7612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4097              		.loc 2 7612 1 view .LVU1252
 4098              	.LBE544:
 4099              	.LBE545:
3393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4100              		.loc 1 3393 11 is_stmt 1 view .LVU1253
 4101 0316 1968     		ldr	r1, [r3]
 4102              	.LVL332:
 4103              	.LBB546:
 4104              	.LBI546:
7620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4105              		.loc 2 7620 22 view .LVU1254
 4106              	.LBB547:
7622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4107              		.loc 2 7622 3 view .LVU1255
 4108 0318 4A68     		ldr	r2, [r1, #4]
 4109 031a 0243     		orrs	r2, r2, r0
 4110 031c 4A60     		str	r2, [r1, #4]
 4111              	.LBE547:
 4112              	.LBE546:
3166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4113              		.loc 1 3166 21 is_stmt 0 view .LVU1256
 4114 031e 0020     		movs	r0, #0
 4115              	.LBB549:
 4116              	.LBB548:
7623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4117              		.loc 2 7623 1 view .LVU1257
 4118 0320 09E0     		b	.L216
 4119              	.L251:
 4120 0322 00BF     		.align	2
 4121              	.L250:
 4122 0324 0000C07D 		.word	2109734912
 4123 0328 FFFF1700 		.word	1572863
 4124              	.LVL333:
 4125              	.L204:
7623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4126              		.loc 2 7623 1 view .LVU1258
 4127              	.LBE548:
 4128              	.LBE549:
3409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4129              		.loc 1 3409 5 is_stmt 1 view .LVU1259
 4130 032c 5A6D     		ldr	r2, [r3, #84]
 4131              	.LVL334:
3409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4132              		.loc 1 3409 5 is_stmt 0 view .LVU1260
 4133 032e 42F02002 		orr	r2, r2, #32
 4134 0332 5A65     		str	r2, [r3, #84]
3411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 4135              		.loc 1 3411 5 is_stmt 1 view .LVU1261
 4136              	.LVL335:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 317


3411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 4137              		.loc 1 3411 20 is_stmt 0 view .LVU1262
 4138 0334 0120     		movs	r0, #1
 4139              	.LVL336:
 4140              	.L216:
3414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4141              		.loc 1 3414 3 is_stmt 1 view .LVU1263
3414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4142              		.loc 1 3414 3 view .LVU1264
 4143 0336 0022     		movs	r2, #0
 4144 0338 83F85020 		strb	r2, [r3, #80]
3414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4145              		.loc 1 3414 3 view .LVU1265
3417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4146              		.loc 1 3417 3 view .LVU1266
3418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4147              		.loc 1 3418 1 is_stmt 0 view .LVU1267
 4148 033c 70BC     		pop	{r4, r5, r6}
 4149              	.LCFI16:
 4150              		.cfi_restore 6
 4151              		.cfi_restore 5
 4152              		.cfi_restore 4
 4153              		.cfi_def_cfa_offset 0
 4154 033e 7047     		bx	lr
 4155              	.LVL337:
 4156              	.L236:
3214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4157              		.loc 1 3214 3 view .LVU1268
 4158 0340 0220     		movs	r0, #2
 4159              	.LVL338:
3418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4160              		.loc 1 3418 1 view .LVU1269
 4161 0342 7047     		bx	lr
 4162              		.cfi_endproc
 4163              	.LFE1123:
 4165              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 4166              		.align	1
 4167              		.global	HAL_ADC_GetState
 4168              		.syntax unified
 4169              		.thumb
 4170              		.thumb_func
 4171              		.fpu fpv4-sp-d16
 4173              	HAL_ADC_GetState:
 4174              	.LVL339:
 4175              	.LFB1124:
3453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
 4176              		.loc 1 3453 1 is_stmt 1 view -0
 4177              		.cfi_startproc
 4178              		@ args = 0, pretend = 0, frame = 0
 4179              		@ frame_needed = 0, uses_anonymous_args = 0
 4180              		@ link register save eliminated.
3455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4181              		.loc 1 3455 3 view .LVU1271
3458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4182              		.loc 1 3458 3 view .LVU1272
3458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4183              		.loc 1 3458 14 is_stmt 0 view .LVU1273
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 318


 4184 0000 406D     		ldr	r0, [r0, #84]
 4185              	.LVL340:
3459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4186              		.loc 1 3459 1 view .LVU1274
 4187 0002 7047     		bx	lr
 4188              		.cfi_endproc
 4189              	.LFE1124:
 4191              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 4192              		.align	1
 4193              		.global	HAL_ADC_GetError
 4194              		.syntax unified
 4195              		.thumb
 4196              		.thumb_func
 4197              		.fpu fpv4-sp-d16
 4199              	HAL_ADC_GetError:
 4200              	.LVL341:
 4201              	.LFB1125:
3467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
 4202              		.loc 1 3467 1 is_stmt 1 view -0
 4203              		.cfi_startproc
 4204              		@ args = 0, pretend = 0, frame = 0
 4205              		@ frame_needed = 0, uses_anonymous_args = 0
 4206              		@ link register save eliminated.
3469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4207              		.loc 1 3469 3 view .LVU1276
3471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4208              		.loc 1 3471 3 view .LVU1277
3471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4209              		.loc 1 3471 14 is_stmt 0 view .LVU1278
 4210 0000 806D     		ldr	r0, [r0, #88]
 4211              	.LVL342:
3472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4212              		.loc 1 3472 1 view .LVU1279
 4213 0002 7047     		bx	lr
 4214              		.cfi_endproc
 4215              	.LFE1125:
 4217              		.section	.text.ADC_ConversionStop,"ax",%progbits
 4218              		.align	1
 4219              		.global	ADC_ConversionStop
 4220              		.syntax unified
 4221              		.thumb
 4222              		.thumb_func
 4223              		.fpu fpv4-sp-d16
 4225              	ADC_ConversionStop:
 4226              	.LVL343:
 4227              	.LFB1126:
3499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 4228              		.loc 1 3499 1 is_stmt 1 view -0
 4229              		.cfi_startproc
 4230              		@ args = 0, pretend = 0, frame = 0
 4231              		@ frame_needed = 0, uses_anonymous_args = 0
3499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 4232              		.loc 1 3499 1 is_stmt 0 view .LVU1281
 4233 0000 70B5     		push	{r4, r5, r6, lr}
 4234              	.LCFI17:
 4235              		.cfi_def_cfa_offset 16
 4236              		.cfi_offset 4, -16
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 319


 4237              		.cfi_offset 5, -12
 4238              		.cfi_offset 6, -8
 4239              		.cfi_offset 14, -4
 4240 0002 0446     		mov	r4, r0
3540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 4241              		.loc 1 3540 3 is_stmt 1 view .LVU1282
3541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4242              		.loc 1 3541 3 view .LVU1283
 4243              	.LVL344:
3542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
 4244              		.loc 1 3542 3 view .LVU1284
3543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 4245              		.loc 1 3543 3 view .LVU1285
3544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 4246              		.loc 1 3544 3 view .LVU1286
3545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4247              		.loc 1 3545 3 view .LVU1287
3548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 4248              		.loc 1 3548 3 view .LVU1288
3549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4249              		.loc 1 3549 3 view .LVU1289
3553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4250              		.loc 1 3553 3 view .LVU1290
3553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4251              		.loc 1 3553 44 is_stmt 0 view .LVU1291
 4252 0004 0368     		ldr	r3, [r0]
 4253              	.LVL345:
 4254              	.LBB550:
 4255              	.LBI550:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4256              		.loc 2 6851 26 is_stmt 1 view .LVU1292
 4257              	.LBB551:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4258              		.loc 2 6853 3 view .LVU1293
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4259              		.loc 2 6853 12 is_stmt 0 view .LVU1294
 4260 0006 9A68     		ldr	r2, [r3, #8]
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4261              		.loc 2 6853 74 view .LVU1295
 4262 0008 12F00402 		ands	r2, r2, #4
 4263 000c 00D0     		beq	.L255
 4264 000e 0122     		movs	r2, #1
 4265              	.L255:
 4266              	.LVL346:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4267              		.loc 2 6853 74 view .LVU1296
 4268              	.LBE551:
 4269              	.LBE550:
3554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 4270              		.loc 1 3554 3 is_stmt 1 view .LVU1297
 4271              	.LBB552:
 4272              	.LBI552:
7006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4273              		.loc 2 7006 26 view .LVU1298
 4274              	.LBB553:
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4275              		.loc 2 7008 3 view .LVU1299
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 320


7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4276              		.loc 2 7008 12 is_stmt 0 view .LVU1300
 4277 0010 9868     		ldr	r0, [r3, #8]
 4278              	.LVL347:
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4279              		.loc 2 7008 76 view .LVU1301
 4280 0012 10F00800 		ands	r0, r0, #8
 4281 0016 00D0     		beq	.L256
 4282 0018 0120     		movs	r0, #1
 4283              	.L256:
 4284              	.LVL348:
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4285              		.loc 2 7008 76 view .LVU1302
 4286              	.LBE553:
 4287              	.LBE552:
3555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4288              		.loc 1 3555 3 is_stmt 1 view .LVU1303
3555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4289              		.loc 1 3555 6 is_stmt 0 view .LVU1304
 4290 001a 0AB9     		cbnz	r2, .L257
3556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 4291              		.loc 1 3556 7 view .LVU1305
 4292 001c 0028     		cmp	r0, #0
 4293 001e 6BD0     		beq	.L269
 4294              	.L257:
3565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4295              		.loc 1 3565 5 is_stmt 1 view .LVU1306
3565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4296              		.loc 1 3565 25 is_stmt 0 view .LVU1307
 4297 0020 DA68     		ldr	r2, [r3, #12]
 4298              	.LVL349:
3565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4299              		.loc 1 3565 8 view .LVU1308
 4300 0022 12F0007F 		tst	r2, #33554432
 4301 0026 04D0     		beq	.L259
3567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 4302              		.loc 1 3567 9 view .LVU1309
 4303 0028 208B     		ldrh	r0, [r4, #24]
 4304              	.LVL350:
3567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 4305              		.loc 1 3567 9 view .LVU1310
 4306 002a 40F20112 		movw	r2, #257
 4307 002e 9042     		cmp	r0, r2
 4308 0030 4ED0     		beq	.L274
 4309              	.L259:
3594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4310              		.loc 1 3594 5 is_stmt 1 view .LVU1311
3594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4311              		.loc 1 3594 8 is_stmt 0 view .LVU1312
 4312 0032 0229     		cmp	r1, #2
 4313 0034 10D0     		beq	.L264
 4314              	.LVL351:
 4315              	.L263:
3597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4316              		.loc 1 3597 7 is_stmt 1 view .LVU1313
3597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4317              		.loc 1 3597 11 is_stmt 0 view .LVU1314
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 321


 4318 0036 2368     		ldr	r3, [r4]
 4319              	.LVL352:
 4320              	.LBB554:
 4321              	.LBI554:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4322              		.loc 2 6851 26 is_stmt 1 view .LVU1315
 4323              	.LBB555:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4324              		.loc 2 6853 3 view .LVU1316
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4325              		.loc 2 6853 12 is_stmt 0 view .LVU1317
 4326 0038 9A68     		ldr	r2, [r3, #8]
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4327              		.loc 2 6853 74 view .LVU1318
 4328 003a 12F0040F 		tst	r2, #4
 4329 003e 0BD0     		beq	.L264
 4330              	.LVL353:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4331              		.loc 2 6853 74 view .LVU1319
 4332              	.LBE555:
 4333              	.LBE554:
3599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4334              		.loc 1 3599 9 is_stmt 1 view .LVU1320
 4335              	.LBB556:
 4336              	.LBI556:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4337              		.loc 2 6708 26 view .LVU1321
 4338              	.LBB557:
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4339              		.loc 2 6710 3 view .LVU1322
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4340              		.loc 2 6710 12 is_stmt 0 view .LVU1323
 4341 0040 9A68     		ldr	r2, [r3, #8]
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4342              		.loc 2 6710 70 view .LVU1324
 4343 0042 12F0020F 		tst	r2, #2
 4344 0046 07D1     		bne	.L264
 4345              	.LVL354:
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4346              		.loc 2 6710 70 view .LVU1325
 4347              	.LBE557:
 4348              	.LBE556:
3602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4349              		.loc 1 3602 11 is_stmt 1 view .LVU1326
 4350              	.LBB558:
 4351              	.LBI558:
6835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4352              		.loc 2 6835 22 view .LVU1327
 4353              	.LBB559:
6840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4354              		.loc 2 6840 3 view .LVU1328
 4355 0048 9A68     		ldr	r2, [r3, #8]
 4356 004a 22F00042 		bic	r2, r2, #-2147483648
 4357 004e 22F03F02 		bic	r2, r2, #63
 4358 0052 42F01002 		orr	r2, r2, #16
 4359 0056 9A60     		str	r2, [r3, #8]
 4360              	.LVL355:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 322


 4361              	.L264:
6840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4362              		.loc 2 6840 3 is_stmt 0 view .LVU1329
 4363              	.LBE559:
 4364              	.LBE558:
3608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4365              		.loc 1 3608 5 is_stmt 1 view .LVU1330
3608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4366              		.loc 1 3608 8 is_stmt 0 view .LVU1331
 4367 0058 0129     		cmp	r1, #1
 4368 005a 10D0     		beq	.L265
3611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4369              		.loc 1 3611 7 is_stmt 1 view .LVU1332
3611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4370              		.loc 1 3611 11 is_stmt 0 view .LVU1333
 4371 005c 2368     		ldr	r3, [r4]
 4372              	.LVL356:
 4373              	.LBB560:
 4374              	.LBI560:
7006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4375              		.loc 2 7006 26 is_stmt 1 view .LVU1334
 4376              	.LBB561:
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4377              		.loc 2 7008 3 view .LVU1335
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4378              		.loc 2 7008 12 is_stmt 0 view .LVU1336
 4379 005e 9A68     		ldr	r2, [r3, #8]
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4380              		.loc 2 7008 76 view .LVU1337
 4381 0060 12F0080F 		tst	r2, #8
 4382 0064 0BD0     		beq	.L265
 4383              	.LVL357:
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4384              		.loc 2 7008 76 view .LVU1338
 4385              	.LBE561:
 4386              	.LBE560:
3613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4387              		.loc 1 3613 9 is_stmt 1 view .LVU1339
 4388              	.LBB562:
 4389              	.LBI562:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4390              		.loc 2 6708 26 view .LVU1340
 4391              	.LBB563:
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4392              		.loc 2 6710 3 view .LVU1341
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4393              		.loc 2 6710 12 is_stmt 0 view .LVU1342
 4394 0066 9A68     		ldr	r2, [r3, #8]
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4395              		.loc 2 6710 70 view .LVU1343
 4396 0068 12F0020F 		tst	r2, #2
 4397 006c 07D1     		bne	.L265
 4398              	.LVL358:
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4399              		.loc 2 6710 70 view .LVU1344
 4400              	.LBE563:
 4401              	.LBE562:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 323


3616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4402              		.loc 1 3616 11 is_stmt 1 view .LVU1345
 4403              	.LBB564:
 4404              	.LBI564:
6990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4405              		.loc 2 6990 22 view .LVU1346
 4406              	.LBB565:
6995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4407              		.loc 2 6995 3 view .LVU1347
 4408 006e 9A68     		ldr	r2, [r3, #8]
 4409 0070 22F00042 		bic	r2, r2, #-2147483648
 4410 0074 22F03F02 		bic	r2, r2, #63
 4411 0078 42F02002 		orr	r2, r2, #32
 4412 007c 9A60     		str	r2, [r3, #8]
 4413              	.LVL359:
 4414              	.L265:
6995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4415              		.loc 2 6995 3 is_stmt 0 view .LVU1348
 4416              	.LBE565:
 4417              	.LBE564:
3622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4418              		.loc 1 3622 5 is_stmt 1 view .LVU1349
 4419 007e 0229     		cmp	r1, #2
 4420 0080 34D0     		beq	.L271
 4421 0082 0329     		cmp	r1, #3
 4422 0084 34D1     		bne	.L272
 4423 0086 0C25     		movs	r5, #12
 4424              	.L266:
 4425              	.LVL360:
3637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4426              		.loc 1 3637 5 view .LVU1350
3637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4427              		.loc 1 3637 17 is_stmt 0 view .LVU1351
 4428 0088 FFF7FEFF 		bl	HAL_GetTick
 4429              	.LVL361:
 4430 008c 0646     		mov	r6, r0
 4431              	.LVL362:
3639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4432              		.loc 1 3639 5 is_stmt 1 view .LVU1352
 4433              	.L267:
3639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4434              		.loc 1 3639 11 view .LVU1353
3639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4435              		.loc 1 3639 17 is_stmt 0 view .LVU1354
 4436 008e 2368     		ldr	r3, [r4]
3639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4437              		.loc 1 3639 27 view .LVU1355
 4438 0090 9B68     		ldr	r3, [r3, #8]
3639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4439              		.loc 1 3639 11 view .LVU1356
 4440 0092 2B42     		tst	r3, r5
 4441 0094 2ED0     		beq	.L275
3641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4442              		.loc 1 3641 7 is_stmt 1 view .LVU1357
3641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4443              		.loc 1 3641 12 is_stmt 0 view .LVU1358
 4444 0096 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 324


 4445              	.LVL363:
3641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4446              		.loc 1 3641 26 view .LVU1359
 4447 009a 801B     		subs	r0, r0, r6
3641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4448              		.loc 1 3641 10 view .LVU1360
 4449 009c 0528     		cmp	r0, #5
 4450 009e F6D9     		bls	.L267
3644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4451              		.loc 1 3644 9 is_stmt 1 view .LVU1361
3644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4452              		.loc 1 3644 18 is_stmt 0 view .LVU1362
 4453 00a0 2368     		ldr	r3, [r4]
3644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4454              		.loc 1 3644 28 view .LVU1363
 4455 00a2 9B68     		ldr	r3, [r3, #8]
3644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4456              		.loc 1 3644 12 view .LVU1364
 4457 00a4 2B42     		tst	r3, r5
 4458 00a6 F2D0     		beq	.L267
3647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4459              		.loc 1 3647 11 is_stmt 1 view .LVU1365
 4460 00a8 636D     		ldr	r3, [r4, #84]
 4461 00aa 43F01003 		orr	r3, r3, #16
 4462 00ae 6365     		str	r3, [r4, #84]
3650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4463              		.loc 1 3650 11 view .LVU1366
 4464 00b0 A36D     		ldr	r3, [r4, #88]
 4465 00b2 43F00103 		orr	r3, r3, #1
 4466 00b6 A365     		str	r3, [r4, #88]
3652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4467              		.loc 1 3652 11 view .LVU1367
3652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4468              		.loc 1 3652 18 is_stmt 0 view .LVU1368
 4469 00b8 0120     		movs	r0, #1
 4470 00ba 1CE0     		b	.L258
 4471              	.LVL364:
 4472              	.L277:
3579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4473              		.loc 1 3579 11 is_stmt 1 view .LVU1369
 4474 00bc 636D     		ldr	r3, [r4, #84]
 4475 00be 43F01003 		orr	r3, r3, #16
 4476 00c2 6365     		str	r3, [r4, #84]
3582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4477              		.loc 1 3582 11 view .LVU1370
 4478 00c4 A36D     		ldr	r3, [r4, #88]
 4479 00c6 43F00103 		orr	r3, r3, #1
 4480 00ca A365     		str	r3, [r4, #88]
3584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4481              		.loc 1 3584 11 view .LVU1371
3584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4482              		.loc 1 3584 18 is_stmt 0 view .LVU1372
 4483 00cc 0120     		movs	r0, #1
 4484 00ce 12E0     		b	.L258
 4485              	.LVL365:
 4486              	.L274:
3541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 325


 4487              		.loc 1 3541 12 view .LVU1373
 4488 00d0 0022     		movs	r2, #0
 4489              	.LVL366:
 4490              	.L260:
3574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4491              		.loc 1 3574 13 is_stmt 1 view .LVU1374
3574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4492              		.loc 1 3574 14 is_stmt 0 view .LVU1375
 4493 00d2 1968     		ldr	r1, [r3]
3574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4494              		.loc 1 3574 13 view .LVU1376
 4495 00d4 11F0400F 		tst	r1, #64
 4496 00d8 04D1     		bne	.L276
3576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4497              		.loc 1 3576 9 is_stmt 1 view .LVU1377
3576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4498              		.loc 1 3576 12 is_stmt 0 view .LVU1378
 4499 00da 0849     		ldr	r1, .L278
 4500 00dc 8A42     		cmp	r2, r1
 4501 00de EDD8     		bhi	.L277
3586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4502              		.loc 1 3586 9 is_stmt 1 view .LVU1379
3586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4503              		.loc 1 3586 39 is_stmt 0 view .LVU1380
 4504 00e0 0132     		adds	r2, r2, #1
 4505              	.LVL367:
3586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4506              		.loc 1 3586 39 view .LVU1381
 4507 00e2 F6E7     		b	.L260
 4508              	.L276:
3590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4509              		.loc 1 3590 7 is_stmt 1 view .LVU1382
 4510 00e4 4022     		movs	r2, #64
 4511              	.LVL368:
3590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4512              		.loc 1 3590 7 is_stmt 0 view .LVU1383
 4513 00e6 1A60     		str	r2, [r3]
 4514              	.LVL369:
3594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4515              		.loc 1 3594 5 is_stmt 1 view .LVU1384
3571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4516              		.loc 1 3571 35 is_stmt 0 view .LVU1385
 4517 00e8 0121     		movs	r1, #1
 4518 00ea A4E7     		b	.L263
 4519              	.LVL370:
 4520              	.L271:
3628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
 4521              		.loc 1 3628 37 view .LVU1386
 4522 00ec 0825     		movs	r5, #8
 4523 00ee CBE7     		b	.L266
 4524              	.L272:
3632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
 4525              		.loc 1 3632 37 view .LVU1387
 4526 00f0 0425     		movs	r5, #4
 4527 00f2 C9E7     		b	.L266
 4528              	.LVL371:
 4529              	.L275:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 326


3661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4530              		.loc 1 3661 10 view .LVU1388
 4531 00f4 0020     		movs	r0, #0
 4532              	.LVL372:
 4533              	.L258:
3662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4534              		.loc 1 3662 1 view .LVU1389
 4535 00f6 70BD     		pop	{r4, r5, r6, pc}
 4536              	.LVL373:
 4537              	.L269:
3661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4538              		.loc 1 3661 10 view .LVU1390
 4539 00f8 0020     		movs	r0, #0
 4540              	.LVL374:
3661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4541              		.loc 1 3661 10 view .LVU1391
 4542 00fa FCE7     		b	.L258
 4543              	.L279:
 4544              		.align	2
 4545              	.L278:
 4546 00fc FFFF3FA3 		.word	-1556086785
 4547              		.cfi_endproc
 4548              	.LFE1126:
 4550              		.section	.text.ADC_Enable,"ax",%progbits
 4551              		.align	1
 4552              		.global	ADC_Enable
 4553              		.syntax unified
 4554              		.thumb
 4555              		.thumb_func
 4556              		.fpu fpv4-sp-d16
 4558              	ADC_Enable:
 4559              	.LVL375:
 4560              	.LFB1127:
3674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 4561              		.loc 1 3674 1 is_stmt 1 view -0
 4562              		.cfi_startproc
 4563              		@ args = 0, pretend = 0, frame = 8
 4564              		@ frame_needed = 0, uses_anonymous_args = 0
3674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 4565              		.loc 1 3674 1 is_stmt 0 view .LVU1393
 4566 0000 30B5     		push	{r4, r5, lr}
 4567              	.LCFI18:
 4568              		.cfi_def_cfa_offset 12
 4569              		.cfi_offset 4, -12
 4570              		.cfi_offset 5, -8
 4571              		.cfi_offset 14, -4
 4572 0002 83B0     		sub	sp, sp, #12
 4573              	.LCFI19:
 4574              		.cfi_def_cfa_offset 24
3675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 4575              		.loc 1 3675 3 is_stmt 1 view .LVU1394
3676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4576              		.loc 1 3676 3 view .LVU1395
3676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4577              		.loc 1 3676 17 is_stmt 0 view .LVU1396
 4578 0004 0023     		movs	r3, #0
 4579 0006 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 327


3682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4580              		.loc 1 3682 3 is_stmt 1 view .LVU1397
3682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4581              		.loc 1 3682 7 is_stmt 0 view .LVU1398
 4582 0008 0368     		ldr	r3, [r0]
 4583              	.LVL376:
 4584              	.LBB566:
 4585              	.LBI566:
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4586              		.loc 2 6697 26 is_stmt 1 view .LVU1399
 4587              	.LBB567:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4588              		.loc 2 6699 3 view .LVU1400
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4589              		.loc 2 6699 12 is_stmt 0 view .LVU1401
 4590 000a 9A68     		ldr	r2, [r3, #8]
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4591              		.loc 2 6699 68 view .LVU1402
 4592 000c 12F0010F 		tst	r2, #1
 4593 0010 52D1     		bne	.L289
 4594 0012 0446     		mov	r4, r0
 4595              	.LVL377:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4596              		.loc 2 6699 68 view .LVU1403
 4597              	.LBE567:
 4598              	.LBE566:
3688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 4599              		.loc 1 3688 5 is_stmt 1 view .LVU1404
3688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 4600              		.loc 1 3688 24 is_stmt 0 view .LVU1405
 4601 0014 9968     		ldr	r1, [r3, #8]
3688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 4602              		.loc 1 3688 8 view .LVU1406
 4603 0016 2A4A     		ldr	r2, .L294
 4604 0018 1142     		tst	r1, r2
 4605 001a 16D1     		bne	.L291
3701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4606              		.loc 1 3701 5 is_stmt 1 view .LVU1407
 4607              	.LVL378:
 4608              	.LBB568:
 4609              	.LBI568:
6658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4610              		.loc 2 6658 22 view .LVU1408
 4611              	.LBB569:
6663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4612              		.loc 2 6663 3 view .LVU1409
 4613 001c 9A68     		ldr	r2, [r3, #8]
 4614 001e 22F00042 		bic	r2, r2, #-2147483648
 4615 0022 22F03F02 		bic	r2, r2, #63
 4616 0026 42F00102 		orr	r2, r2, #1
 4617 002a 9A60     		str	r2, [r3, #8]
 4618              	.LVL379:
6663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4619              		.loc 2 6663 3 is_stmt 0 view .LVU1410
 4620              	.LBE569:
 4621              	.LBE568:
3703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 328


 4622              		.loc 1 3703 5 is_stmt 1 view .LVU1411
 4623              	.LBB570:
 4624              	.LBI570:
2583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4625              		.loc 2 2583 26 view .LVU1412
 4626              	.LBB571:
2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4627              		.loc 2 2585 3 view .LVU1413
2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4628              		.loc 2 2585 21 is_stmt 0 view .LVU1414
 4629 002c 254B     		ldr	r3, .L294+4
 4630 002e 9B68     		ldr	r3, [r3, #8]
 4631              	.LVL380:
2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4632              		.loc 2 2585 21 view .LVU1415
 4633              	.LBE571:
 4634              	.LBE570:
3703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4635              		.loc 1 3703 7 view .LVU1416
 4636 0030 13F4000F 		tst	r3, #8388608
 4637 0034 19D0     		beq	.L283
3710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
 4638              		.loc 1 3710 7 is_stmt 1 view .LVU1417
3710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
 4639              		.loc 1 3710 94 is_stmt 0 view .LVU1418
 4640 0036 244B     		ldr	r3, .L294+8
 4641 0038 1B68     		ldr	r3, [r3]
 4642 003a 9B09     		lsrs	r3, r3, #6
 4643 003c 234A     		ldr	r2, .L294+12
 4644 003e A2FB0323 		umull	r2, r3, r2, r3
 4645 0042 9B09     		lsrs	r3, r3, #6
3710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
 4646              		.loc 1 3710 74 view .LVU1419
 4647 0044 0133     		adds	r3, r3, #1
3710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
 4648              		.loc 1 3710 23 view .LVU1420
 4649 0046 0193     		str	r3, [sp, #4]
3711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4650              		.loc 1 3711 7 is_stmt 1 view .LVU1421
3711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4651              		.loc 1 3711 12 is_stmt 0 view .LVU1422
 4652 0048 0CE0     		b	.L284
 4653              	.L291:
3692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4654              		.loc 1 3692 7 is_stmt 1 view .LVU1423
 4655 004a 436D     		ldr	r3, [r0, #84]
 4656 004c 43F01003 		orr	r3, r3, #16
 4657 0050 4365     		str	r3, [r0, #84]
3695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4658              		.loc 1 3695 7 view .LVU1424
 4659 0052 836D     		ldr	r3, [r0, #88]
 4660 0054 43F00103 		orr	r3, r3, #1
 4661 0058 8365     		str	r3, [r0, #88]
3697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4662              		.loc 1 3697 7 view .LVU1425
3697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4663              		.loc 1 3697 14 is_stmt 0 view .LVU1426
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 329


 4664 005a 0120     		movs	r0, #1
 4665              	.LVL381:
3697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4666              		.loc 1 3697 14 view .LVU1427
 4667 005c 2DE0     		b	.L281
 4668              	.LVL382:
 4669              	.L285:
3713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4670              		.loc 1 3713 9 is_stmt 1 view .LVU1428
3713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4671              		.loc 1 3713 24 is_stmt 0 view .LVU1429
 4672 005e 019B     		ldr	r3, [sp, #4]
 4673 0060 013B     		subs	r3, r3, #1
 4674 0062 0193     		str	r3, [sp, #4]
 4675              	.L284:
3711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4676              		.loc 1 3711 12 is_stmt 1 view .LVU1430
3711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4677              		.loc 1 3711 29 is_stmt 0 view .LVU1431
 4678 0064 019B     		ldr	r3, [sp, #4]
3711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4679              		.loc 1 3711 12 view .LVU1432
 4680 0066 002B     		cmp	r3, #0
 4681 0068 F9D1     		bne	.L285
 4682              	.L283:
3724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 4683              		.loc 1 3724 7 is_stmt 1 view .LVU1433
3724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 4684              		.loc 1 3724 19 is_stmt 0 view .LVU1434
 4685 006a FFF7FEFF 		bl	HAL_GetTick
 4686              	.LVL383:
3724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 4687              		.loc 1 3724 19 view .LVU1435
 4688 006e 0546     		mov	r5, r0
 4689              	.LVL384:
3726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4690              		.loc 1 3726 7 is_stmt 1 view .LVU1436
3726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4691              		.loc 1 3726 12 is_stmt 0 view .LVU1437
 4692 0070 04E0     		b	.L286
 4693              	.LVL385:
 4694              	.L287:
3741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4695              		.loc 1 3741 9 is_stmt 1 view .LVU1438
3741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4696              		.loc 1 3741 13 is_stmt 0 view .LVU1439
 4697 0072 FFF7FEFF 		bl	HAL_GetTick
 4698              	.LVL386:
3741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4699              		.loc 1 3741 27 view .LVU1440
 4700 0076 431B     		subs	r3, r0, r5
3741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4701              		.loc 1 3741 11 view .LVU1441
 4702 0078 022B     		cmp	r3, #2
 4703 007a 11D8     		bhi	.L292
 4704              	.L286:
3726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 330


 4705              		.loc 1 3726 12 is_stmt 1 view .LVU1442
3726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4706              		.loc 1 3726 13 is_stmt 0 view .LVU1443
 4707 007c 2368     		ldr	r3, [r4]
 4708 007e 1A68     		ldr	r2, [r3]
3726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4709              		.loc 1 3726 12 view .LVU1444
 4710 0080 12F0010F 		tst	r2, #1
 4711 0084 16D1     		bne	.L293
3736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4712              		.loc 1 3736 9 is_stmt 1 view .LVU1445
 4713              	.LVL387:
 4714              	.LBB572:
 4715              	.LBI572:
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4716              		.loc 2 6697 26 view .LVU1446
 4717              	.LBB573:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4718              		.loc 2 6699 3 view .LVU1447
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4719              		.loc 2 6699 12 is_stmt 0 view .LVU1448
 4720 0086 9A68     		ldr	r2, [r3, #8]
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4721              		.loc 2 6699 68 view .LVU1449
 4722 0088 12F0010F 		tst	r2, #1
 4723 008c F1D1     		bne	.L287
 4724              	.LVL388:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4725              		.loc 2 6699 68 view .LVU1450
 4726              	.LBE573:
 4727              	.LBE572:
3738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4728              		.loc 1 3738 11 is_stmt 1 view .LVU1451
 4729              	.LBB574:
 4730              	.LBI574:
6658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4731              		.loc 2 6658 22 view .LVU1452
 4732              	.LBB575:
6663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4733              		.loc 2 6663 3 view .LVU1453
 4734 008e 9A68     		ldr	r2, [r3, #8]
 4735 0090 22F00042 		bic	r2, r2, #-2147483648
 4736 0094 22F03F02 		bic	r2, r2, #63
 4737 0098 42F00102 		orr	r2, r2, #1
 4738 009c 9A60     		str	r2, [r3, #8]
6666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4739              		.loc 2 6666 1 is_stmt 0 view .LVU1454
 4740 009e E8E7     		b	.L287
 4741              	.LVL389:
 4742              	.L292:
6666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4743              		.loc 2 6666 1 view .LVU1455
 4744              	.LBE575:
 4745              	.LBE574:
3744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
 4746              		.loc 1 3744 11 is_stmt 1 view .LVU1456
 4747 00a0 636D     		ldr	r3, [r4, #84]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 331


 4748 00a2 43F01003 		orr	r3, r3, #16
 4749 00a6 6365     		str	r3, [r4, #84]
3747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
 4750              		.loc 1 3747 11 view .LVU1457
 4751 00a8 A36D     		ldr	r3, [r4, #88]
 4752 00aa 43F00103 		orr	r3, r3, #1
 4753 00ae A365     		str	r3, [r4, #88]
3749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4754              		.loc 1 3749 11 view .LVU1458
3749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4755              		.loc 1 3749 18 is_stmt 0 view .LVU1459
 4756 00b0 0120     		movs	r0, #1
 4757 00b2 02E0     		b	.L281
 4758              	.L293:
3756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4759              		.loc 1 3756 10 view .LVU1460
 4760 00b4 0020     		movs	r0, #0
 4761 00b6 00E0     		b	.L281
 4762              	.LVL390:
 4763              	.L289:
3756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4764              		.loc 1 3756 10 view .LVU1461
 4765 00b8 0020     		movs	r0, #0
 4766              	.LVL391:
 4767              	.L281:
3757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4768              		.loc 1 3757 1 view .LVU1462
 4769 00ba 03B0     		add	sp, sp, #12
 4770              	.LCFI20:
 4771              		.cfi_def_cfa_offset 12
 4772              		@ sp needed
 4773 00bc 30BD     		pop	{r4, r5, pc}
 4774              	.L295:
 4775 00be 00BF     		.align	2
 4776              	.L294:
 4777 00c0 3F000080 		.word	-2147483585
 4778 00c4 00030450 		.word	1342440192
 4779 00c8 00000000 		.word	SystemCoreClock
 4780 00cc 632D3E05 		.word	87960931
 4781              		.cfi_endproc
 4782              	.LFE1127:
 4784              		.section	.text.HAL_ADC_Start,"ax",%progbits
 4785              		.align	1
 4786              		.global	HAL_ADC_Start
 4787              		.syntax unified
 4788              		.thumb
 4789              		.thumb_func
 4790              		.fpu fpv4-sp-d16
 4792              	HAL_ADC_Start:
 4793              	.LVL392:
 4794              	.LFB1108:
1517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4795              		.loc 1 1517 1 is_stmt 1 view -0
 4796              		.cfi_startproc
 4797              		@ args = 0, pretend = 0, frame = 0
 4798              		@ frame_needed = 0, uses_anonymous_args = 0
1518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 332


 4799              		.loc 1 1518 3 view .LVU1464
1521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4800              		.loc 1 1521 3 view .LVU1465
1524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4801              		.loc 1 1524 3 view .LVU1466
1524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4802              		.loc 1 1524 7 is_stmt 0 view .LVU1467
 4803 0000 0368     		ldr	r3, [r0]
 4804              	.LVL393:
 4805              	.LBB576:
 4806              	.LBI576:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4807              		.loc 2 6851 26 is_stmt 1 view .LVU1468
 4808              	.LBB577:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4809              		.loc 2 6853 3 view .LVU1469
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4810              		.loc 2 6853 12 is_stmt 0 view .LVU1470
 4811 0002 9B68     		ldr	r3, [r3, #8]
 4812              	.LVL394:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4813              		.loc 2 6853 74 view .LVU1471
 4814 0004 13F0040F 		tst	r3, #4
 4815 0008 32D1     		bne	.L301
 4816              	.LBE577:
 4817              	.LBE576:
1517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4818              		.loc 1 1517 1 view .LVU1472
 4819 000a 10B5     		push	{r4, lr}
 4820              	.LCFI21:
 4821              		.cfi_def_cfa_offset 8
 4822              		.cfi_offset 4, -8
 4823              		.cfi_offset 14, -4
 4824 000c 0446     		mov	r4, r0
 4825              	.LVL395:
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4826              		.loc 1 1527 5 is_stmt 1 view .LVU1473
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4827              		.loc 1 1527 5 view .LVU1474
 4828 000e 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4829 0012 012B     		cmp	r3, #1
 4830 0014 2ED0     		beq	.L302
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4831              		.loc 1 1527 5 discriminator 2 view .LVU1475
 4832 0016 0123     		movs	r3, #1
 4833 0018 80F85030 		strb	r3, [r0, #80]
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4834              		.loc 1 1527 5 discriminator 2 view .LVU1476
1530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4835              		.loc 1 1530 5 discriminator 2 view .LVU1477
1530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4836              		.loc 1 1530 22 is_stmt 0 discriminator 2 view .LVU1478
 4837 001c FFF7FEFF 		bl	ADC_Enable
 4838              	.LVL396:
1533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4839              		.loc 1 1533 5 is_stmt 1 discriminator 2 view .LVU1479
1533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 333


 4840              		.loc 1 1533 8 is_stmt 0 discriminator 2 view .LVU1480
 4841 0020 10BB     		cbnz	r0, .L298
1538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4842              		.loc 1 1538 7 is_stmt 1 view .LVU1481
 4843 0022 636D     		ldr	r3, [r4, #84]
 4844 0024 23F47063 		bic	r3, r3, #3840
 4845 0028 23F00103 		bic	r3, r3, #1
 4846 002c 43F48073 		orr	r3, r3, #256
 4847 0030 6365     		str	r3, [r4, #84]
1548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4848              		.loc 1 1548 7 view .LVU1482
1548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4849              		.loc 1 1548 11 is_stmt 0 view .LVU1483
 4850 0032 636D     		ldr	r3, [r4, #84]
1548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4851              		.loc 1 1548 10 view .LVU1484
 4852 0034 13F4805F 		tst	r3, #4096
 4853 0038 13D0     		beq	.L299
1551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4854              		.loc 1 1551 9 is_stmt 1 view .LVU1485
 4855 003a A36D     		ldr	r3, [r4, #88]
 4856 003c 23F00603 		bic	r3, r3, #6
 4857 0040 A365     		str	r3, [r4, #88]
 4858              	.L300:
1562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4859              		.loc 1 1562 7 view .LVU1486
 4860 0042 2368     		ldr	r3, [r4]
 4861 0044 1C22     		movs	r2, #28
 4862 0046 1A60     		str	r2, [r3]
1567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4863              		.loc 1 1567 7 view .LVU1487
1567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4864              		.loc 1 1567 7 view .LVU1488
 4865 0048 0023     		movs	r3, #0
 4866 004a 84F85030 		strb	r3, [r4, #80]
1567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4867              		.loc 1 1567 7 view .LVU1489
1574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4868              		.loc 1 1574 7 view .LVU1490
 4869 004e 2268     		ldr	r2, [r4]
 4870              	.LVL397:
 4871              	.LBB578:
 4872              	.LBI578:
6815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4873              		.loc 2 6815 22 view .LVU1491
 4874              	.LBB579:
6820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4875              		.loc 2 6820 3 view .LVU1492
 4876 0050 9368     		ldr	r3, [r2, #8]
 4877 0052 23F00043 		bic	r3, r3, #-2147483648
 4878 0056 23F03F03 		bic	r3, r3, #63
 4879 005a 43F00403 		orr	r3, r3, #4
 4880 005e 9360     		str	r3, [r2, #8]
 4881              	.LVL398:
 4882              	.L297:
6820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4883              		.loc 2 6820 3 is_stmt 0 view .LVU1493
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 334


 4884              	.LBE579:
 4885              	.LBE578:
1589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4886              		.loc 1 1589 1 view .LVU1494
 4887 0060 10BD     		pop	{r4, pc}
 4888              	.LVL399:
 4889              	.L299:
1556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4890              		.loc 1 1556 9 is_stmt 1 view .LVU1495
 4891 0062 0023     		movs	r3, #0
 4892 0064 A365     		str	r3, [r4, #88]
 4893 0066 ECE7     		b	.L300
 4894              	.L298:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4895              		.loc 1 1579 7 view .LVU1496
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4896              		.loc 1 1579 7 view .LVU1497
 4897 0068 0023     		movs	r3, #0
 4898 006a 84F85030 		strb	r3, [r4, #80]
 4899 006e F7E7     		b	.L297
 4900              	.LVL400:
 4901              	.L301:
 4902              	.LCFI22:
 4903              		.cfi_def_cfa_offset 0
 4904              		.cfi_restore 4
 4905              		.cfi_restore 14
1584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 4906              		.loc 1 1584 20 is_stmt 0 view .LVU1498
 4907 0070 0220     		movs	r0, #2
 4908              	.LVL401:
1589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4909              		.loc 1 1589 1 view .LVU1499
 4910 0072 7047     		bx	lr
 4911              	.LVL402:
 4912              	.L302:
 4913              	.LCFI23:
 4914              		.cfi_def_cfa_offset 8
 4915              		.cfi_offset 4, -8
 4916              		.cfi_offset 14, -4
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4917              		.loc 1 1527 5 view .LVU1500
 4918 0074 0220     		movs	r0, #2
 4919              	.LVL403:
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4920              		.loc 1 1527 5 view .LVU1501
 4921 0076 F3E7     		b	.L297
 4922              		.cfi_endproc
 4923              	.LFE1108:
 4925              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 4926              		.align	1
 4927              		.global	HAL_ADC_Start_IT
 4928              		.syntax unified
 4929              		.thumb
 4930              		.thumb_func
 4931              		.fpu fpv4-sp-d16
 4933              	HAL_ADC_Start_IT:
 4934              	.LVL404:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 335


 4935              	.LFB1112:
1947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4936              		.loc 1 1947 1 is_stmt 1 view -0
 4937              		.cfi_startproc
 4938              		@ args = 0, pretend = 0, frame = 0
 4939              		@ frame_needed = 0, uses_anonymous_args = 0
1948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4940              		.loc 1 1948 3 view .LVU1503
1951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4941              		.loc 1 1951 3 view .LVU1504
1954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4942              		.loc 1 1954 3 view .LVU1505
1954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4943              		.loc 1 1954 7 is_stmt 0 view .LVU1506
 4944 0000 0368     		ldr	r3, [r0]
 4945              	.LVL405:
 4946              	.LBB580:
 4947              	.LBI580:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4948              		.loc 2 6851 26 is_stmt 1 view .LVU1507
 4949              	.LBB581:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4950              		.loc 2 6853 3 view .LVU1508
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4951              		.loc 2 6853 12 is_stmt 0 view .LVU1509
 4952 0002 9B68     		ldr	r3, [r3, #8]
 4953              	.LVL406:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4954              		.loc 2 6853 74 view .LVU1510
 4955 0004 13F0040F 		tst	r3, #4
 4956 0008 4DD1     		bne	.L315
 4957              	.LBE581:
 4958              	.LBE580:
1947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4959              		.loc 1 1947 1 view .LVU1511
 4960 000a 10B5     		push	{r4, lr}
 4961              	.LCFI24:
 4962              		.cfi_def_cfa_offset 8
 4963              		.cfi_offset 4, -8
 4964              		.cfi_offset 14, -4
 4965 000c 0446     		mov	r4, r0
 4966              	.LVL407:
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4967              		.loc 1 1957 5 is_stmt 1 view .LVU1512
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4968              		.loc 1 1957 5 view .LVU1513
 4969 000e 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4970 0012 012B     		cmp	r3, #1
 4971 0014 49D0     		beq	.L316
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4972              		.loc 1 1957 5 discriminator 2 view .LVU1514
 4973 0016 0123     		movs	r3, #1
 4974 0018 80F85030 		strb	r3, [r0, #80]
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4975              		.loc 1 1957 5 discriminator 2 view .LVU1515
1960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4976              		.loc 1 1960 5 discriminator 2 view .LVU1516
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 336


1960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4977              		.loc 1 1960 22 is_stmt 0 discriminator 2 view .LVU1517
 4978 001c FFF7FEFF 		bl	ADC_Enable
 4979              	.LVL408:
1963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4980              		.loc 1 1963 5 is_stmt 1 discriminator 2 view .LVU1518
1963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4981              		.loc 1 1963 8 is_stmt 0 discriminator 2 view .LVU1519
 4982 0020 0028     		cmp	r0, #0
 4983 0022 3CD1     		bne	.L309
1968:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4984              		.loc 1 1968 7 is_stmt 1 view .LVU1520
 4985 0024 636D     		ldr	r3, [r4, #84]
 4986 0026 23F47063 		bic	r3, r3, #3840
 4987 002a 23F00103 		bic	r3, r3, #1
 4988 002e 43F48073 		orr	r3, r3, #256
 4989 0032 6365     		str	r3, [r4, #84]
1978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4990              		.loc 1 1978 7 view .LVU1521
1978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4991              		.loc 1 1978 16 is_stmt 0 view .LVU1522
 4992 0034 636D     		ldr	r3, [r4, #84]
1978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4993              		.loc 1 1978 10 view .LVU1523
 4994 0036 13F4805F 		tst	r3, #4096
 4995 003a 27D0     		beq	.L310
1981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4996              		.loc 1 1981 9 is_stmt 1 view .LVU1524
 4997 003c A36D     		ldr	r3, [r4, #88]
 4998 003e 23F00603 		bic	r3, r3, #6
 4999 0042 A365     		str	r3, [r4, #88]
 5000              	.L311:
1992:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5001              		.loc 1 1992 7 view .LVU1525
 5002 0044 2368     		ldr	r3, [r4]
 5003 0046 1C22     		movs	r2, #28
 5004 0048 1A60     		str	r2, [r3]
1997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5005              		.loc 1 1997 7 view .LVU1526
1997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5006              		.loc 1 1997 7 view .LVU1527
 5007 004a 0023     		movs	r3, #0
 5008 004c 84F85030 		strb	r3, [r4, #80]
1997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5009              		.loc 1 1997 7 view .LVU1528
2000:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5010              		.loc 1 2000 7 view .LVU1529
 5011 0050 2268     		ldr	r2, [r4]
 5012 0052 5368     		ldr	r3, [r2, #4]
 5013 0054 23F01C03 		bic	r3, r3, #28
 5014 0058 5360     		str	r3, [r2, #4]
2003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5015              		.loc 1 2003 7 view .LVU1530
2003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5016              		.loc 1 2003 25 is_stmt 0 view .LVU1531
 5017 005a 6369     		ldr	r3, [r4, #20]
2003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 337


 5018              		.loc 1 2003 7 view .LVU1532
 5019 005c 082B     		cmp	r3, #8
 5020 005e 18D0     		beq	.L321
2010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 5021              		.loc 1 2010 11 is_stmt 1 view .LVU1533
 5022 0060 2268     		ldr	r2, [r4]
 5023 0062 5368     		ldr	r3, [r2, #4]
 5024 0064 43F00403 		orr	r3, r3, #4
 5025 0068 5360     		str	r3, [r2, #4]
2011:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5026              		.loc 1 2011 11 view .LVU1534
 5027              	.L313:
2018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5028              		.loc 1 2018 7 view .LVU1535
2018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5029              		.loc 1 2018 21 is_stmt 0 view .LVU1536
 5030 006a 636B     		ldr	r3, [r4, #52]
2018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5031              		.loc 1 2018 10 view .LVU1537
 5032 006c 23B9     		cbnz	r3, .L314
2020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5033              		.loc 1 2020 9 is_stmt 1 view .LVU1538
 5034 006e 2268     		ldr	r2, [r4]
 5035 0070 5368     		ldr	r3, [r2, #4]
 5036 0072 43F01003 		orr	r3, r3, #16
 5037 0076 5360     		str	r3, [r2, #4]
 5038              	.L314:
2028:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5039              		.loc 1 2028 7 view .LVU1539
 5040 0078 2268     		ldr	r2, [r4]
 5041              	.LVL409:
 5042              	.LBB582:
 5043              	.LBI582:
6815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5044              		.loc 2 6815 22 view .LVU1540
 5045              	.LBB583:
6820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5046              		.loc 2 6820 3 view .LVU1541
 5047 007a 9368     		ldr	r3, [r2, #8]
 5048 007c 23F00043 		bic	r3, r3, #-2147483648
 5049 0080 23F03F03 		bic	r3, r3, #63
 5050 0084 43F00403 		orr	r3, r3, #4
 5051 0088 9360     		str	r3, [r2, #8]
 5052              	.LVL410:
 5053              	.L308:
6820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5054              		.loc 2 6820 3 is_stmt 0 view .LVU1542
 5055              	.LBE583:
 5056              	.LBE582:
2044:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5057              		.loc 1 2044 1 view .LVU1543
 5058 008a 10BD     		pop	{r4, pc}
 5059              	.LVL411:
 5060              	.L310:
1986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5061              		.loc 1 1986 9 is_stmt 1 view .LVU1544
 5062 008c 0023     		movs	r3, #0
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 338


 5063 008e A365     		str	r3, [r4, #88]
 5064 0090 D8E7     		b	.L311
 5065              	.L321:
2006:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 5066              		.loc 1 2006 11 view .LVU1545
 5067 0092 2268     		ldr	r2, [r4]
 5068 0094 5368     		ldr	r3, [r2, #4]
 5069 0096 43F00803 		orr	r3, r3, #8
 5070 009a 5360     		str	r3, [r2, #4]
2007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 5071              		.loc 1 2007 11 view .LVU1546
 5072 009c E5E7     		b	.L313
 5073              	.L309:
2033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5074              		.loc 1 2033 7 view .LVU1547
2033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5075              		.loc 1 2033 7 view .LVU1548
 5076 009e 0023     		movs	r3, #0
 5077 00a0 84F85030 		strb	r3, [r4, #80]
 5078 00a4 F1E7     		b	.L308
 5079              	.LVL412:
 5080              	.L315:
 5081              	.LCFI25:
 5082              		.cfi_def_cfa_offset 0
 5083              		.cfi_restore 4
 5084              		.cfi_restore 14
2039:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 5085              		.loc 1 2039 20 is_stmt 0 view .LVU1549
 5086 00a6 0220     		movs	r0, #2
 5087              	.LVL413:
2044:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5088              		.loc 1 2044 1 view .LVU1550
 5089 00a8 7047     		bx	lr
 5090              	.LVL414:
 5091              	.L316:
 5092              	.LCFI26:
 5093              		.cfi_def_cfa_offset 8
 5094              		.cfi_offset 4, -8
 5095              		.cfi_offset 14, -4
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5096              		.loc 1 1957 5 view .LVU1551
 5097 00aa 0220     		movs	r0, #2
 5098              	.LVL415:
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5099              		.loc 1 1957 5 view .LVU1552
 5100 00ac EDE7     		b	.L308
 5101              		.cfi_endproc
 5102              	.LFE1112:
 5104              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 5105              		.align	1
 5106              		.global	HAL_ADC_Start_DMA
 5107              		.syntax unified
 5108              		.thumb
 5109              		.thumb_func
 5110              		.fpu fpv4-sp-d16
 5112              	HAL_ADC_Start_DMA:
 5113              	.LVL416:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 339


 5114              	.LFB1114:
2115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5115              		.loc 1 2115 1 is_stmt 1 view -0
 5116              		.cfi_startproc
 5117              		@ args = 0, pretend = 0, frame = 0
 5118              		@ frame_needed = 0, uses_anonymous_args = 0
2116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5119              		.loc 1 2116 3 view .LVU1554
2119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5120              		.loc 1 2119 3 view .LVU1555
2122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5121              		.loc 1 2122 3 view .LVU1556
2122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5122              		.loc 1 2122 7 is_stmt 0 view .LVU1557
 5123 0000 0368     		ldr	r3, [r0]
 5124              	.LVL417:
 5125              	.LBB584:
 5126              	.LBI584:
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5127              		.loc 2 6851 26 is_stmt 1 view .LVU1558
 5128              	.LBB585:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5129              		.loc 2 6853 3 view .LVU1559
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5130              		.loc 2 6853 12 is_stmt 0 view .LVU1560
 5131 0002 9B68     		ldr	r3, [r3, #8]
 5132              	.LVL418:
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5133              		.loc 2 6853 74 view .LVU1561
 5134 0004 13F0040F 		tst	r3, #4
 5135 0008 4FD1     		bne	.L327
 5136              	.LBE585:
 5137              	.LBE584:
2115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5138              		.loc 1 2115 1 view .LVU1562
 5139 000a 70B5     		push	{r4, r5, r6, lr}
 5140              	.LCFI27:
 5141              		.cfi_def_cfa_offset 16
 5142              		.cfi_offset 4, -16
 5143              		.cfi_offset 5, -12
 5144              		.cfi_offset 6, -8
 5145              		.cfi_offset 14, -4
 5146 000c 0446     		mov	r4, r0
 5147 000e 0E46     		mov	r6, r1
 5148 0010 1546     		mov	r5, r2
 5149              	.LVL419:
2125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5150              		.loc 1 2125 5 is_stmt 1 view .LVU1563
2125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5151              		.loc 1 2125 5 view .LVU1564
 5152 0012 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5153 0016 012B     		cmp	r3, #1
 5154 0018 49D0     		beq	.L328
2125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5155              		.loc 1 2125 5 discriminator 2 view .LVU1565
 5156 001a 0123     		movs	r3, #1
 5157 001c 80F85030 		strb	r3, [r0, #80]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 340


2125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5158              		.loc 1 2125 5 discriminator 2 view .LVU1566
2128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5159              		.loc 1 2128 7 discriminator 2 view .LVU1567
2128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5160              		.loc 1 2128 24 is_stmt 0 discriminator 2 view .LVU1568
 5161 0020 FFF7FEFF 		bl	ADC_Enable
 5162              	.LVL420:
2131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5163              		.loc 1 2131 7 is_stmt 1 discriminator 2 view .LVU1569
2131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5164              		.loc 1 2131 10 is_stmt 0 discriminator 2 view .LVU1570
 5165 0024 0028     		cmp	r0, #0
 5166 0026 3CD1     		bne	.L324
2136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5167              		.loc 1 2136 9 is_stmt 1 view .LVU1571
 5168 0028 636D     		ldr	r3, [r4, #84]
 5169 002a 23F47063 		bic	r3, r3, #3840
 5170 002e 23F00103 		bic	r3, r3, #1
 5171 0032 43F48073 		orr	r3, r3, #256
 5172 0036 6365     		str	r3, [r4, #84]
2145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5173              		.loc 1 2145 9 view .LVU1572
2145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5174              		.loc 1 2145 18 is_stmt 0 view .LVU1573
 5175 0038 636D     		ldr	r3, [r4, #84]
2145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5176              		.loc 1 2145 12 view .LVU1574
 5177 003a 13F4805F 		tst	r3, #4096
 5178 003e 2DD0     		beq	.L325
2148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 5179              		.loc 1 2148 11 is_stmt 1 view .LVU1575
 5180 0040 A36D     		ldr	r3, [r4, #88]
 5181 0042 23F00603 		bic	r3, r3, #6
 5182 0046 A365     		str	r3, [r4, #88]
 5183              	.L326:
2158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5184              		.loc 1 2158 9 view .LVU1576
2158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5185              		.loc 1 2158 13 is_stmt 0 view .LVU1577
 5186 0048 E36C     		ldr	r3, [r4, #76]
2158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5187              		.loc 1 2158 44 view .LVU1578
 5188 004a 1A4A     		ldr	r2, .L333
 5189 004c DA62     		str	r2, [r3, #44]
2161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5190              		.loc 1 2161 9 is_stmt 1 view .LVU1579
2161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5191              		.loc 1 2161 13 is_stmt 0 view .LVU1580
 5192 004e E36C     		ldr	r3, [r4, #76]
2161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5193              		.loc 1 2161 48 view .LVU1581
 5194 0050 194A     		ldr	r2, .L333+4
 5195 0052 1A63     		str	r2, [r3, #48]
2164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5196              		.loc 1 2164 9 is_stmt 1 view .LVU1582
2164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 341


 5197              		.loc 1 2164 13 is_stmt 0 view .LVU1583
 5198 0054 E36C     		ldr	r3, [r4, #76]
2164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5199              		.loc 1 2164 45 view .LVU1584
 5200 0056 194A     		ldr	r2, .L333+8
 5201 0058 5A63     		str	r2, [r3, #52]
2173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5202              		.loc 1 2173 9 is_stmt 1 view .LVU1585
 5203 005a 2368     		ldr	r3, [r4]
 5204 005c 1C22     		movs	r2, #28
 5205 005e 1A60     		str	r2, [r3]
2178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5206              		.loc 1 2178 9 view .LVU1586
2178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5207              		.loc 1 2178 9 view .LVU1587
 5208 0060 0023     		movs	r3, #0
 5209 0062 84F85030 		strb	r3, [r4, #80]
2178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5210              		.loc 1 2178 9 view .LVU1588
2183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5211              		.loc 1 2183 9 view .LVU1589
 5212 0066 2268     		ldr	r2, [r4]
 5213 0068 5368     		ldr	r3, [r2, #4]
 5214 006a 43F01003 		orr	r3, r3, #16
 5215 006e 5360     		str	r3, [r2, #4]
2189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 5216              		.loc 1 2189 9 view .LVU1590
 5217 0070 2268     		ldr	r2, [r4]
 5218 0072 D368     		ldr	r3, [r2, #12]
 5219 0074 43F00103 		orr	r3, r3, #1
 5220 0078 D360     		str	r3, [r2, #12]
2193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5221              		.loc 1 2193 9 view .LVU1591
2193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5222              		.loc 1 2193 76 is_stmt 0 view .LVU1592
 5223 007a 2168     		ldr	r1, [r4]
2193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5224              		.loc 1 2193 26 view .LVU1593
 5225 007c 2B46     		mov	r3, r5
 5226 007e 3246     		mov	r2, r6
 5227 0080 4031     		adds	r1, r1, #64
 5228 0082 E06C     		ldr	r0, [r4, #76]
 5229              	.LVL421:
2193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5230              		.loc 1 2193 26 view .LVU1594
 5231 0084 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5232              	.LVL422:
2200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5233              		.loc 1 2200 9 is_stmt 1 view .LVU1595
 5234 0088 2268     		ldr	r2, [r4]
 5235              	.LVL423:
 5236              	.LBB586:
 5237              	.LBI586:
6815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5238              		.loc 2 6815 22 view .LVU1596
 5239              	.LBB587:
6820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 342


 5240              		.loc 2 6820 3 view .LVU1597
 5241 008a 9368     		ldr	r3, [r2, #8]
 5242 008c 23F00043 		bic	r3, r3, #-2147483648
 5243 0090 23F03F03 		bic	r3, r3, #63
 5244 0094 43F00403 		orr	r3, r3, #4
 5245 0098 9360     		str	r3, [r2, #8]
 5246              	.LVL424:
 5247              	.L323:
6820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5248              		.loc 2 6820 3 is_stmt 0 view .LVU1598
 5249              	.LBE587:
 5250              	.LBE586:
2215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5251              		.loc 1 2215 1 view .LVU1599
 5252 009a 70BD     		pop	{r4, r5, r6, pc}
 5253              	.LVL425:
 5254              	.L325:
2153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 5255              		.loc 1 2153 11 is_stmt 1 view .LVU1600
 5256 009c 0023     		movs	r3, #0
 5257 009e A365     		str	r3, [r4, #88]
 5258 00a0 D2E7     		b	.L326
 5259              	.L324:
2205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5260              		.loc 1 2205 9 view .LVU1601
2205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5261              		.loc 1 2205 9 view .LVU1602
 5262 00a2 0023     		movs	r3, #0
 5263 00a4 84F85030 		strb	r3, [r4, #80]
 5264 00a8 F7E7     		b	.L323
 5265              	.LVL426:
 5266              	.L327:
 5267              	.LCFI28:
 5268              		.cfi_def_cfa_offset 0
 5269              		.cfi_restore 4
 5270              		.cfi_restore 5
 5271              		.cfi_restore 6
 5272              		.cfi_restore 14
2210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 5273              		.loc 1 2210 20 is_stmt 0 view .LVU1603
 5274 00aa 0220     		movs	r0, #2
 5275              	.LVL427:
2215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5276              		.loc 1 2215 1 view .LVU1604
 5277 00ac 7047     		bx	lr
 5278              	.LVL428:
 5279              	.L328:
 5280              	.LCFI29:
 5281              		.cfi_def_cfa_offset 16
 5282              		.cfi_offset 4, -16
 5283              		.cfi_offset 5, -12
 5284              		.cfi_offset 6, -8
 5285              		.cfi_offset 14, -4
2125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5286              		.loc 1 2125 5 view .LVU1605
 5287 00ae 0220     		movs	r0, #2
 5288              	.LVL429:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 343


2125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5289              		.loc 1 2125 5 view .LVU1606
 5290 00b0 F3E7     		b	.L323
 5291              	.L334:
 5292 00b2 00BF     		.align	2
 5293              	.L333:
 5294 00b4 00000000 		.word	ADC_DMAConvCplt
 5295 00b8 00000000 		.word	ADC_DMAHalfConvCplt
 5296 00bc 00000000 		.word	ADC_DMAError
 5297              		.cfi_endproc
 5298              	.LFE1114:
 5300              		.section	.text.ADC_Disable,"ax",%progbits
 5301              		.align	1
 5302              		.global	ADC_Disable
 5303              		.syntax unified
 5304              		.thumb
 5305              		.thumb_func
 5306              		.fpu fpv4-sp-d16
 5308              	ADC_Disable:
 5309              	.LVL430:
 5310              	.LFB1128:
3767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 5311              		.loc 1 3767 1 is_stmt 1 view -0
 5312              		.cfi_startproc
 5313              		@ args = 0, pretend = 0, frame = 0
 5314              		@ frame_needed = 0, uses_anonymous_args = 0
3767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 5315              		.loc 1 3767 1 is_stmt 0 view .LVU1608
 5316 0000 38B5     		push	{r3, r4, r5, lr}
 5317              	.LCFI30:
 5318              		.cfi_def_cfa_offset 16
 5319              		.cfi_offset 3, -16
 5320              		.cfi_offset 4, -12
 5321              		.cfi_offset 5, -8
 5322              		.cfi_offset 14, -4
 5323 0002 0446     		mov	r4, r0
3768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 5324              		.loc 1 3768 3 is_stmt 1 view .LVU1609
3769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5325              		.loc 1 3769 3 view .LVU1610
3769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5326              		.loc 1 3769 48 is_stmt 0 view .LVU1611
 5327 0004 0268     		ldr	r2, [r0]
 5328              	.LVL431:
 5329              	.LBB588:
 5330              	.LBI588:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5331              		.loc 2 6708 26 is_stmt 1 view .LVU1612
 5332              	.LBB589:
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5333              		.loc 2 6710 3 view .LVU1613
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5334              		.loc 2 6710 12 is_stmt 0 view .LVU1614
 5335 0006 9368     		ldr	r3, [r2, #8]
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5336              		.loc 2 6710 70 view .LVU1615
 5337 0008 13F00203 		ands	r3, r3, #2
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 344


 5338 000c 00D0     		beq	.L336
 5339 000e 0123     		movs	r3, #1
 5340              	.L336:
 5341              	.LVL432:
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5342              		.loc 2 6710 70 view .LVU1616
 5343              	.LBE589:
 5344              	.LBE588:
3774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5345              		.loc 1 3774 3 is_stmt 1 view .LVU1617
 5346              	.LBB590:
 5347              	.LBI590:
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5348              		.loc 2 6697 26 view .LVU1618
 5349              	.LBB591:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5350              		.loc 2 6699 3 view .LVU1619
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5351              		.loc 2 6699 12 is_stmt 0 view .LVU1620
 5352 0010 9168     		ldr	r1, [r2, #8]
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5353              		.loc 2 6699 68 view .LVU1621
 5354 0012 11F0010F 		tst	r1, #1
 5355 0016 39D0     		beq	.L341
 5356              	.LVL433:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5357              		.loc 2 6699 68 view .LVU1622
 5358              	.LBE591:
 5359              	.LBE590:
3775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 5360              		.loc 1 3775 7 view .LVU1623
 5361 0018 002B     		cmp	r3, #0
 5362 001a 39D1     		bne	.L342
3782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 5363              		.loc 1 3782 5 is_stmt 1 view .LVU1624
3782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 5364              		.loc 1 3782 24 is_stmt 0 view .LVU1625
 5365 001c 9368     		ldr	r3, [r2, #8]
 5366              	.LVL434:
3782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 5367              		.loc 1 3782 29 view .LVU1626
 5368 001e 03F00D03 		and	r3, r3, #13
3782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 5369              		.loc 1 3782 8 view .LVU1627
 5370 0022 012B     		cmp	r3, #1
 5371 0024 09D0     		beq	.L344
3792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5372              		.loc 1 3792 7 is_stmt 1 view .LVU1628
 5373 0026 636D     		ldr	r3, [r4, #84]
 5374 0028 43F01003 		orr	r3, r3, #16
 5375 002c 6365     		str	r3, [r4, #84]
3795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5376              		.loc 1 3795 7 view .LVU1629
 5377 002e A36D     		ldr	r3, [r4, #88]
 5378 0030 43F00103 		orr	r3, r3, #1
 5379 0034 A365     		str	r3, [r4, #88]
3797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 345


 5380              		.loc 1 3797 7 view .LVU1630
3797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5381              		.loc 1 3797 14 is_stmt 0 view .LVU1631
 5382 0036 0120     		movs	r0, #1
 5383              	.LVL435:
3797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5384              		.loc 1 3797 14 view .LVU1632
 5385 0038 29E0     		b	.L337
 5386              	.LVL436:
 5387              	.L344:
3786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 5388              		.loc 1 3786 7 is_stmt 1 view .LVU1633
 5389              	.LBB592:
 5390              	.LBI592:
6678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5391              		.loc 2 6678 22 view .LVU1634
 5392              	.LBB593:
6683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5393              		.loc 2 6683 3 view .LVU1635
 5394 003a 9368     		ldr	r3, [r2, #8]
 5395 003c 23F00043 		bic	r3, r3, #-2147483648
 5396 0040 23F03F03 		bic	r3, r3, #63
 5397 0044 43F00203 		orr	r3, r3, #2
 5398 0048 9360     		str	r3, [r2, #8]
 5399              	.LVL437:
6683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5400              		.loc 2 6683 3 is_stmt 0 view .LVU1636
 5401              	.LBE593:
 5402              	.LBE592:
3787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5403              		.loc 1 3787 7 is_stmt 1 view .LVU1637
 5404 004a 2368     		ldr	r3, [r4]
 5405 004c 0322     		movs	r2, #3
 5406 004e 1A60     		str	r2, [r3]
3802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5407              		.loc 1 3802 5 view .LVU1638
3802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5408              		.loc 1 3802 17 is_stmt 0 view .LVU1639
 5409 0050 FFF7FEFF 		bl	HAL_GetTick
 5410              	.LVL438:
3802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5411              		.loc 1 3802 17 view .LVU1640
 5412 0054 0546     		mov	r5, r0
 5413              	.LVL439:
3804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5414              		.loc 1 3804 5 is_stmt 1 view .LVU1641
 5415              	.L339:
3804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5416              		.loc 1 3804 11 view .LVU1642
3804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5417              		.loc 1 3804 17 is_stmt 0 view .LVU1643
 5418 0056 2368     		ldr	r3, [r4]
3804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5419              		.loc 1 3804 27 view .LVU1644
 5420 0058 9B68     		ldr	r3, [r3, #8]
3804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5421              		.loc 1 3804 11 view .LVU1645
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 346


 5422 005a 13F0010F 		tst	r3, #1
 5423 005e 13D0     		beq	.L345
3806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5424              		.loc 1 3806 7 is_stmt 1 view .LVU1646
3806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5425              		.loc 1 3806 12 is_stmt 0 view .LVU1647
 5426 0060 FFF7FEFF 		bl	HAL_GetTick
 5427              	.LVL440:
3806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5428              		.loc 1 3806 26 view .LVU1648
 5429 0064 401B     		subs	r0, r0, r5
3806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5430              		.loc 1 3806 10 view .LVU1649
 5431 0066 0228     		cmp	r0, #2
 5432 0068 F5D9     		bls	.L339
3809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5433              		.loc 1 3809 9 is_stmt 1 view .LVU1650
3809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5434              		.loc 1 3809 18 is_stmt 0 view .LVU1651
 5435 006a 2368     		ldr	r3, [r4]
3809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5436              		.loc 1 3809 28 view .LVU1652
 5437 006c 9B68     		ldr	r3, [r3, #8]
3809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5438              		.loc 1 3809 12 view .LVU1653
 5439 006e 13F0010F 		tst	r3, #1
 5440 0072 F0D0     		beq	.L339
3812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5441              		.loc 1 3812 11 is_stmt 1 view .LVU1654
 5442 0074 636D     		ldr	r3, [r4, #84]
 5443 0076 43F01003 		orr	r3, r3, #16
 5444 007a 6365     		str	r3, [r4, #84]
3815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5445              		.loc 1 3815 11 view .LVU1655
 5446 007c A36D     		ldr	r3, [r4, #88]
 5447 007e 43F00103 		orr	r3, r3, #1
 5448 0082 A365     		str	r3, [r4, #88]
3817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 5449              		.loc 1 3817 11 view .LVU1656
3817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 5450              		.loc 1 3817 18 is_stmt 0 view .LVU1657
 5451 0084 0120     		movs	r0, #1
 5452 0086 02E0     		b	.L337
 5453              	.L345:
3824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5454              		.loc 1 3824 10 view .LVU1658
 5455 0088 0020     		movs	r0, #0
 5456 008a 00E0     		b	.L337
 5457              	.LVL441:
 5458              	.L341:
3824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5459              		.loc 1 3824 10 view .LVU1659
 5460 008c 0020     		movs	r0, #0
 5461              	.LVL442:
 5462              	.L337:
3825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5463              		.loc 1 3825 1 view .LVU1660
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 347


 5464 008e 38BD     		pop	{r3, r4, r5, pc}
 5465              	.LVL443:
 5466              	.L342:
3824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5467              		.loc 1 3824 10 view .LVU1661
 5468 0090 0020     		movs	r0, #0
 5469              	.LVL444:
3824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5470              		.loc 1 3824 10 view .LVU1662
 5471 0092 FCE7     		b	.L337
 5472              		.cfi_endproc
 5473              	.LFE1128:
 5475              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 5476              		.align	1
 5477              		.global	HAL_ADC_DeInit
 5478              		.syntax unified
 5479              		.thumb
 5480              		.thumb_func
 5481              		.fpu fpv4-sp-d16
 5483              	HAL_ADC_DeInit:
 5484              	.LVL445:
 5485              	.LFB1105:
 943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5486              		.loc 1 943 1 is_stmt 1 view -0
 5487              		.cfi_startproc
 5488              		@ args = 0, pretend = 0, frame = 0
 5489              		@ frame_needed = 0, uses_anonymous_args = 0
 943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5490              		.loc 1 943 1 is_stmt 0 view .LVU1664
 5491 0000 38B5     		push	{r3, r4, r5, lr}
 5492              	.LCFI31:
 5493              		.cfi_def_cfa_offset 16
 5494              		.cfi_offset 3, -16
 5495              		.cfi_offset 4, -12
 5496              		.cfi_offset 5, -8
 5497              		.cfi_offset 14, -4
 944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5498              		.loc 1 944 3 is_stmt 1 view .LVU1665
 947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5499              		.loc 1 947 3 view .LVU1666
 947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5500              		.loc 1 947 6 is_stmt 0 view .LVU1667
 5501 0002 0028     		cmp	r0, #0
 5502 0004 00F0B480 		beq	.L350
 5503 0008 0446     		mov	r4, r0
 953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5504              		.loc 1 953 3 is_stmt 1 view .LVU1668
 956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5505              		.loc 1 956 3 view .LVU1669
 5506 000a 436D     		ldr	r3, [r0, #84]
 5507 000c 43F00203 		orr	r3, r3, #2
 5508 0010 4365     		str	r3, [r0, #84]
 962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5509              		.loc 1 962 3 view .LVU1670
 962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5510              		.loc 1 962 20 is_stmt 0 view .LVU1671
 5511 0012 0321     		movs	r1, #3
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 348


 5512 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5513              	.LVL446:
 974:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 5514              		.loc 1 974 3 is_stmt 1 view .LVU1672
 5515 0018 2268     		ldr	r2, [r4]
 5516 001a D368     		ldr	r3, [r2, #12]
 5517 001c 43F40013 		orr	r3, r3, #2097152
 5518 0020 D360     		str	r3, [r2, #12]
 978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5519              		.loc 1 978 3 view .LVU1673
 978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5520              		.loc 1 978 6 is_stmt 0 view .LVU1674
 5521 0022 0546     		mov	r5, r0
 5522 0024 0028     		cmp	r0, #0
 5523 0026 00F09980 		beq	.L352
 5524              	.L348:
 5525              	.LVL447:
1040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 5526              		.loc 1 1040 3 is_stmt 1 view .LVU1675
 5527 002a 2268     		ldr	r2, [r4]
 5528 002c 5368     		ldr	r3, [r2, #4]
 5529 002e 23F4FF63 		bic	r3, r3, #2040
 5530 0032 23F00703 		bic	r3, r3, #7
 5531 0036 5360     		str	r3, [r2, #4]
1052:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined (ADC_SUPPORT_2_5_MSPS)
 5532              		.loc 1 1052 3 view .LVU1676
 5533 0038 2368     		ldr	r3, [r4]
 5534 003a 40F2FF72 		movw	r2, #2047
 5535 003e 1A60     		str	r2, [r3]
1068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5536              		.loc 1 1068 3 view .LVU1677
 5537 0040 2268     		ldr	r2, [r4]
 5538 0042 9368     		ldr	r3, [r2, #8]
 5539 0044 23F0A043 		bic	r3, r3, #1342177280
 5540 0048 9360     		str	r3, [r2, #8]
1069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5541              		.loc 1 1069 3 view .LVU1678
 5542 004a 2268     		ldr	r2, [r4]
 5543 004c 9368     		ldr	r3, [r2, #8]
 5544 004e 43F00053 		orr	r3, r3, #536870912
 5545 0052 9360     		str	r3, [r2, #8]
1072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 5546              		.loc 1 1072 3 view .LVU1679
 5547 0054 2268     		ldr	r2, [r4]
 5548 0056 D168     		ldr	r1, [r2, #12]
 5549 0058 464B     		ldr	r3, .L353
 5550 005a 0B40     		ands	r3, r3, r1
 5551 005c D360     		str	r3, [r2, #12]
1073:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5552              		.loc 1 1073 3 view .LVU1680
 5553 005e 2268     		ldr	r2, [r4]
 5554 0060 D368     		ldr	r3, [r2, #12]
 5555 0062 43F00043 		orr	r3, r3, #-2147483648
 5556 0066 D360     		str	r3, [r2, #12]
1076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 5557              		.loc 1 1076 3 view .LVU1681
 5558 0068 2268     		ldr	r2, [r4]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 349


 5559 006a 1369     		ldr	r3, [r2, #16]
 5560 006c 23F4FF63 		bic	r3, r3, #2040
 5561 0070 23F00703 		bic	r3, r3, #7
 5562 0074 1361     		str	r3, [r2, #16]
1080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5563              		.loc 1 1080 3 view .LVU1682
 5564 0076 2268     		ldr	r2, [r4]
 5565 0078 5369     		ldr	r3, [r2, #20]
 5566 007a 03F04043 		and	r3, r3, #-1073741824
 5567 007e 5361     		str	r3, [r2, #20]
1083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 5568              		.loc 1 1083 3 view .LVU1683
 5569 0080 2268     		ldr	r2, [r4]
 5570 0082 9369     		ldr	r3, [r2, #24]
 5571 0084 03F07843 		and	r3, r3, #-134217728
 5572 0088 9361     		str	r3, [r2, #24]
1088:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5573              		.loc 1 1088 3 view .LVU1684
 5574 008a 2268     		ldr	r2, [r4]
 5575 008c 136A     		ldr	r3, [r2, #32]
 5576 008e 03F0F023 		and	r3, r3, #-268374016
 5577 0092 1362     		str	r3, [r2, #32]
1091:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5578              		.loc 1 1091 3 view .LVU1685
 5579 0094 2268     		ldr	r2, [r4]
 5580 0096 536A     		ldr	r3, [r2, #36]
 5581 0098 03F0FF23 		and	r3, r3, #-16711936
 5582 009c 5362     		str	r3, [r2, #36]
1094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5583              		.loc 1 1094 3 view .LVU1686
 5584 009e 2268     		ldr	r2, [r4]
 5585 00a0 936A     		ldr	r3, [r2, #40]
 5586 00a2 03F0FF23 		and	r3, r3, #-16711936
 5587 00a6 9362     		str	r3, [r2, #40]
1097:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5588              		.loc 1 1097 3 view .LVU1687
 5589 00a8 2268     		ldr	r2, [r4]
 5590 00aa 116B     		ldr	r1, [r2, #48]
 5591 00ac 324B     		ldr	r3, .L353+4
 5592 00ae 0B40     		ands	r3, r3, r1
 5593 00b0 1363     		str	r3, [r2, #48]
1101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5594              		.loc 1 1101 3 view .LVU1688
 5595 00b2 2368     		ldr	r3, [r4]
 5596 00b4 5A6B     		ldr	r2, [r3, #52]
 5597 00b6 3149     		ldr	r1, .L353+8
 5598 00b8 0A40     		ands	r2, r2, r1
 5599 00ba 5A63     		str	r2, [r3, #52]
1105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5600              		.loc 1 1105 3 view .LVU1689
 5601 00bc 2268     		ldr	r2, [r4]
 5602 00be 936B     		ldr	r3, [r2, #56]
 5603 00c0 0B40     		ands	r3, r3, r1
 5604 00c2 9363     		str	r3, [r2, #56]
1109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5605              		.loc 1 1109 3 view .LVU1690
 5606 00c4 2268     		ldr	r2, [r4]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 350


 5607 00c6 D36B     		ldr	r3, [r2, #60]
 5608 00c8 23F4FB63 		bic	r3, r3, #2008
 5609 00cc 23F00703 		bic	r3, r3, #7
 5610 00d0 D363     		str	r3, [r2, #60]
1117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR2 */
 5611              		.loc 1 1117 3 view .LVU1691
 5612 00d2 2168     		ldr	r1, [r4]
 5613 00d4 0A6E     		ldr	r2, [r1, #96]
 5614 00d6 2A4B     		ldr	r3, .L353+12
 5615 00d8 1A40     		ands	r2, r2, r3
 5616 00da 0A66     		str	r2, [r1, #96]
1119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR3 */
 5617              		.loc 1 1119 3 view .LVU1692
 5618 00dc 2168     		ldr	r1, [r4]
 5619 00de 4A6E     		ldr	r2, [r1, #100]
 5620 00e0 1A40     		ands	r2, r2, r3
 5621 00e2 4A66     		str	r2, [r1, #100]
1121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR4 */
 5622              		.loc 1 1121 3 view .LVU1693
 5623 00e4 2168     		ldr	r1, [r4]
 5624 00e6 8A6E     		ldr	r2, [r1, #104]
 5625 00e8 1A40     		ands	r2, r2, r3
 5626 00ea 8A66     		str	r2, [r1, #104]
1123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5627              		.loc 1 1123 3 view .LVU1694
 5628 00ec 2168     		ldr	r1, [r4]
 5629 00ee CA6E     		ldr	r2, [r1, #108]
 5630 00f0 1340     		ands	r3, r3, r2
 5631 00f2 CB66     		str	r3, [r1, #108]
1129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5632              		.loc 1 1129 3 view .LVU1695
 5633 00f4 2268     		ldr	r2, [r4]
 5634 00f6 D2F8A030 		ldr	r3, [r2, #160]
 5635 00fa DB0C     		lsrs	r3, r3, #19
 5636 00fc DB04     		lsls	r3, r3, #19
 5637 00fe C2F8A030 		str	r3, [r2, #160]
1132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5638              		.loc 1 1132 3 view .LVU1696
 5639 0102 2268     		ldr	r2, [r4]
 5640 0104 D2F8A430 		ldr	r3, [r2, #164]
 5641 0108 DB0C     		lsrs	r3, r3, #19
 5642 010a DB04     		lsls	r3, r3, #19
 5643 010c C2F8A430 		str	r3, [r2, #164]
1135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5644              		.loc 1 1135 3 view .LVU1697
 5645 0110 2268     		ldr	r2, [r4]
 5646 0112 D2F8B030 		ldr	r3, [r2, #176]
 5647 0116 DB0C     		lsrs	r3, r3, #19
 5648 0118 DB04     		lsls	r3, r3, #19
 5649 011a C2F8B030 		str	r3, [r2, #176]
1138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5650              		.loc 1 1138 3 view .LVU1698
 5651 011e 2268     		ldr	r2, [r4]
 5652 0120 D2F8B430 		ldr	r3, [r2, #180]
 5653 0124 23F07F13 		bic	r3, r3, #8323199
 5654 0128 C2F8B430 		str	r3, [r2, #180]
1146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 351


 5655              		.loc 1 1146 3 view .LVU1699
 5656              	.LVL448:
 5657              	.LBB594:
 5658              	.LBI594:
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5659              		.loc 2 6697 26 view .LVU1700
 5660              	.LBB595:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5661              		.loc 2 6699 3 view .LVU1701
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5662              		.loc 2 6699 12 is_stmt 0 view .LVU1702
 5663 012c 154B     		ldr	r3, .L353+16
 5664 012e 9B68     		ldr	r3, [r3, #8]
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5665              		.loc 2 6699 68 view .LVU1703
 5666 0130 13F0010F 		tst	r3, #1
 5667 0134 06D1     		bne	.L349
 5668              	.LVL449:
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5669              		.loc 2 6699 68 view .LVU1704
 5670              	.LBE595:
 5671              	.LBE594:
1155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 5672              		.loc 1 1155 5 is_stmt 1 view .LVU1705
 5673 0136 144A     		ldr	r2, .L353+20
 5674 0138 9368     		ldr	r3, [r2, #8]
 5675 013a 23F0FF73 		bic	r3, r3, #33423360
 5676 013e 23F48033 		bic	r3, r3, #65536
 5677 0142 9360     		str	r3, [r2, #8]
 5678              	.L349:
1179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 5679              		.loc 1 1179 3 view .LVU1706
 5680 0144 2046     		mov	r0, r4
 5681 0146 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 5682              	.LVL450:
1183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5683              		.loc 1 1183 3 view .LVU1707
 5684 014a 0023     		movs	r3, #0
 5685 014c A365     		str	r3, [r4, #88]
1190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5686              		.loc 1 1190 3 view .LVU1708
1190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5687              		.loc 1 1190 38 is_stmt 0 view .LVU1709
 5688 014e E365     		str	r3, [r4, #92]
1191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5689              		.loc 1 1191 3 is_stmt 1 view .LVU1710
1191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5690              		.loc 1 1191 38 is_stmt 0 view .LVU1711
 5691 0150 2366     		str	r3, [r4, #96]
1195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5692              		.loc 1 1195 3 is_stmt 1 view .LVU1712
1195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5693              		.loc 1 1195 15 is_stmt 0 view .LVU1713
 5694 0152 6365     		str	r3, [r4, #84]
1198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5695              		.loc 1 1198 3 is_stmt 1 view .LVU1714
1198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 352


 5696              		.loc 1 1198 3 view .LVU1715
 5697 0154 84F85030 		strb	r3, [r4, #80]
1198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5698              		.loc 1 1198 3 view .LVU1716
1201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5699              		.loc 1 1201 3 view .LVU1717
 5700              	.LVL451:
 5701              	.L347:
1202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5702              		.loc 1 1202 1 is_stmt 0 view .LVU1718
 5703 0158 2846     		mov	r0, r5
 5704 015a 38BD     		pop	{r3, r4, r5, pc}
 5705              	.LVL452:
 5706              	.L352:
 981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5707              		.loc 1 981 5 is_stmt 1 view .LVU1719
 981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5708              		.loc 1 981 22 is_stmt 0 view .LVU1720
 5709 015c 2046     		mov	r0, r4
 5710              	.LVL453:
 981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5711              		.loc 1 981 22 view .LVU1721
 5712 015e FFF7FEFF 		bl	ADC_Disable
 5713              	.LVL454:
 984:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5714              		.loc 1 984 5 is_stmt 1 view .LVU1722
 984:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5715              		.loc 1 984 8 is_stmt 0 view .LVU1723
 5716 0162 0546     		mov	r5, r0
 5717 0164 0028     		cmp	r0, #0
 5718 0166 7FF460AF 		bne	.L348
 987:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5719              		.loc 1 987 7 is_stmt 1 view .LVU1724
 987:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5720              		.loc 1 987 19 is_stmt 0 view .LVU1725
 5721 016a 0123     		movs	r3, #1
 5722 016c 6365     		str	r3, [r4, #84]
 5723 016e 5CE7     		b	.L348
 5724              	.LVL455:
 5725              	.L350:
 949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 5726              		.loc 1 949 12 view .LVU1726
 5727 0170 0125     		movs	r5, #1
 5728 0172 F1E7     		b	.L347
 5729              	.L354:
 5730              		.align	2
 5731              	.L353:
 5732 0174 04800080 		.word	-2147450876
 5733 0178 300882E0 		.word	-528349136
 5734 017c 200882E0 		.word	-528349152
 5735 0180 00F0FF03 		.word	67104768
 5736 0184 00000450 		.word	1342439424
 5737 0188 00030450 		.word	1342440192
 5738              		.cfi_endproc
 5739              	.LFE1105:
 5741              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 5742              		.align	1
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 353


 5743              		.global	HAL_ADC_Stop
 5744              		.syntax unified
 5745              		.thumb
 5746              		.thumb_func
 5747              		.fpu fpv4-sp-d16
 5749              	HAL_ADC_Stop:
 5750              	.LVL456:
 5751              	.LFB1109:
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5752              		.loc 1 1601 1 is_stmt 1 view -0
 5753              		.cfi_startproc
 5754              		@ args = 0, pretend = 0, frame = 0
 5755              		@ frame_needed = 0, uses_anonymous_args = 0
1602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5756              		.loc 1 1602 3 view .LVU1728
1605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5757              		.loc 1 1605 3 view .LVU1729
1608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5758              		.loc 1 1608 3 view .LVU1730
1608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5759              		.loc 1 1608 3 view .LVU1731
 5760 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5761 0004 012B     		cmp	r3, #1
 5762 0006 1AD0     		beq	.L358
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5763              		.loc 1 1601 1 is_stmt 0 discriminator 2 view .LVU1732
 5764 0008 10B5     		push	{r4, lr}
 5765              	.LCFI32:
 5766              		.cfi_def_cfa_offset 8
 5767              		.cfi_offset 4, -8
 5768              		.cfi_offset 14, -4
 5769 000a 0446     		mov	r4, r0
1608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5770              		.loc 1 1608 3 is_stmt 1 discriminator 2 view .LVU1733
 5771 000c 0123     		movs	r3, #1
 5772 000e 80F85030 		strb	r3, [r0, #80]
1608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5773              		.loc 1 1608 3 discriminator 2 view .LVU1734
1615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5774              		.loc 1 1615 3 discriminator 2 view .LVU1735
1615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5775              		.loc 1 1615 20 is_stmt 0 discriminator 2 view .LVU1736
 5776 0012 0321     		movs	r1, #3
 5777 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5778              	.LVL457:
1619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5779              		.loc 1 1619 3 is_stmt 1 discriminator 2 view .LVU1737
1619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5780              		.loc 1 1619 6 is_stmt 0 discriminator 2 view .LVU1738
 5781 0018 18B1     		cbz	r0, .L363
 5782              	.L357:
1641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5783              		.loc 1 1641 3 is_stmt 1 view .LVU1739
1641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5784              		.loc 1 1641 3 view .LVU1740
 5785 001a 0023     		movs	r3, #0
 5786 001c 84F85030 		strb	r3, [r4, #80]
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 354


1641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5787              		.loc 1 1641 3 view .LVU1741
1644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5788              		.loc 1 1644 3 view .LVU1742
1645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5789              		.loc 1 1645 1 is_stmt 0 view .LVU1743
 5790 0020 10BD     		pop	{r4, pc}
 5791              	.LVL458:
 5792              	.L363:
1622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5793              		.loc 1 1622 5 is_stmt 1 view .LVU1744
1622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5794              		.loc 1 1622 22 is_stmt 0 view .LVU1745
 5795 0022 2046     		mov	r0, r4
 5796              	.LVL459:
1622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5797              		.loc 1 1622 22 view .LVU1746
 5798 0024 FFF7FEFF 		bl	ADC_Disable
 5799              	.LVL460:
1625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5800              		.loc 1 1625 5 is_stmt 1 view .LVU1747
1625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5801              		.loc 1 1625 8 is_stmt 0 view .LVU1748
 5802 0028 0028     		cmp	r0, #0
 5803 002a F6D1     		bne	.L357
1633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5804              		.loc 1 1633 7 is_stmt 1 view .LVU1749
 5805 002c 636D     		ldr	r3, [r4, #84]
 5806 002e 23F48853 		bic	r3, r3, #4352
 5807 0032 23F00103 		bic	r3, r3, #1
 5808 0036 43F00103 		orr	r3, r3, #1
 5809 003a 6365     		str	r3, [r4, #84]
 5810 003c EDE7     		b	.L357
 5811              	.LVL461:
 5812              	.L358:
 5813              	.LCFI33:
 5814              		.cfi_def_cfa_offset 0
 5815              		.cfi_restore 4
 5816              		.cfi_restore 14
1608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5817              		.loc 1 1608 3 is_stmt 0 view .LVU1750
 5818 003e 0220     		movs	r0, #2
 5819              	.LVL462:
1645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5820              		.loc 1 1645 1 view .LVU1751
 5821 0040 7047     		bx	lr
 5822              		.cfi_endproc
 5823              	.LFE1109:
 5825              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 5826              		.align	1
 5827              		.global	HAL_ADC_Stop_IT
 5828              		.syntax unified
 5829              		.thumb
 5830              		.thumb_func
 5831              		.fpu fpv4-sp-d16
 5833              	HAL_ADC_Stop_IT:
 5834              	.LVL463:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 355


 5835              	.LFB1113:
2054:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5836              		.loc 1 2054 1 is_stmt 1 view -0
 5837              		.cfi_startproc
 5838              		@ args = 0, pretend = 0, frame = 0
 5839              		@ frame_needed = 0, uses_anonymous_args = 0
2055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5840              		.loc 1 2055 3 view .LVU1753
2058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5841              		.loc 1 2058 3 view .LVU1754
2061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5842              		.loc 1 2061 3 view .LVU1755
2061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5843              		.loc 1 2061 3 view .LVU1756
 5844 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5845 0004 012B     		cmp	r3, #1
 5846 0006 1FD0     		beq	.L367
2054:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5847              		.loc 1 2054 1 is_stmt 0 discriminator 2 view .LVU1757
 5848 0008 10B5     		push	{r4, lr}
 5849              	.LCFI34:
 5850              		.cfi_def_cfa_offset 8
 5851              		.cfi_offset 4, -8
 5852              		.cfi_offset 14, -4
 5853 000a 0446     		mov	r4, r0
2061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5854              		.loc 1 2061 3 is_stmt 1 discriminator 2 view .LVU1758
 5855 000c 0123     		movs	r3, #1
 5856 000e 80F85030 		strb	r3, [r0, #80]
2061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5857              		.loc 1 2061 3 discriminator 2 view .LVU1759
2068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5858              		.loc 1 2068 3 discriminator 2 view .LVU1760
2068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5859              		.loc 1 2068 20 is_stmt 0 discriminator 2 view .LVU1761
 5860 0012 0321     		movs	r1, #3
 5861 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5862              	.LVL464:
2072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5863              		.loc 1 2072 3 is_stmt 1 discriminator 2 view .LVU1762
2072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5864              		.loc 1 2072 6 is_stmt 0 discriminator 2 view .LVU1763
 5865 0018 18B1     		cbz	r0, .L372
 5866              	.L366:
2098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5867              		.loc 1 2098 3 is_stmt 1 view .LVU1764
2098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5868              		.loc 1 2098 3 view .LVU1765
 5869 001a 0023     		movs	r3, #0
 5870 001c 84F85030 		strb	r3, [r4, #80]
2098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5871              		.loc 1 2098 3 view .LVU1766
2101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5872              		.loc 1 2101 3 view .LVU1767
2102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5873              		.loc 1 2102 1 is_stmt 0 view .LVU1768
 5874 0020 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 356


 5875              	.LVL465:
 5876              	.L372:
2076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5877              		.loc 1 2076 5 is_stmt 1 view .LVU1769
 5878 0022 2268     		ldr	r2, [r4]
 5879 0024 5368     		ldr	r3, [r2, #4]
 5880 0026 23F01C03 		bic	r3, r3, #28
 5881 002a 5360     		str	r3, [r2, #4]
2079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5882              		.loc 1 2079 5 view .LVU1770
2079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5883              		.loc 1 2079 22 is_stmt 0 view .LVU1771
 5884 002c 2046     		mov	r0, r4
 5885              	.LVL466:
2079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5886              		.loc 1 2079 22 view .LVU1772
 5887 002e FFF7FEFF 		bl	ADC_Disable
 5888              	.LVL467:
2082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5889              		.loc 1 2082 5 is_stmt 1 view .LVU1773
2082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5890              		.loc 1 2082 8 is_stmt 0 view .LVU1774
 5891 0032 0028     		cmp	r0, #0
 5892 0034 F1D1     		bne	.L366
2090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5893              		.loc 1 2090 7 is_stmt 1 view .LVU1775
 5894 0036 636D     		ldr	r3, [r4, #84]
 5895 0038 23F48853 		bic	r3, r3, #4352
 5896 003c 23F00103 		bic	r3, r3, #1
 5897 0040 43F00103 		orr	r3, r3, #1
 5898 0044 6365     		str	r3, [r4, #84]
 5899 0046 E8E7     		b	.L366
 5900              	.LVL468:
 5901              	.L367:
 5902              	.LCFI35:
 5903              		.cfi_def_cfa_offset 0
 5904              		.cfi_restore 4
 5905              		.cfi_restore 14
2061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5906              		.loc 1 2061 3 is_stmt 0 view .LVU1776
 5907 0048 0220     		movs	r0, #2
 5908              	.LVL469:
2102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5909              		.loc 1 2102 1 view .LVU1777
 5910 004a 7047     		bx	lr
 5911              		.cfi_endproc
 5912              	.LFE1113:
 5914              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 5915              		.align	1
 5916              		.global	HAL_ADC_Stop_DMA
 5917              		.syntax unified
 5918              		.thumb
 5919              		.thumb_func
 5920              		.fpu fpv4-sp-d16
 5922              	HAL_ADC_Stop_DMA:
 5923              	.LVL470:
 5924              	.LFB1115:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 357


2228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5925              		.loc 1 2228 1 is_stmt 1 view -0
 5926              		.cfi_startproc
 5927              		@ args = 0, pretend = 0, frame = 0
 5928              		@ frame_needed = 0, uses_anonymous_args = 0
2228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5929              		.loc 1 2228 1 is_stmt 0 view .LVU1779
 5930 0000 38B5     		push	{r3, r4, r5, lr}
 5931              	.LCFI36:
 5932              		.cfi_def_cfa_offset 16
 5933              		.cfi_offset 3, -16
 5934              		.cfi_offset 4, -12
 5935              		.cfi_offset 5, -8
 5936              		.cfi_offset 14, -4
2229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5937              		.loc 1 2229 3 is_stmt 1 view .LVU1780
2232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5938              		.loc 1 2232 3 view .LVU1781
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5939              		.loc 1 2235 3 view .LVU1782
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5940              		.loc 1 2235 3 view .LVU1783
 5941 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5942 0006 012B     		cmp	r3, #1
 5943 0008 39D0     		beq	.L379
 5944 000a 0446     		mov	r4, r0
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5945              		.loc 1 2235 3 discriminator 2 view .LVU1784
 5946 000c 0123     		movs	r3, #1
 5947 000e 80F85030 		strb	r3, [r0, #80]
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5948              		.loc 1 2235 3 discriminator 2 view .LVU1785
2241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5949              		.loc 1 2241 3 discriminator 2 view .LVU1786
2241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5950              		.loc 1 2241 20 is_stmt 0 discriminator 2 view .LVU1787
 5951 0012 0321     		movs	r1, #3
 5952 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5953              	.LVL471:
2245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5954              		.loc 1 2245 3 is_stmt 1 discriminator 2 view .LVU1788
2245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5955              		.loc 1 2245 6 is_stmt 0 discriminator 2 view .LVU1789
 5956 0018 0546     		mov	r5, r0
 5957 001a E8B9     		cbnz	r0, .L375
2251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 5958              		.loc 1 2251 5 is_stmt 1 view .LVU1790
 5959 001c 2268     		ldr	r2, [r4]
 5960 001e D368     		ldr	r3, [r2, #12]
 5961 0020 23F00103 		bic	r3, r3, #1
 5962 0024 D360     		str	r3, [r2, #12]
2256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5963              		.loc 1 2256 5 view .LVU1791
2256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5964              		.loc 1 2256 13 is_stmt 0 view .LVU1792
 5965 0026 E06C     		ldr	r0, [r4, #76]
 5966              	.LVL472:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 358


2256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5967              		.loc 1 2256 25 view .LVU1793
 5968 0028 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
 5969 002c DBB2     		uxtb	r3, r3
2256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5970              		.loc 1 2256 8 view .LVU1794
 5971 002e 022B     		cmp	r3, #2
 5972 0030 17D0     		beq	.L381
 5973              	.L376:
 5974              	.LVL473:
2269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5975              		.loc 1 2269 5 is_stmt 1 view .LVU1795
 5976 0032 2268     		ldr	r2, [r4]
 5977 0034 5368     		ldr	r3, [r2, #4]
 5978 0036 23F01003 		bic	r3, r3, #16
 5979 003a 5360     		str	r3, [r2, #4]
2274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5980              		.loc 1 2274 5 view .LVU1796
2274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5981              		.loc 1 2274 8 is_stmt 0 view .LVU1797
 5982 003c DDB9     		cbnz	r5, .L377
2276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5983              		.loc 1 2276 7 is_stmt 1 view .LVU1798
2276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5984              		.loc 1 2276 24 is_stmt 0 view .LVU1799
 5985 003e 2046     		mov	r0, r4
 5986 0040 FFF7FEFF 		bl	ADC_Disable
 5987              	.LVL474:
 5988 0044 0546     		mov	r5, r0
 5989              	.LVL475:
 5990              	.L378:
2284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5991              		.loc 1 2284 5 is_stmt 1 view .LVU1800
2284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5992              		.loc 1 2284 8 is_stmt 0 view .LVU1801
 5993 0046 3DB9     		cbnz	r5, .L375
2292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5994              		.loc 1 2292 7 is_stmt 1 view .LVU1802
 5995 0048 636D     		ldr	r3, [r4, #84]
 5996 004a 23F48853 		bic	r3, r3, #4352
 5997 004e 23F00103 		bic	r3, r3, #1
 5998 0052 43F00103 		orr	r3, r3, #1
 5999 0056 6365     		str	r3, [r4, #84]
 6000              	.LVL476:
 6001              	.L375:
2301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 6002              		.loc 1 2301 3 view .LVU1803
2301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 6003              		.loc 1 2301 3 view .LVU1804
 6004 0058 0023     		movs	r3, #0
 6005 005a 84F85030 		strb	r3, [r4, #80]
2301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 6006              		.loc 1 2301 3 view .LVU1805
2304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 6007              		.loc 1 2304 3 view .LVU1806
 6008              	.LVL477:
 6009              	.L374:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 359


2305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 6010              		.loc 1 2305 1 is_stmt 0 view .LVU1807
 6011 005e 2846     		mov	r0, r5
 6012 0060 38BD     		pop	{r3, r4, r5, pc}
 6013              	.LVL478:
 6014              	.L381:
2258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 6015              		.loc 1 2258 7 is_stmt 1 view .LVU1808
2258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 6016              		.loc 1 2258 24 is_stmt 0 view .LVU1809
 6017 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 6018              	.LVL479:
2261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 6019              		.loc 1 2261 7 is_stmt 1 view .LVU1810
2261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 6020              		.loc 1 2261 10 is_stmt 0 view .LVU1811
 6021 0066 0546     		mov	r5, r0
 6022 0068 0028     		cmp	r0, #0
 6023 006a E2D0     		beq	.L376
2264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 6024              		.loc 1 2264 9 is_stmt 1 view .LVU1812
 6025 006c 636D     		ldr	r3, [r4, #84]
 6026 006e 43F04003 		orr	r3, r3, #64
 6027 0072 6365     		str	r3, [r4, #84]
 6028 0074 DDE7     		b	.L376
 6029              	.LVL480:
 6030              	.L377:
2280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 6031              		.loc 1 2280 7 view .LVU1813
2280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 6032              		.loc 1 2280 13 is_stmt 0 view .LVU1814
 6033 0076 2046     		mov	r0, r4
 6034 0078 FFF7FEFF 		bl	ADC_Disable
 6035              	.LVL481:
 6036 007c E3E7     		b	.L378
 6037              	.LVL482:
 6038              	.L379:
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 6039              		.loc 1 2235 3 view .LVU1815
 6040 007e 0225     		movs	r5, #2
 6041 0080 EDE7     		b	.L374
 6042              		.cfi_endproc
 6043              	.LFE1115:
 6045              		.text
 6046              	.Letext0:
 6047              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 6048              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 6049              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 6050              		.file 7 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 6051              		.file 8 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wb55xx.h"
 6052              		.file 9 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wbxx.h"
 6053              		.file 10 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 6054              		.file 11 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_dma.h"
 6055              		.file 12 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_adc.h"
 6056              		.file 13 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_flash.h"
 6057              		.file 14 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_uart.h"
 6058              		.file 15 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 360


 6059              		.file 16 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_adc_ex.h"
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 361


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wbxx_hal_adc.c
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:18     .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:26     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:42     .text.HAL_ADC_Init:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:49     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:556    .text.HAL_ADC_Init:00000000000001c8 $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:565    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:572    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:587    .text.HAL_ADC_PollForConversion:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:594    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:778    .text.HAL_ADC_PollForEvent:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:785    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:973    .text.HAL_ADC_GetValue:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:980    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1001   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1008   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1023   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1030   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1045   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1052   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1079   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1086   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1101   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1108   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1123   .text.HAL_ADC_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1130   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1624   .text.ADC_DMAConvCplt:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1631   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1766   .text.ADC_DMAError:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1773   .text.ADC_DMAError:0000000000000000 ADC_DMAError
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1807   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:1814   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:3069   .text.HAL_ADC_ConfigChannel:0000000000000384 $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:3084   .text.HAL_ADC_ConfigChannel:00000000000003a8 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:3270   .text.HAL_ADC_ConfigChannel:0000000000000460 $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:3278   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:3285   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4122   .text.HAL_ADC_AnalogWDGConfig:0000000000000324 $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4130   .text.HAL_ADC_AnalogWDGConfig:000000000000032c $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4166   .text.HAL_ADC_GetState:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4173   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4192   .text.HAL_ADC_GetError:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4199   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4218   .text.ADC_ConversionStop:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4225   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4546   .text.ADC_ConversionStop:00000000000000fc $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4551   .text.ADC_Enable:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4558   .text.ADC_Enable:0000000000000000 ADC_Enable
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4777   .text.ADC_Enable:00000000000000c0 $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4785   .text.HAL_ADC_Start:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4792   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4926   .text.HAL_ADC_Start_IT:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:4933   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5105   .text.HAL_ADC_Start_DMA:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5112   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5294   .text.HAL_ADC_Start_DMA:00000000000000b4 $d
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s 			page 362


/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5301   .text.ADC_Disable:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5308   .text.ADC_Disable:0000000000000000 ADC_Disable
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5476   .text.HAL_ADC_DeInit:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5483   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5732   .text.HAL_ADC_DeInit:0000000000000174 $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5742   .text.HAL_ADC_Stop:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5749   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5826   .text.HAL_ADC_Stop_IT:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5833   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5915   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccsbQOZf.s:5922   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
