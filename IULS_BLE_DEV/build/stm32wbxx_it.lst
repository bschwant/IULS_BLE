ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wbxx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB1261:
  28              		.file 1 "Core/Src/stm32wbxx_it.c"
   1:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32wbxx_it.c **** /**
   3:Core/Src/stm32wbxx_it.c ****   ******************************************************************************
   4:Core/Src/stm32wbxx_it.c ****   * @file    stm32wbxx_it.c
   5:Core/Src/stm32wbxx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32wbxx_it.c ****   ******************************************************************************
   7:Core/Src/stm32wbxx_it.c ****   * @attention
   8:Core/Src/stm32wbxx_it.c ****   *
   9:Core/Src/stm32wbxx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32wbxx_it.c ****   * All rights reserved.
  11:Core/Src/stm32wbxx_it.c ****   *
  12:Core/Src/stm32wbxx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32wbxx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32wbxx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32wbxx_it.c ****   *
  16:Core/Src/stm32wbxx_it.c ****   ******************************************************************************
  17:Core/Src/stm32wbxx_it.c ****   */
  18:Core/Src/stm32wbxx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32wbxx_it.c **** 
  20:Core/Src/stm32wbxx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32wbxx_it.c **** #include "main.h"
  22:Core/Src/stm32wbxx_it.c **** #include "stm32wbxx_it.h"
  23:Core/Src/stm32wbxx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32wbxx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32wbxx_it.c **** 
  27:Core/Src/stm32wbxx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32wbxx_it.c **** 
  30:Core/Src/stm32wbxx_it.c **** /* USER CODE END TD */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 2


  31:Core/Src/stm32wbxx_it.c **** 
  32:Core/Src/stm32wbxx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32wbxx_it.c **** 
  35:Core/Src/stm32wbxx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32wbxx_it.c **** 
  37:Core/Src/stm32wbxx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32wbxx_it.c **** 
  40:Core/Src/stm32wbxx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32wbxx_it.c **** 
  42:Core/Src/stm32wbxx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32wbxx_it.c **** 
  45:Core/Src/stm32wbxx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32wbxx_it.c **** 
  47:Core/Src/stm32wbxx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32wbxx_it.c **** 
  50:Core/Src/stm32wbxx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32wbxx_it.c **** 
  52:Core/Src/stm32wbxx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32wbxx_it.c **** 
  55:Core/Src/stm32wbxx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32wbxx_it.c **** 
  57:Core/Src/stm32wbxx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32wbxx_it.c **** extern IPCC_HandleTypeDef hipcc;
  59:Core/Src/stm32wbxx_it.c **** extern DMA_HandleTypeDef hdma_lpuart1_tx;
  60:Core/Src/stm32wbxx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  61:Core/Src/stm32wbxx_it.c **** extern UART_HandleTypeDef hlpuart1;
  62:Core/Src/stm32wbxx_it.c **** extern UART_HandleTypeDef huart1;
  63:Core/Src/stm32wbxx_it.c **** extern RTC_HandleTypeDef hrtc;
  64:Core/Src/stm32wbxx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32wbxx_it.c **** 
  66:Core/Src/stm32wbxx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32wbxx_it.c **** 
  68:Core/Src/stm32wbxx_it.c **** /******************************************************************************/
  69:Core/Src/stm32wbxx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32wbxx_it.c **** /******************************************************************************/
  71:Core/Src/stm32wbxx_it.c **** /**
  72:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32wbxx_it.c ****   */
  74:Core/Src/stm32wbxx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32wbxx_it.c **** {
  29              		.loc 1 75 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  76:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32wbxx_it.c **** 
  78:Core/Src/stm32wbxx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32wbxx_it.c ****   while (1)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 3


  36              		.loc 1 80 3 discriminator 1 view .LVU1
  81:Core/Src/stm32wbxx_it.c ****   {
  82:Core/Src/stm32wbxx_it.c ****   }
  37              		.loc 1 82 3 discriminator 1 view .LVU2
  80:Core/Src/stm32wbxx_it.c ****   {
  38              		.loc 1 80 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE1261:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	HardFault_Handler:
  52              	.LFB1262:
  83:Core/Src/stm32wbxx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32wbxx_it.c **** }
  85:Core/Src/stm32wbxx_it.c **** 
  86:Core/Src/stm32wbxx_it.c **** /**
  87:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32wbxx_it.c ****   */
  89:Core/Src/stm32wbxx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32wbxx_it.c **** {
  53              		.loc 1 90 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  91:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32wbxx_it.c **** 
  93:Core/Src/stm32wbxx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32wbxx_it.c ****   while (1)
  60              		.loc 1 94 3 discriminator 1 view .LVU5
  95:Core/Src/stm32wbxx_it.c ****   {
  96:Core/Src/stm32wbxx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32wbxx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32wbxx_it.c ****   }
  61              		.loc 1 98 3 discriminator 1 view .LVU6
  94:Core/Src/stm32wbxx_it.c ****   {
  62              		.loc 1 94 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE1262:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	MemManage_Handler:
  76              	.LFB1263:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 4


  99:Core/Src/stm32wbxx_it.c **** }
 100:Core/Src/stm32wbxx_it.c **** 
 101:Core/Src/stm32wbxx_it.c **** /**
 102:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32wbxx_it.c ****   */
 104:Core/Src/stm32wbxx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32wbxx_it.c **** {
  77              		.loc 1 105 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 106:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32wbxx_it.c **** 
 108:Core/Src/stm32wbxx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32wbxx_it.c ****   while (1)
  84              		.loc 1 109 3 discriminator 1 view .LVU9
 110:Core/Src/stm32wbxx_it.c ****   {
 111:Core/Src/stm32wbxx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32wbxx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32wbxx_it.c ****   }
  85              		.loc 1 113 3 discriminator 1 view .LVU10
 109:Core/Src/stm32wbxx_it.c ****   {
  86              		.loc 1 109 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE1263:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB1264:
 114:Core/Src/stm32wbxx_it.c **** }
 115:Core/Src/stm32wbxx_it.c **** 
 116:Core/Src/stm32wbxx_it.c **** /**
 117:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 118:Core/Src/stm32wbxx_it.c ****   */
 119:Core/Src/stm32wbxx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32wbxx_it.c **** {
 101              		.loc 1 120 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
 121:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32wbxx_it.c **** 
 123:Core/Src/stm32wbxx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32wbxx_it.c ****   while (1)
 108              		.loc 1 124 3 discriminator 1 view .LVU13
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 5


 125:Core/Src/stm32wbxx_it.c ****   {
 126:Core/Src/stm32wbxx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32wbxx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Core/Src/stm32wbxx_it.c ****   }
 109              		.loc 1 128 3 discriminator 1 view .LVU14
 124:Core/Src/stm32wbxx_it.c ****   {
 110              		.loc 1 124 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE1264:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB1265:
 129:Core/Src/stm32wbxx_it.c **** }
 130:Core/Src/stm32wbxx_it.c **** 
 131:Core/Src/stm32wbxx_it.c **** /**
 132:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32wbxx_it.c ****   */
 134:Core/Src/stm32wbxx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32wbxx_it.c **** {
 125              		.loc 1 135 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 136:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32wbxx_it.c **** 
 138:Core/Src/stm32wbxx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32wbxx_it.c ****   while (1)
 132              		.loc 1 139 3 discriminator 1 view .LVU17
 140:Core/Src/stm32wbxx_it.c ****   {
 141:Core/Src/stm32wbxx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32wbxx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32wbxx_it.c ****   }
 133              		.loc 1 143 3 discriminator 1 view .LVU18
 139:Core/Src/stm32wbxx_it.c ****   {
 134              		.loc 1 139 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE1265:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	SVC_Handler:
 148              	.LFB1266:
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 6


 144:Core/Src/stm32wbxx_it.c **** }
 145:Core/Src/stm32wbxx_it.c **** 
 146:Core/Src/stm32wbxx_it.c **** /**
 147:Core/Src/stm32wbxx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Core/Src/stm32wbxx_it.c ****   */
 149:Core/Src/stm32wbxx_it.c **** void SVC_Handler(void)
 150:Core/Src/stm32wbxx_it.c **** {
 149              		.loc 1 150 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 151:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Core/Src/stm32wbxx_it.c **** 
 153:Core/Src/stm32wbxx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Core/Src/stm32wbxx_it.c **** 
 156:Core/Src/stm32wbxx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Core/Src/stm32wbxx_it.c **** }
 154              		.loc 1 157 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE1266:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB1267:
 158:Core/Src/stm32wbxx_it.c **** 
 159:Core/Src/stm32wbxx_it.c **** /**
 160:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Debug monitor.
 161:Core/Src/stm32wbxx_it.c ****   */
 162:Core/Src/stm32wbxx_it.c **** void DebugMon_Handler(void)
 163:Core/Src/stm32wbxx_it.c **** {
 169              		.loc 1 163 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 164:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Core/Src/stm32wbxx_it.c **** 
 166:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Core/Src/stm32wbxx_it.c **** 
 169:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Core/Src/stm32wbxx_it.c **** }
 174              		.loc 1 170 1 view .LVU23
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE1267:
 179              		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	PendSV_Handler
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 7


 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	PendSV_Handler:
 188              	.LFB1268:
 171:Core/Src/stm32wbxx_it.c **** 
 172:Core/Src/stm32wbxx_it.c **** /**
 173:Core/Src/stm32wbxx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Core/Src/stm32wbxx_it.c ****   */
 175:Core/Src/stm32wbxx_it.c **** void PendSV_Handler(void)
 176:Core/Src/stm32wbxx_it.c **** {
 189              		.loc 1 176 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 177:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Core/Src/stm32wbxx_it.c **** 
 179:Core/Src/stm32wbxx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Core/Src/stm32wbxx_it.c **** 
 182:Core/Src/stm32wbxx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Core/Src/stm32wbxx_it.c **** }
 194              		.loc 1 183 1 view .LVU25
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE1268:
 199              		.section	.text.SysTick_Handler,"ax",%progbits
 200              		.align	1
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	SysTick_Handler:
 208              	.LFB1269:
 184:Core/Src/stm32wbxx_it.c **** 
 185:Core/Src/stm32wbxx_it.c **** /**
 186:Core/Src/stm32wbxx_it.c ****   * @brief This function handles System tick timer.
 187:Core/Src/stm32wbxx_it.c ****   */
 188:Core/Src/stm32wbxx_it.c **** void SysTick_Handler(void)
 189:Core/Src/stm32wbxx_it.c **** {
 209              		.loc 1 189 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI0:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 190:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Core/Src/stm32wbxx_it.c **** 
 192:Core/Src/stm32wbxx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Core/Src/stm32wbxx_it.c ****   HAL_IncTick();
 218              		.loc 1 193 3 view .LVU27
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 8


 219 0002 FFF7FEFF 		bl	HAL_IncTick
 220              	.LVL0:
 194:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Core/Src/stm32wbxx_it.c **** 
 196:Core/Src/stm32wbxx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Core/Src/stm32wbxx_it.c **** }
 221              		.loc 1 197 1 is_stmt 0 view .LVU28
 222 0006 08BD     		pop	{r3, pc}
 223              		.cfi_endproc
 224              	.LFE1269:
 226              		.section	.text.RTC_WKUP_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	RTC_WKUP_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv4-sp-d16
 234              	RTC_WKUP_IRQHandler:
 235              	.LFB1270:
 198:Core/Src/stm32wbxx_it.c **** 
 199:Core/Src/stm32wbxx_it.c **** /******************************************************************************/
 200:Core/Src/stm32wbxx_it.c **** /* STM32WBxx Peripheral Interrupt Handlers                                    */
 201:Core/Src/stm32wbxx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Core/Src/stm32wbxx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Core/Src/stm32wbxx_it.c **** /* please refer to the startup file (startup_stm32wbxx.s).                    */
 204:Core/Src/stm32wbxx_it.c **** /******************************************************************************/
 205:Core/Src/stm32wbxx_it.c **** 
 206:Core/Src/stm32wbxx_it.c **** /**
 207:Core/Src/stm32wbxx_it.c ****   * @brief This function handles RTC wake-up interrupt through EXTI line 19.
 208:Core/Src/stm32wbxx_it.c ****   */
 209:Core/Src/stm32wbxx_it.c **** void RTC_WKUP_IRQHandler(void)
 210:Core/Src/stm32wbxx_it.c **** {
 236              		.loc 1 210 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 08B5     		push	{r3, lr}
 241              	.LCFI1:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 3, -8
 244              		.cfi_offset 14, -4
 211:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN RTC_WKUP_IRQn 0 */
 212:Core/Src/stm32wbxx_it.c **** 
 213:Core/Src/stm32wbxx_it.c ****   /* USER CODE END RTC_WKUP_IRQn 0 */
 214:Core/Src/stm32wbxx_it.c ****   HAL_RTCEx_WakeUpTimerIRQHandler(&hrtc);
 245              		.loc 1 214 3 view .LVU30
 246 0002 FFF7FEFF 		bl	HW_TS_RTC_Wakeup_Handler
 247              	.LVL1:
 215:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN RTC_WKUP_IRQn 1 */
 216:Core/Src/stm32wbxx_it.c **** 
 217:Core/Src/stm32wbxx_it.c ****   /* USER CODE END RTC_WKUP_IRQn 1 */
 218:Core/Src/stm32wbxx_it.c **** }
 248              		.loc 1 218 1 is_stmt 0 view .LVU31
 249 0006 08BD     		pop	{r3, pc}
 250              		.cfi_endproc
 251              	.LFE1270:
 253              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 9


 254              		.align	1
 255              		.global	DMA1_Channel4_IRQHandler
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	DMA1_Channel4_IRQHandler:
 262              	.LFB1271:
 219:Core/Src/stm32wbxx_it.c **** 
 220:Core/Src/stm32wbxx_it.c **** /**
 221:Core/Src/stm32wbxx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 222:Core/Src/stm32wbxx_it.c ****   */
 223:Core/Src/stm32wbxx_it.c **** void DMA1_Channel4_IRQHandler(void)
 224:Core/Src/stm32wbxx_it.c **** {
 263              		.loc 1 224 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 08B5     		push	{r3, lr}
 268              	.LCFI2:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 3, -8
 271              		.cfi_offset 14, -4
 225:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 226:Core/Src/stm32wbxx_it.c **** 
 227:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 228:Core/Src/stm32wbxx_it.c ****   HAL_DMA_IRQHandler(&hdma_lpuart1_tx);
 272              		.loc 1 228 3 view .LVU33
 273 0002 0248     		ldr	r0, .L20
 274 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 275              	.LVL2:
 229:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 230:Core/Src/stm32wbxx_it.c **** 
 231:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 232:Core/Src/stm32wbxx_it.c **** }
 276              		.loc 1 232 1 is_stmt 0 view .LVU34
 277 0008 08BD     		pop	{r3, pc}
 278              	.L21:
 279 000a 00BF     		.align	2
 280              	.L20:
 281 000c 00000000 		.word	hdma_lpuart1_tx
 282              		.cfi_endproc
 283              	.LFE1271:
 285              		.section	.text.USART1_IRQHandler,"ax",%progbits
 286              		.align	1
 287              		.global	USART1_IRQHandler
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	USART1_IRQHandler:
 294              	.LFB1272:
 233:Core/Src/stm32wbxx_it.c **** 
 234:Core/Src/stm32wbxx_it.c **** /**
 235:Core/Src/stm32wbxx_it.c ****   * @brief This function handles USART1 global interrupt.
 236:Core/Src/stm32wbxx_it.c ****   */
 237:Core/Src/stm32wbxx_it.c **** void USART1_IRQHandler(void)
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 10


 238:Core/Src/stm32wbxx_it.c **** {
 295              		.loc 1 238 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299 0000 08B5     		push	{r3, lr}
 300              	.LCFI3:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 239:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 240:Core/Src/stm32wbxx_it.c **** 
 241:Core/Src/stm32wbxx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 242:Core/Src/stm32wbxx_it.c ****   HAL_UART_IRQHandler(&huart1);
 304              		.loc 1 242 3 view .LVU36
 305 0002 0248     		ldr	r0, .L24
 306 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 307              	.LVL3:
 243:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 244:Core/Src/stm32wbxx_it.c **** 
 245:Core/Src/stm32wbxx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 246:Core/Src/stm32wbxx_it.c **** }
 308              		.loc 1 246 1 is_stmt 0 view .LVU37
 309 0008 08BD     		pop	{r3, pc}
 310              	.L25:
 311 000a 00BF     		.align	2
 312              	.L24:
 313 000c 00000000 		.word	huart1
 314              		.cfi_endproc
 315              	.LFE1272:
 317              		.section	.text.LPUART1_IRQHandler,"ax",%progbits
 318              		.align	1
 319              		.global	LPUART1_IRQHandler
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv4-sp-d16
 325              	LPUART1_IRQHandler:
 326              	.LFB1273:
 247:Core/Src/stm32wbxx_it.c **** 
 248:Core/Src/stm32wbxx_it.c **** /**
 249:Core/Src/stm32wbxx_it.c ****   * @brief This function handles LPUART1 global interrupt.
 250:Core/Src/stm32wbxx_it.c ****   */
 251:Core/Src/stm32wbxx_it.c **** void LPUART1_IRQHandler(void)
 252:Core/Src/stm32wbxx_it.c **** {
 327              		.loc 1 252 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 08B5     		push	{r3, lr}
 332              	.LCFI4:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 3, -8
 335              		.cfi_offset 14, -4
 253:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN LPUART1_IRQn 0 */
 254:Core/Src/stm32wbxx_it.c **** 
 255:Core/Src/stm32wbxx_it.c ****   /* USER CODE END LPUART1_IRQn 0 */
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 11


 256:Core/Src/stm32wbxx_it.c ****   HAL_UART_IRQHandler(&hlpuart1);
 336              		.loc 1 256 3 view .LVU39
 337 0002 0248     		ldr	r0, .L28
 338 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 339              	.LVL4:
 257:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN LPUART1_IRQn 1 */
 258:Core/Src/stm32wbxx_it.c **** 
 259:Core/Src/stm32wbxx_it.c ****   /* USER CODE END LPUART1_IRQn 1 */
 260:Core/Src/stm32wbxx_it.c **** }
 340              		.loc 1 260 1 is_stmt 0 view .LVU40
 341 0008 08BD     		pop	{r3, pc}
 342              	.L29:
 343 000a 00BF     		.align	2
 344              	.L28:
 345 000c 00000000 		.word	hlpuart1
 346              		.cfi_endproc
 347              	.LFE1273:
 349              		.section	.text.IPCC_C1_RX_IRQHandler,"ax",%progbits
 350              		.align	1
 351              		.global	IPCC_C1_RX_IRQHandler
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv4-sp-d16
 357              	IPCC_C1_RX_IRQHandler:
 358              	.LFB1274:
 261:Core/Src/stm32wbxx_it.c **** 
 262:Core/Src/stm32wbxx_it.c **** /**
 263:Core/Src/stm32wbxx_it.c ****   * @brief This function handles IPCC RX occupied interrupt.
 264:Core/Src/stm32wbxx_it.c ****   */
 265:Core/Src/stm32wbxx_it.c **** void IPCC_C1_RX_IRQHandler(void)
 266:Core/Src/stm32wbxx_it.c **** {
 359              		.loc 1 266 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 08B5     		push	{r3, lr}
 364              	.LCFI5:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 267:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN IPCC_C1_RX_IRQn 0 */
 268:Core/Src/stm32wbxx_it.c **** 
 269:Core/Src/stm32wbxx_it.c ****   /* USER CODE END IPCC_C1_RX_IRQn 0 */
 270:Core/Src/stm32wbxx_it.c ****   HAL_IPCC_RX_IRQHandler(&hipcc);
 368              		.loc 1 270 3 view .LVU42
 369 0002 FFF7FEFF 		bl	HW_IPCC_Rx_Handler
 370              	.LVL5:
 271:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN IPCC_C1_RX_IRQn 1 */
 272:Core/Src/stm32wbxx_it.c **** 
 273:Core/Src/stm32wbxx_it.c ****   /* USER CODE END IPCC_C1_RX_IRQn 1 */
 274:Core/Src/stm32wbxx_it.c **** }
 371              		.loc 1 274 1 is_stmt 0 view .LVU43
 372 0006 08BD     		pop	{r3, pc}
 373              		.cfi_endproc
 374              	.LFE1274:
 376              		.section	.text.IPCC_C1_TX_IRQHandler,"ax",%progbits
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 12


 377              		.align	1
 378              		.global	IPCC_C1_TX_IRQHandler
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv4-sp-d16
 384              	IPCC_C1_TX_IRQHandler:
 385              	.LFB1275:
 275:Core/Src/stm32wbxx_it.c **** 
 276:Core/Src/stm32wbxx_it.c **** /**
 277:Core/Src/stm32wbxx_it.c ****   * @brief This function handles IPCC TX free interrupt.
 278:Core/Src/stm32wbxx_it.c ****   */
 279:Core/Src/stm32wbxx_it.c **** void IPCC_C1_TX_IRQHandler(void)
 280:Core/Src/stm32wbxx_it.c **** {
 386              		.loc 1 280 1 is_stmt 1 view -0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 08B5     		push	{r3, lr}
 391              	.LCFI6:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 3, -8
 394              		.cfi_offset 14, -4
 281:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN IPCC_C1_TX_IRQn 0 */
 282:Core/Src/stm32wbxx_it.c **** 
 283:Core/Src/stm32wbxx_it.c ****   /* USER CODE END IPCC_C1_TX_IRQn 0 */
 284:Core/Src/stm32wbxx_it.c ****   HAL_IPCC_TX_IRQHandler(&hipcc);
 395              		.loc 1 284 3 view .LVU45
 396 0002 FFF7FEFF 		bl	HW_IPCC_Tx_Handler
 397              	.LVL6:
 285:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN IPCC_C1_TX_IRQn 1 */
 286:Core/Src/stm32wbxx_it.c **** 
 287:Core/Src/stm32wbxx_it.c ****   /* USER CODE END IPCC_C1_TX_IRQn 1 */
 288:Core/Src/stm32wbxx_it.c **** }
 398              		.loc 1 288 1 is_stmt 0 view .LVU46
 399 0006 08BD     		pop	{r3, pc}
 400              		.cfi_endproc
 401              	.LFE1275:
 403              		.section	.text.HSEM_IRQHandler,"ax",%progbits
 404              		.align	1
 405              		.global	HSEM_IRQHandler
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	HSEM_IRQHandler:
 412              	.LFB1276:
 289:Core/Src/stm32wbxx_it.c **** 
 290:Core/Src/stm32wbxx_it.c **** /**
 291:Core/Src/stm32wbxx_it.c ****   * @brief This function handles HSEM global interrupt.
 292:Core/Src/stm32wbxx_it.c ****   */
 293:Core/Src/stm32wbxx_it.c **** void HSEM_IRQHandler(void)
 294:Core/Src/stm32wbxx_it.c **** {
 413              		.loc 1 294 1 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 13


 417 0000 08B5     		push	{r3, lr}
 418              	.LCFI7:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
 421              		.cfi_offset 14, -4
 295:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN HSEM_IRQn 0 */
 296:Core/Src/stm32wbxx_it.c **** 
 297:Core/Src/stm32wbxx_it.c ****   /* USER CODE END HSEM_IRQn 0 */
 298:Core/Src/stm32wbxx_it.c ****   HAL_HSEM_IRQHandler();
 422              		.loc 1 298 3 view .LVU48
 423 0002 FFF7FEFF 		bl	HAL_HSEM_IRQHandler
 424              	.LVL7:
 299:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN HSEM_IRQn 1 */
 300:Core/Src/stm32wbxx_it.c **** 
 301:Core/Src/stm32wbxx_it.c ****   /* USER CODE END HSEM_IRQn 1 */
 302:Core/Src/stm32wbxx_it.c **** }
 425              		.loc 1 302 1 is_stmt 0 view .LVU49
 426 0006 08BD     		pop	{r3, pc}
 427              		.cfi_endproc
 428              	.LFE1276:
 430              		.section	.text.DMA2_Channel4_IRQHandler,"ax",%progbits
 431              		.align	1
 432              		.global	DMA2_Channel4_IRQHandler
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv4-sp-d16
 438              	DMA2_Channel4_IRQHandler:
 439              	.LFB1277:
 303:Core/Src/stm32wbxx_it.c **** 
 304:Core/Src/stm32wbxx_it.c **** /**
 305:Core/Src/stm32wbxx_it.c ****   * @brief This function handles DMA2 channel4 global interrupt.
 306:Core/Src/stm32wbxx_it.c ****   */
 307:Core/Src/stm32wbxx_it.c **** void DMA2_Channel4_IRQHandler(void)
 308:Core/Src/stm32wbxx_it.c **** {
 440              		.loc 1 308 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              	.LCFI8:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 3, -8
 448              		.cfi_offset 14, -4
 309:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DMA2_Channel4_IRQn 0 */
 310:Core/Src/stm32wbxx_it.c **** 
 311:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DMA2_Channel4_IRQn 0 */
 312:Core/Src/stm32wbxx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 449              		.loc 1 312 3 view .LVU51
 450 0002 0248     		ldr	r0, .L38
 451 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 452              	.LVL8:
 313:Core/Src/stm32wbxx_it.c ****   /* USER CODE BEGIN DMA2_Channel4_IRQn 1 */
 314:Core/Src/stm32wbxx_it.c **** 
 315:Core/Src/stm32wbxx_it.c ****   /* USER CODE END DMA2_Channel4_IRQn 1 */
 316:Core/Src/stm32wbxx_it.c **** }
 453              		.loc 1 316 1 is_stmt 0 view .LVU52
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 14


 454 0008 08BD     		pop	{r3, pc}
 455              	.L39:
 456 000a 00BF     		.align	2
 457              	.L38:
 458 000c 00000000 		.word	hdma_usart1_tx
 459              		.cfi_endproc
 460              	.LFE1277:
 462              		.text
 463              	.Letext0:
 464              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 465              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 466              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 467              		.file 5 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 468              		.file 6 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wb55xx.h"
 469              		.file 7 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 470              		.file 8 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_dma.h"
 471              		.file 9 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_flash.h"
 472              		.file 10 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_ipcc.h"
 473              		.file 11 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_rtc.h"
 474              		.file 12 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_uart.h"
 475              		.file 13 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
 476              		.file 14 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 477              		.file 15 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 478              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 479              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 480              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 481              		.file 19 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_hsem.h"
 482              		.file 20 "Middlewares/ST/STM32_WPAN/interface/patterns/ble_thread/hw.h"
 483              		.file 21 "Core/Inc/hw_if.h"
ARM GAS  /var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wbxx_it.c
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:18     .text.NMI_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:44     .text.HardFault_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:68     .text.MemManage_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:75     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:92     .text.BusFault_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:116    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:123    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:140    .text.SVC_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:147    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:160    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:167    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:180    .text.PendSV_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:187    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:200    .text.SysTick_Handler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:207    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:227    .text.RTC_WKUP_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:234    .text.RTC_WKUP_IRQHandler:0000000000000000 RTC_WKUP_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:254    .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:261    .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:281    .text.DMA1_Channel4_IRQHandler:000000000000000c $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:286    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:293    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:313    .text.USART1_IRQHandler:000000000000000c $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:318    .text.LPUART1_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:325    .text.LPUART1_IRQHandler:0000000000000000 LPUART1_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:345    .text.LPUART1_IRQHandler:000000000000000c $d
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:350    .text.IPCC_C1_RX_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:357    .text.IPCC_C1_RX_IRQHandler:0000000000000000 IPCC_C1_RX_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:377    .text.IPCC_C1_TX_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:384    .text.IPCC_C1_TX_IRQHandler:0000000000000000 IPCC_C1_TX_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:404    .text.HSEM_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:411    .text.HSEM_IRQHandler:0000000000000000 HSEM_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:431    .text.DMA2_Channel4_IRQHandler:0000000000000000 $t
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:438    .text.DMA2_Channel4_IRQHandler:0000000000000000 DMA2_Channel4_IRQHandler
/var/folders/lt/l_qrc8c54t93n_phsj7cf5tc0000gn/T//ccQSqe7L.s:458    .text.DMA2_Channel4_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HW_TS_RTC_Wakeup_Handler
HAL_DMA_IRQHandler
hdma_lpuart1_tx
HAL_UART_IRQHandler
huart1
hlpuart1
HW_IPCC_Rx_Handler
HW_IPCC_Tx_Handler
HAL_HSEM_IRQHandler
hdma_usart1_tx
